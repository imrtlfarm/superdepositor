{
	"id": "76756539d9190d4a0836245e017c0a1d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"SuperDepositor.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\r\npragma solidity 0.8.13;\r\n\r\nimport \"./interfaces/IBeetVault.sol\";\r\nimport \"./interfaces/IVault.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\r\n\r\n/// @title BeetsHelper\r\n/// @author z80 and Eidolon\r\ncontract BeetsHelper {\r\n\r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    address public immutable balVault;\r\n\r\n    // this will hold all the data we need to:\r\n    // 1. Deposit/Withdraw our funds into Beethoven and obtain LPs\r\n    // 2. Deposit/Withdraw those LPs into reaper and obtain vault shares\r\n    // 3. Transfer those vault shares to the intended recipient\r\n    struct VaultParams {\r\n        IAsset[] underlyings;\r\n        uint256 tokenIndex;\r\n        bytes32 beetsPoolId;\r\n        address lpToken; // needed for approval to deposit\r\n        address vault;\r\n        address recipient;\r\n    }\r\n\r\n    constructor(address _balVault) {\r\n        balVault = _balVault;\r\n    }\r\n\r\n    function routeDeposit(address tokenIn, VaultParams memory details, uint256 amount) public {\r\n        //I think trading on firebird is the most optimal thing to do\r\n        //before we do the deposit, if we can swing it\r\n        address depositToken = address(details.underlyings[details.tokenIndex]);\r\n        if(tokenIn == depositToken){\r\n            _singleSideDeposit(details, amount);\r\n        } else {\r\n            //firebird route from tokenIn to depositToken\r\n        }\r\n        \r\n    }\r\n\r\n    function _singleSideDeposit(VaultParams memory details, uint256 amount) public {\r\n        IERC20Upgradeable inputToken = IERC20Upgradeable(address(details.underlyings[details.tokenIndex]));\r\n        inputToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        _joinPool(details.underlyings, amount, details.tokenIndex, details.beetsPoolId); // contract has lp tokens\r\n        _depositLPToVault(details.lpToken, details.vault, details.recipient);\r\n    }\r\n\r\n    function _singleSideWithdraw(VaultParams memory details, uint256 amount) public {\r\n        IERC20Upgradeable inputToken = IERC20Upgradeable(details.vault);\r\n        inputToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        IVault(details.vault).withdrawAll();\r\n        _exitPool(details.underlyings, amount, details.tokenIndex, details.beetsPoolId);\r\n    }\r\n    \r\n    function _depositLPToVault(address lp, address vault, address recipient) internal {\r\n\r\n        // approve lp\r\n        _approveIfNeeded(vault, lp); // sets to max if needed\r\n\r\n        // deposit lp\r\n        IVault(vault).depositAll();\r\n\r\n        // transfer to user\r\n        IERC20Upgradeable shares = IERC20Upgradeable(vault);\r\n        shares.safeTransfer(recipient, shares.balanceOf(address(this)));\r\n    }\r\n\r\n    function _approveIfNeeded(address spender, address token) internal {\r\n        IERC20Upgradeable token_ = IERC20Upgradeable(token);\r\n        if (token_.allowance(address(this), spender) == uint256(0)) {\r\n            token_.safeIncreaseAllowance(spender, type(uint256).max);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Joins {beetsPoolId} using {underlyings[tokenIndex]} balance;\r\n     */\r\n    function _joinPool(IAsset[] memory underlyings, uint256 amtIn, uint256 tokenIndex, bytes32 beetsPoolId) internal {\r\n        uint8 joinKind = 1;\r\n\r\n        // default values of 0 for all assets except one we're depositing with\r\n        uint256[] memory amountsIn = new uint256[](underlyings.length);\r\n        amountsIn[tokenIndex] = amtIn;\r\n\r\n        uint256 minAmountOut = 1; // fix this later, slippage protection\r\n\r\n        bytes memory userData = abi.encode(joinKind, amountsIn, minAmountOut);\r\n\r\n        IBeetVault.JoinPoolRequest memory request;\r\n        request.assets = underlyings;\r\n        request.maxAmountsIn = amountsIn;\r\n        request.userData = userData;\r\n        request.fromInternalBalance = false;\r\n\r\n        IERC20Upgradeable(address(underlyings[tokenIndex])).safeIncreaseAllowance(balVault, amtIn);\r\n        IBeetVault(balVault).joinPool(beetsPoolId, address(this), address(this), request);\r\n    }\r\n\r\n    function _exitPool(IAsset[] memory underlyings, uint256 amtOut, uint256 tokenIndex, bytes32 beetsPoolId) internal {\r\n\r\n        // default values of 0 for all assets except one we're withdrawing to\r\n        uint256[] memory minAmountsOut = new uint256[](underlyings.length);\r\n        minAmountsOut[tokenIndex] = amtOut;\r\n\r\n        uint256 minAmountOut = 1; // fix this later, slippage protection\r\n\r\n        bytes memory userData = abi.encode(0,minAmountsOut, minAmountOut);\r\n\r\n        IBeetVault.ExitPoolRequest memory request;\r\n        request.assets = underlyings;\r\n        request.minAmountsOut = minAmountsOut;\r\n        request.userData = userData;\r\n        request.toInternalBalance = false;\r\n\r\n        //IERC20Upgradeable(address(underlyings[tokenIndex])).safeIncreaseAllowance(balVault, amtIn);\r\n        IBeetVault(balVault).exitPool(beetsPoolId, address(this), payable(msg.sender), request);//msg.sender is the eoa withdrawing\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"interfaces/IVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IVault {\r\n    function getPricePerFullShare() external view returns (uint256);\r\n    function depositAll() external;\r\n    function withdrawAll() external;\r\n}\r\n"
			},
			"interfaces/IBeetVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"./ISignaturesValidator.sol\";\r\nimport \"./ITemporarilyPausable.sol\";\r\nimport \"./IAuthorizer.sol\";\r\nimport \"./IAsset.sol\";\r\n\r\ninterface IBeetVault is ISignaturesValidator, ITemporarilyPausable {\r\n    // Generalities about the Vault:\r\n    //\r\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\r\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\r\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\r\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\r\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\r\n    //\r\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\r\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\r\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\r\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\r\n    //\r\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\r\n\r\n    // Authorizer\r\n    //\r\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\r\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\r\n    // can perform a given action.\r\n\r\n    /**\r\n     * @dev Returns the Vault's Authorizer.\r\n     */\r\n    function getAuthorizer() external view returns (IAuthorizer);\r\n\r\n    /**\r\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\r\n     *\r\n     * Emits an `AuthorizerChanged` event.\r\n     */\r\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\r\n\r\n    /**\r\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\r\n     */\r\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\r\n\r\n    // Relayers\r\n    //\r\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\r\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\r\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\r\n    // this power, two things must occur:\r\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\r\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\r\n    //    functions.\r\n    //  - Each user must approve the relayer to act on their behalf.\r\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\r\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\r\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\r\n\r\n    /**\r\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\r\n     */\r\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\r\n     *\r\n     * Emits a `RelayerApprovalChanged` event.\r\n     */\r\n    function setRelayerApproval(\r\n        address sender,\r\n        address relayer,\r\n        bool approved\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\r\n     */\r\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\r\n\r\n    // Internal Balance\r\n    //\r\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\r\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\r\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\r\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\r\n    //\r\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\r\n    // operations of different kinds, with different senders and recipients, at once.\r\n\r\n    /**\r\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\r\n     */\r\n    function getInternalBalance(address user, IERC20Upgradeable[] memory tokens)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\r\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\r\n     * it lets integrators reuse a user's Vault allowance.\r\n     *\r\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\r\n     */\r\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\r\n\r\n    /**\r\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\r\n     without manual WETH wrapping or unwrapping.\r\n     */\r\n    struct UserBalanceOp {\r\n        UserBalanceOpKind kind;\r\n        IAsset asset;\r\n        uint256 amount;\r\n        address sender;\r\n        address payable recipient;\r\n    }\r\n\r\n    // There are four possible operations in `manageUserBalance`:\r\n    //\r\n    // - DEPOSIT_INTERNAL\r\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\r\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\r\n    //\r\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\r\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\r\n    // relevant for relayers).\r\n    //\r\n    // Emits an `InternalBalanceChanged` event.\r\n    //\r\n    //\r\n    // - WITHDRAW_INTERNAL\r\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\r\n    //\r\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\r\n    // it to the recipient as ETH.\r\n    //\r\n    // Emits an `InternalBalanceChanged` event.\r\n    //\r\n    //\r\n    // - TRANSFER_INTERNAL\r\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\r\n    //\r\n    // Reverts if the ETH sentinel value is passed.\r\n    //\r\n    // Emits an `InternalBalanceChanged` event.\r\n    //\r\n    //\r\n    // - TRANSFER_EXTERNAL\r\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\r\n    // relayers, as it lets them reuse a user's Vault allowance.\r\n    //\r\n    // Reverts if the ETH sentinel value is passed.\r\n    //\r\n    // Emits an `ExternalBalanceTransfer` event.\r\n\r\n    enum UserBalanceOpKind {\r\n        DEPOSIT_INTERNAL,\r\n        WITHDRAW_INTERNAL,\r\n        TRANSFER_INTERNAL,\r\n        TRANSFER_EXTERNAL\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\r\n     * interacting with Pools using Internal Balance.\r\n     *\r\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\r\n     * address.\r\n     */\r\n    event InternalBalanceChanged(address indexed user, IERC20Upgradeable indexed token, int256 delta);\r\n\r\n    /**\r\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\r\n     */\r\n    event ExternalBalanceTransfer(\r\n        IERC20Upgradeable indexed token,\r\n        address indexed sender,\r\n        address recipient,\r\n        uint256 amount\r\n    );\r\n\r\n    // Pools\r\n    //\r\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\r\n    // functionality:\r\n    //\r\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\r\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\r\n    // which increase with the number of registered tokens.\r\n    //\r\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\r\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\r\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\r\n    // independent of the number of registered tokens.\r\n    //\r\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\r\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\r\n\r\n    enum PoolSpecialization {\r\n        GENERAL,\r\n        MINIMAL_SWAP_INFO,\r\n        TWO_TOKEN\r\n    }\r\n\r\n    /**\r\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\r\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\r\n     * changed.\r\n     *\r\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\r\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\r\n     *\r\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\r\n     * multiple Pools may share the same contract.\r\n     *\r\n     * Emits a `PoolRegistered` event.\r\n     */\r\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\r\n\r\n    /**\r\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\r\n     */\r\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\r\n\r\n    /**\r\n     * @dev Returns a Pool's contract address and specialization setting.\r\n     */\r\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\r\n\r\n    /**\r\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\r\n     *\r\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\r\n     * exit by receiving registered tokens, and can only swap registered tokens.\r\n     *\r\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\r\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\r\n     * ascending order.\r\n     *\r\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\r\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\r\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\r\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\r\n     * Asset Manager should not be made lightly.\r\n     *\r\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\r\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\r\n     * different Asset Manager.\r\n     *\r\n     * Emits a `TokensRegistered` event.\r\n     */\r\n    function registerTokens(\r\n        bytes32 poolId,\r\n        IERC20Upgradeable[] memory tokens,\r\n        address[] memory assetManagers\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\r\n     */\r\n    event TokensRegistered(bytes32 indexed poolId, IERC20Upgradeable[] tokens, address[] assetManagers);\r\n\r\n    /**\r\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\r\n     *\r\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\r\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\r\n     * must be deregistered in the same `deregisterTokens` call.\r\n     *\r\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\r\n     *\r\n     * Emits a `TokensDeregistered` event.\r\n     */\r\n    function deregisterTokens(bytes32 poolId, IERC20Upgradeable[] memory tokens) external;\r\n\r\n    /**\r\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\r\n     */\r\n    event TokensDeregistered(bytes32 indexed poolId, IERC20Upgradeable[] tokens);\r\n\r\n    /**\r\n     * @dev Returns detailed information for a Pool's registered token.\r\n     *\r\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\r\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\r\n     * equals the sum of `cash` and `managed`.\r\n     *\r\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\r\n     * `managed` or `total` balance to be greater than 2^112 - 1.\r\n     *\r\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\r\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\r\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\r\n     * change for this purpose, and will update `lastChangeBlock`.\r\n     *\r\n     * `assetManager` is the Pool's token Asset Manager.\r\n     */\r\n    function getPoolTokenInfo(bytes32 poolId, IERC20Upgradeable token)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 cash,\r\n            uint256 managed,\r\n            uint256 lastChangeBlock,\r\n            address assetManager\r\n        );\r\n\r\n    /**\r\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\r\n     * the tokens' `balances` changed.\r\n     *\r\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\r\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\r\n     *\r\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\r\n     * order as passed to `registerTokens`.\r\n     *\r\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\r\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\r\n     * instead.\r\n     */\r\n    function getPoolTokens(bytes32 poolId)\r\n        external\r\n        view\r\n        returns (\r\n            IERC20Upgradeable[] memory tokens,\r\n            uint256[] memory balances,\r\n            uint256 lastChangeBlock\r\n        );\r\n\r\n    /**\r\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\r\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\r\n     * Pool shares.\r\n     *\r\n     * If the caller is not `sender`, it must be an authorized relayer for them.\r\n     *\r\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\r\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\r\n     * these maximums.\r\n     *\r\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\r\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\r\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\r\n     * back to the caller (not the sender, which is important for relayers).\r\n     *\r\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\r\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\r\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\r\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\r\n     *\r\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\r\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\r\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\r\n     *\r\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\r\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\r\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\r\n     * directly to the Pool's contract, as is `recipient`.\r\n     *\r\n     * Emits a `PoolBalanceChanged` event.\r\n     */\r\n    function joinPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        JoinPoolRequest memory request\r\n    ) external payable;\r\n\r\n    struct JoinPoolRequest {\r\n        IAsset[] assets;\r\n        uint256[] maxAmountsIn;\r\n        bytes userData;\r\n        bool fromInternalBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\r\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\r\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\r\n     * `getPoolTokenInfo`).\r\n     *\r\n     * If the caller is not `sender`, it must be an authorized relayer for them.\r\n     *\r\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\r\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\r\n     * it just enforces these minimums.\r\n     *\r\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\r\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\r\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\r\n     *\r\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\r\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\r\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\r\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\r\n     *\r\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\r\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\r\n     * do so will trigger a revert.\r\n     *\r\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\r\n     * `tokens` array. This array must match the Pool's registered tokens.\r\n     *\r\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\r\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\r\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\r\n     * passed directly to the Pool's contract.\r\n     *\r\n     * Emits a `PoolBalanceChanged` event.\r\n     */\r\n    function exitPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address payable recipient,\r\n        ExitPoolRequest memory request\r\n    ) external;\r\n\r\n    struct ExitPoolRequest {\r\n        IAsset[] assets;\r\n        uint256[] minAmountsOut;\r\n        bytes userData;\r\n        bool toInternalBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\r\n     */\r\n    event PoolBalanceChanged(\r\n        bytes32 indexed poolId,\r\n        address indexed liquidityProvider,\r\n        IERC20Upgradeable[] tokens,\r\n        int256[] deltas,\r\n        uint256[] protocolFeeAmounts\r\n    );\r\n\r\n    enum PoolBalanceChangeKind {\r\n        JOIN,\r\n        EXIT\r\n    }\r\n\r\n    // Swaps\r\n    //\r\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\r\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\r\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\r\n    //\r\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\r\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\r\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\r\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\r\n    // individual swaps.\r\n    //\r\n    // There are two swap kinds:\r\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\r\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\r\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\r\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\r\n    //\r\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\r\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\r\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\r\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\r\n    // the final intended token.\r\n    //\r\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\r\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\r\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\r\n    // much less gas than they would otherwise.\r\n    //\r\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\r\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\r\n    // updating the Pool's internal accounting).\r\n    //\r\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\r\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\r\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\r\n    //\r\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\r\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\r\n    //\r\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\r\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\r\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\r\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\r\n    //\r\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\r\n\r\n    enum SwapKind {\r\n        GIVEN_IN,\r\n        GIVEN_OUT\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a swap with a single Pool.\r\n     *\r\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\r\n     * taken from the Pool, which must be greater than or equal to `limit`.\r\n     *\r\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\r\n     * sent to the Pool, which must be less than or equal to `limit`.\r\n     *\r\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\r\n     *\r\n     * Emits a `Swap` event.\r\n     */\r\n    function swap(\r\n        SingleSwap memory singleSwap,\r\n        FundManagement memory funds,\r\n        uint256 limit,\r\n        uint256 deadline\r\n    ) external payable returns (uint256);\r\n\r\n    /**\r\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\r\n     * the `kind` value.\r\n     *\r\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\r\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\r\n     *\r\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\r\n     * used to extend swap behavior.\r\n     */\r\n    struct SingleSwap {\r\n        bytes32 poolId;\r\n        SwapKind kind;\r\n        IAsset assetIn;\r\n        IAsset assetOut;\r\n        uint256 amount;\r\n        bytes userData;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\r\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\r\n     *\r\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\r\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\r\n     * the same index in the `assets` array.\r\n     *\r\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\r\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\r\n     * `amountOut` depending on the swap kind.\r\n     *\r\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\r\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\r\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\r\n     *\r\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\r\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\r\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\r\n     * or unwrapped from WETH by the Vault.\r\n     *\r\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\r\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\r\n     *\r\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\r\n     * equivalent `swap` call.\r\n     *\r\n     * Emits `Swap` events.\r\n     */\r\n    function batchSwap(\r\n        SwapKind kind,\r\n        BatchSwapStep[] memory swaps,\r\n        IAsset[] memory assets,\r\n        FundManagement memory funds,\r\n        int256[] memory limits,\r\n        uint256 deadline\r\n    ) external payable returns (int256[] memory);\r\n\r\n    /**\r\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\r\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\r\n     *\r\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\r\n     * from the previous swap, depending on the swap kind.\r\n     *\r\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\r\n     * used to extend swap behavior.\r\n     */\r\n    struct BatchSwapStep {\r\n        bytes32 poolId;\r\n        uint256 assetInIndex;\r\n        uint256 assetOutIndex;\r\n        uint256 amount;\r\n        bytes userData;\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\r\n     */\r\n    event Swap(\r\n        bytes32 indexed poolId,\r\n        IERC20Upgradeable indexed tokenIn,\r\n        IERC20Upgradeable indexed tokenOut,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    /**\r\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\r\n     * `recipient` account.\r\n     *\r\n     * If the caller is not `sender`, it must be an authorized relayer for them.\r\n     *\r\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\r\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\r\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\r\n     * `joinPool`.\r\n     *\r\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\r\n     * transferred. This matches the behavior of `exitPool`.\r\n     *\r\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\r\n     * revert.\r\n     */\r\n    struct FundManagement {\r\n        address sender;\r\n        bool fromInternalBalance;\r\n        address payable recipient;\r\n        bool toInternalBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\r\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\r\n     *\r\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\r\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\r\n     * receives are the same that an equivalent `batchSwap` call would receive.\r\n     *\r\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\r\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\r\n     * approve them for the Vault, or even know a user's address.\r\n     *\r\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\r\n     * eth_call instead of eth_sendTransaction.\r\n     */\r\n    function queryBatchSwap(\r\n        SwapKind kind,\r\n        BatchSwapStep[] memory swaps,\r\n        IAsset[] memory assets,\r\n        FundManagement memory funds\r\n    ) external returns (int256[] memory assetDeltas);\r\n\r\n    // Asset Management\r\n    //\r\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\r\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\r\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\r\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\r\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\r\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\r\n    //\r\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\r\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\r\n    //\r\n    // This concept is unrelated to the IAsset interface.\r\n\r\n    /**\r\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\r\n     *\r\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\r\n     * operations of different kinds, with different Pools and tokens, at once.\r\n     *\r\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\r\n     */\r\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\r\n\r\n    struct PoolBalanceOp {\r\n        PoolBalanceOpKind kind;\r\n        bytes32 poolId;\r\n        IERC20Upgradeable token;\r\n        uint256 amount;\r\n    }\r\n\r\n    /**\r\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\r\n     *\r\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\r\n     *\r\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\r\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\r\n     */\r\n    enum PoolBalanceOpKind {\r\n        WITHDRAW,\r\n        DEPOSIT,\r\n        UPDATE\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\r\n     */\r\n    event PoolBalanceManaged(\r\n        bytes32 indexed poolId,\r\n        address indexed assetManager,\r\n        IERC20Upgradeable indexed token,\r\n        int256 cashDelta,\r\n        int256 managedDelta\r\n    );\r\n\r\n    // Protocol Fees\r\n    //\r\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\r\n    // permissioned accounts.\r\n    //\r\n    // There are two kinds of protocol fees:\r\n    //\r\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\r\n    //\r\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\r\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\r\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\r\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\r\n    // exiting a Pool in debt without first paying their share.\r\n\r\n    /**\r\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\r\n     * error in some part of the system.\r\n     *\r\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\r\n     *\r\n     * While the contract is paused, the following features are disabled:\r\n     * - depositing and transferring internal balance\r\n     * - transferring external balance (using the Vault's allowance)\r\n     * - swaps\r\n     * - joining Pools\r\n     * - Asset Manager interactions\r\n     *\r\n     * Internal Balance can still be withdrawn, and Pools exited.\r\n     */\r\n    function setPaused(bool paused) external;\r\n\r\n    /**\r\n     * @dev Returns the Vault's WETH instance.\r\n     */\r\n}\r\n"
			},
			"interfaces/IAsset.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\r\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\r\n * types.\r\n *\r\n * This concept is unrelated to a Pool's Asset Managers.\r\n */\r\ninterface IAsset {\r\n    // solhint-disable-previous-line no-empty-blocks\r\n}\r\n"
			},
			"interfaces/IAuthorizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IAuthorizer {\r\n    /**\r\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\r\n     */\r\n    function canPerform(\r\n        bytes32 actionId,\r\n        address account,\r\n        address where\r\n    ) external view returns (bool);\r\n}\r\n"
			},
			"interfaces/ITemporarilyPausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface ITemporarilyPausable {\r\n    /**\r\n     * @dev Emitted every time the pause state changes by `_setPaused`.\r\n     */\r\n    event PausedStateChanged(bool paused);\r\n\r\n    /**\r\n     * @dev Returns the current paused state.\r\n     */\r\n    function getPausedState()\r\n        external\r\n        view\r\n        returns (\r\n            bool paused,\r\n            uint256 pauseWindowEndTime,\r\n            uint256 bufferPeriodEndTime\r\n        );\r\n}\r\n"
			},
			"interfaces/ISignaturesValidator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\r\n */\r\ninterface ISignaturesValidator {\r\n    /**\r\n     * @dev Returns the EIP712 domain separator.\r\n     */\r\n    function getDomainSeparator() external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Returns the next nonce used by an address to sign messages.\r\n     */\r\n    function getNextNonce(address user) external view returns (uint256);\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = _setInitializedVersion(1);\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        bool isTopLevelCall = _setInitializedVersion(version);\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(version);\n        }\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        _setInitializedVersion(type(uint8).max);\n    }\n\n    function _setInitializedVersion(uint8 version) private returns (bool) {\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\n        // of initializers, because in other contexts the contract may have been reentered.\n        if (_initializing) {\n            require(\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\n                \"Initializable: contract is already initialized\"\n            );\n            return false;\n        } else {\n            require(_initialized < version, \"Initializable: contract is already initialized\");\n            _initialized = version;\n            return true;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1482:13254  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1482:13254  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3430:3521  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2560  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2579:2584  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2584  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4853:4857  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4869:4882  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4885:4897  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4885:4895  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4885:4897  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4869:4897  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4916:4921  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4923:4930  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4932:4938  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4915  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4956:4960  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4949:4960  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3642:3649  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3668:3680  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3661:3680  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5656:5660  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5672:5687  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5690:5702  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5690:5700  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5690:5702  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5672:5702  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5728:5732  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5734:5741  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5743:5749  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5727  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5770:5774  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5776:5778  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5780:5786  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5769  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5804:5808  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5797:5808  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3430:3521  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3488:3493  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3512:3514  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3505:3514  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3430:3521  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6298:6302  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6314:6327  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6330:6342  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6330:6340  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6330:6342  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6314:6342  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6361:6366  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6405:6415  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6387:6392  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6394:6401  spender */\n      dup10\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6386  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6415  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6360  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6433:6437  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6426:6437  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3819:3826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3854  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3855:3862  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3838:3863  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2760:2773  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2799  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2785:2799  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7040:7053  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7056:7068  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7056:7066  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7056:7068  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7040:7068  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7078:7102  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7115:7120  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7122:7129  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7114  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7078:7130  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7168:7183  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7164  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7183  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7268:7273  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7275:7282  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7303:7318  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7318  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7267  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7347:7351  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7340:7351  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4145:4149  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4161:4174  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4177:4189  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4177:4187  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4177:4189  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4161:4189  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4209:4214  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4216:4218  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4220:4226  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4208  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4244:4248  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4237:4248  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4402:4409  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4439  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4440:4445  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4455  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4447:4454  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4455  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4421:4455  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10456:10826  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10604:10605  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10587:10606  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10587:10592  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10587:10606  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10579:10647  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10684:10685  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10665:10686  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10665:10672  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10665:10686  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10657:10725  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10766:10772  amount */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10736:10747  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10736:10754  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10748:10753  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10736:10754  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10736:10763  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10755:10762  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10736:10763  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10736:10772  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10803:10810  spender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10787:10819  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10796:10801  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10787:10819  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10812:10818  amount */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10787:10819  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10456:10826  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11107:11548  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11237:11261  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11289  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11274:11279  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11281:11288  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11273  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11264:11289  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11237:11289  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11323:11340  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11303:11319  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11303:11340  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11299:11542  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11384:11390  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11364:11380  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11364:11390  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11356:11424  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11466:11517  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11475:11480  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11489  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11510:11516  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11491:11507  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11491:11516  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11466:11474  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11466:11517  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11299:11542  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11227:11548  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11107:11548  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:8472  function _transfer(... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7963:7964  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7947:7965  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7947:7951  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7947:7965  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7939:8007  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8039:8040  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8025:8041  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8025:8027  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8025:8041  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8017:8081  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8092:8130  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8113:8117  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8119:8121  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8123:8129  amount */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8092:8112  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8092:8130  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8141:8160  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8163:8172  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8163:8178  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8173:8177  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8163:8178  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8141:8178  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8211:8217  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8196:8207  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8196:8217  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8188:8260  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8326:8332  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8312:8323  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8312:8332  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8303  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8304:8308  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8332  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8369:8375  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8352:8361  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8352:8365  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8362:8364  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8352:8365  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8352:8375  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8406:8408  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8391:8417  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8400:8404  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8391:8417  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8410:8416  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8391:8417  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8428:8465  _afterTokenTransfer(from, to, amount) */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8448:8452  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8454:8456  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8458:8464  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8428:8447  _afterTokenTransfer */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8428:8465  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7929:8472  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7821:8472  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12132:12253  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12841:12961  function _afterTokenTransfer(... */\n    tag_138:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_141:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_142:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_143:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_181:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_181)\n    tag_183:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_184:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_144:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_145:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_187\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_141\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":879:950   */\n      tag_188\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_142\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_189\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_143\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1036:1065   */\n      tag_190\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_18:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_192\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_145\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_147:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_149:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_150:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_198\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_151:\n        /* \"#utility.yul\":2031:2055   */\n      tag_200\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_150\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_201:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_152:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_203\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_151\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_153:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_154:\n        /* \"#utility.yul\":2387:2411   */\n      tag_206\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_153\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_207:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_155:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_209\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_154\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_21:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_212\n      tag_147\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2680:2799   */\n    tag_211:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_213\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_152\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_214\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_155\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_156:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_157:\n        /* \"#utility.yul\":3244:3265   */\n      tag_217\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_24:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_219\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_157\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_158:\n        /* \"#utility.yul\":3581:3605   */\n      tag_221\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_153\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_28:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_223\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_158\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_31:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_226\n      tag_147\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3956:4075   */\n    tag_225:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_227\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_152\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_228\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_152\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_229\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_155\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_159:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_160:\n        /* \"#utility.yul\":4646:4668   */\n      tag_232\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_37:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_234\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_160\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_44:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_237\n      tag_147\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4977:5096   */\n    tag_236:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_238\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5710   */\n    tag_60:\n        /* \"#utility.yul\":5304:5310   */\n      0x00\n        /* \"#utility.yul\":5312:5318   */\n      dup1\n        /* \"#utility.yul\":5361:5363   */\n      0x40\n        /* \"#utility.yul\":5349:5358   */\n      dup4\n        /* \"#utility.yul\":5340:5347   */\n      dup6\n        /* \"#utility.yul\":5336:5359   */\n      sub\n        /* \"#utility.yul\":5332:5364   */\n      slt\n        /* \"#utility.yul\":5329:5448   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5367:5446   */\n      tag_241\n      tag_147\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5329:5448   */\n    tag_240:\n        /* \"#utility.yul\":5487:5488   */\n      0x00\n        /* \"#utility.yul\":5512:5565   */\n      tag_242\n        /* \"#utility.yul\":5557:5564   */\n      dup6\n        /* \"#utility.yul\":5548:5554   */\n      dup3\n        /* \"#utility.yul\":5537:5546   */\n      dup7\n        /* \"#utility.yul\":5533:5555   */\n      add\n        /* \"#utility.yul\":5512:5565   */\n      tag_152\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5502:5565   */\n      swap3\n      pop\n        /* \"#utility.yul\":5458:5575   */\n      pop\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5640:5693   */\n      tag_243\n        /* \"#utility.yul\":5685:5692   */\n      dup6\n        /* \"#utility.yul\":5676:5682   */\n      dup3\n        /* \"#utility.yul\":5665:5674   */\n      dup7\n        /* \"#utility.yul\":5661:5683   */\n      add\n        /* \"#utility.yul\":5640:5693   */\n      tag_152\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5630:5693   */\n      swap2\n      pop\n        /* \"#utility.yul\":5585:5703   */\n      pop\n        /* \"#utility.yul\":5236:5710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5896   */\n    tag_161:\n        /* \"#utility.yul\":5764:5841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5761:5762   */\n      0x00\n        /* \"#utility.yul\":5754:5842   */\n      mstore\n        /* \"#utility.yul\":5861:5865   */\n      0x22\n        /* \"#utility.yul\":5858:5859   */\n      0x04\n        /* \"#utility.yul\":5851:5866   */\n      mstore\n        /* \"#utility.yul\":5885:5889   */\n      0x24\n        /* \"#utility.yul\":5882:5883   */\n      0x00\n        /* \"#utility.yul\":5875:5890   */\n      revert\n        /* \"#utility.yul\":5902:6222   */\n    tag_65:\n        /* \"#utility.yul\":5946:5952   */\n      0x00\n        /* \"#utility.yul\":5983:5984   */\n      0x02\n        /* \"#utility.yul\":5977:5981   */\n      dup3\n        /* \"#utility.yul\":5973:5985   */\n      div\n        /* \"#utility.yul\":5963:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6030:6031   */\n      0x01\n        /* \"#utility.yul\":6024:6028   */\n      dup3\n        /* \"#utility.yul\":6020:6032   */\n      and\n        /* \"#utility.yul\":6051:6069   */\n      dup1\n        /* \"#utility.yul\":6041:6122   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6107:6111   */\n      0x7f\n        /* \"#utility.yul\":6099:6105   */\n      dup3\n        /* \"#utility.yul\":6095:6112   */\n      and\n        /* \"#utility.yul\":6085:6112   */\n      swap2\n      pop\n        /* \"#utility.yul\":6041:6122   */\n    tag_246:\n        /* \"#utility.yul\":6169:6171   */\n      0x20\n        /* \"#utility.yul\":6161:6167   */\n      dup3\n        /* \"#utility.yul\":6158:6172   */\n      lt\n        /* \"#utility.yul\":6138:6156   */\n      dup2\n        /* \"#utility.yul\":6135:6173   */\n      sub\n        /* \"#utility.yul\":6132:6216   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6188:6206   */\n      tag_248\n      tag_161\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6132:6216   */\n    tag_247:\n        /* \"#utility.yul\":5953:6222   */\n      pop\n        /* \"#utility.yul\":5902:6222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6228:6408   */\n    tag_162:\n        /* \"#utility.yul\":6276:6353   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6273:6274   */\n      0x00\n        /* \"#utility.yul\":6266:6354   */\n      mstore\n        /* \"#utility.yul\":6373:6377   */\n      0x11\n        /* \"#utility.yul\":6370:6371   */\n      0x04\n        /* \"#utility.yul\":6363:6378   */\n      mstore\n        /* \"#utility.yul\":6397:6401   */\n      0x24\n        /* \"#utility.yul\":6394:6395   */\n      0x00\n        /* \"#utility.yul\":6387:6402   */\n      revert\n        /* \"#utility.yul\":6414:6719   */\n    tag_88:\n        /* \"#utility.yul\":6454:6457   */\n      0x00\n        /* \"#utility.yul\":6473:6493   */\n      tag_251\n        /* \"#utility.yul\":6491:6492   */\n      dup3\n        /* \"#utility.yul\":6473:6493   */\n      tag_153\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6468:6493   */\n      swap2\n      pop\n        /* \"#utility.yul\":6507:6527   */\n      tag_252\n        /* \"#utility.yul\":6525:6526   */\n      dup4\n        /* \"#utility.yul\":6507:6527   */\n      tag_153\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6502:6527   */\n      swap3\n      pop\n        /* \"#utility.yul\":6661:6662   */\n      dup3\n        /* \"#utility.yul\":6593:6659   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6589:6663   */\n      sub\n        /* \"#utility.yul\":6586:6587   */\n      dup3\n        /* \"#utility.yul\":6583:6664   */\n      gt\n        /* \"#utility.yul\":6580:6687   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":6667:6685   */\n      tag_254\n      tag_162\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6580:6687   */\n    tag_253:\n        /* \"#utility.yul\":6711:6712   */\n      dup3\n        /* \"#utility.yul\":6708:6709   */\n      dup3\n        /* \"#utility.yul\":6704:6713   */\n      add\n        /* \"#utility.yul\":6697:6713   */\n      swap1\n      pop\n        /* \"#utility.yul\":6414:6719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6725:6949   */\n    tag_163:\n        /* \"#utility.yul\":6865:6899   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6853:6859   */\n      dup3\n        /* \"#utility.yul\":6849:6863   */\n      add\n        /* \"#utility.yul\":6842:6900   */\n      mstore\n        /* \"#utility.yul\":6934:6941   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6929:6931   */\n      0x20\n        /* \"#utility.yul\":6921:6927   */\n      dup3\n        /* \"#utility.yul\":6917:6932   */\n      add\n        /* \"#utility.yul\":6910:6942   */\n      mstore\n        /* \"#utility.yul\":6725:6949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6955:7321   */\n    tag_164:\n        /* \"#utility.yul\":7097:7100   */\n      0x00\n        /* \"#utility.yul\":7118:7185   */\n      tag_257\n        /* \"#utility.yul\":7182:7184   */\n      0x25\n        /* \"#utility.yul\":7177:7180   */\n      dup4\n        /* \"#utility.yul\":7118:7185   */\n      tag_142\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7111:7185   */\n      swap2\n      pop\n        /* \"#utility.yul\":7194:7287   */\n      tag_258\n        /* \"#utility.yul\":7283:7286   */\n      dup3\n        /* \"#utility.yul\":7194:7287   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7312:7314   */\n      0x40\n        /* \"#utility.yul\":7307:7310   */\n      dup3\n        /* \"#utility.yul\":7303:7315   */\n      add\n        /* \"#utility.yul\":7296:7315   */\n      swap1\n      pop\n        /* \"#utility.yul\":6955:7321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7746   */\n    tag_101:\n        /* \"#utility.yul\":7493:7497   */\n      0x00\n        /* \"#utility.yul\":7531:7533   */\n      0x20\n        /* \"#utility.yul\":7520:7529   */\n      dup3\n        /* \"#utility.yul\":7516:7534   */\n      add\n        /* \"#utility.yul\":7508:7534   */\n      swap1\n      pop\n        /* \"#utility.yul\":7580:7589   */\n      dup2\n        /* \"#utility.yul\":7574:7578   */\n      dup2\n        /* \"#utility.yul\":7570:7590   */\n      sub\n        /* \"#utility.yul\":7566:7567   */\n      0x00\n        /* \"#utility.yul\":7555:7564   */\n      dup4\n        /* \"#utility.yul\":7551:7568   */\n      add\n        /* \"#utility.yul\":7544:7591   */\n      mstore\n        /* \"#utility.yul\":7608:7739   */\n      tag_260\n        /* \"#utility.yul\":7734:7738   */\n      dup2\n        /* \"#utility.yul\":7608:7739   */\n      tag_164\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7600:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7752:7975   */\n    tag_165:\n        /* \"#utility.yul\":7892:7926   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7888:7889   */\n      0x00\n        /* \"#utility.yul\":7880:7886   */\n      dup3\n        /* \"#utility.yul\":7876:7890   */\n      add\n        /* \"#utility.yul\":7869:7927   */\n      mstore\n        /* \"#utility.yul\":7961:7967   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7956:7958   */\n      0x20\n        /* \"#utility.yul\":7948:7954   */\n      dup3\n        /* \"#utility.yul\":7944:7959   */\n      add\n        /* \"#utility.yul\":7937:7968   */\n      mstore\n        /* \"#utility.yul\":7752:7975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7981:8347   */\n    tag_166:\n        /* \"#utility.yul\":8123:8126   */\n      0x00\n        /* \"#utility.yul\":8144:8211   */\n      tag_263\n        /* \"#utility.yul\":8208:8210   */\n      0x24\n        /* \"#utility.yul\":8203:8206   */\n      dup4\n        /* \"#utility.yul\":8144:8211   */\n      tag_142\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8137:8211   */\n      swap2\n      pop\n        /* \"#utility.yul\":8220:8313   */\n      tag_264\n        /* \"#utility.yul\":8309:8312   */\n      dup3\n        /* \"#utility.yul\":8220:8313   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8338:8340   */\n      0x40\n        /* \"#utility.yul\":8333:8336   */\n      dup3\n        /* \"#utility.yul\":8329:8341   */\n      add\n        /* \"#utility.yul\":8322:8341   */\n      swap1\n      pop\n        /* \"#utility.yul\":7981:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8772   */\n    tag_111:\n        /* \"#utility.yul\":8519:8523   */\n      0x00\n        /* \"#utility.yul\":8557:8559   */\n      0x20\n        /* \"#utility.yul\":8546:8555   */\n      dup3\n        /* \"#utility.yul\":8542:8560   */\n      add\n        /* \"#utility.yul\":8534:8560   */\n      swap1\n      pop\n        /* \"#utility.yul\":8606:8615   */\n      dup2\n        /* \"#utility.yul\":8600:8604   */\n      dup2\n        /* \"#utility.yul\":8596:8616   */\n      sub\n        /* \"#utility.yul\":8592:8593   */\n      0x00\n        /* \"#utility.yul\":8581:8590   */\n      dup4\n        /* \"#utility.yul\":8577:8594   */\n      add\n        /* \"#utility.yul\":8570:8617   */\n      mstore\n        /* \"#utility.yul\":8634:8765   */\n      tag_266\n        /* \"#utility.yul\":8760:8764   */\n      dup2\n        /* \"#utility.yul\":8634:8765   */\n      tag_166\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8626:8765   */\n      swap1\n      pop\n        /* \"#utility.yul\":8353:8772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8778:8999   */\n    tag_167:\n        /* \"#utility.yul\":8918:8952   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8914:8915   */\n      0x00\n        /* \"#utility.yul\":8906:8912   */\n      dup3\n        /* \"#utility.yul\":8902:8916   */\n      add\n        /* \"#utility.yul\":8895:8953   */\n      mstore\n        /* \"#utility.yul\":8987:8991   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8982:8984   */\n      0x20\n        /* \"#utility.yul\":8974:8980   */\n      dup3\n        /* \"#utility.yul\":8970:8985   */\n      add\n        /* \"#utility.yul\":8963:8992   */\n      mstore\n        /* \"#utility.yul\":8778:8999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9371   */\n    tag_168:\n        /* \"#utility.yul\":9147:9150   */\n      0x00\n        /* \"#utility.yul\":9168:9235   */\n      tag_269\n        /* \"#utility.yul\":9232:9234   */\n      0x22\n        /* \"#utility.yul\":9227:9230   */\n      dup4\n        /* \"#utility.yul\":9168:9235   */\n      tag_142\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9161:9235   */\n      swap2\n      pop\n        /* \"#utility.yul\":9244:9337   */\n      tag_270\n        /* \"#utility.yul\":9333:9336   */\n      dup3\n        /* \"#utility.yul\":9244:9337   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9362:9364   */\n      0x40\n        /* \"#utility.yul\":9357:9360   */\n      dup3\n        /* \"#utility.yul\":9353:9365   */\n      add\n        /* \"#utility.yul\":9346:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9005:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9377:9796   */\n    tag_114:\n        /* \"#utility.yul\":9543:9547   */\n      0x00\n        /* \"#utility.yul\":9581:9583   */\n      0x20\n        /* \"#utility.yul\":9570:9579   */\n      dup3\n        /* \"#utility.yul\":9566:9584   */\n      add\n        /* \"#utility.yul\":9558:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9639   */\n      dup2\n        /* \"#utility.yul\":9624:9628   */\n      dup2\n        /* \"#utility.yul\":9620:9640   */\n      sub\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9605:9614   */\n      dup4\n        /* \"#utility.yul\":9601:9618   */\n      add\n        /* \"#utility.yul\":9594:9641   */\n      mstore\n        /* \"#utility.yul\":9658:9789   */\n      tag_272\n        /* \"#utility.yul\":9784:9788   */\n      dup2\n        /* \"#utility.yul\":9658:9789   */\n      tag_168\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9650:9789   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9802:9981   */\n    tag_169:\n        /* \"#utility.yul\":9942:9973   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9938:9939   */\n      0x00\n        /* \"#utility.yul\":9930:9936   */\n      dup3\n        /* \"#utility.yul\":9926:9940   */\n      add\n        /* \"#utility.yul\":9919:9974   */\n      mstore\n        /* \"#utility.yul\":9802:9981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9987:10353   */\n    tag_170:\n        /* \"#utility.yul\":10129:10132   */\n      0x00\n        /* \"#utility.yul\":10150:10217   */\n      tag_275\n        /* \"#utility.yul\":10214:10216   */\n      0x1d\n        /* \"#utility.yul\":10209:10212   */\n      dup4\n        /* \"#utility.yul\":10150:10217   */\n      tag_142\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10143:10217   */\n      swap2\n      pop\n        /* \"#utility.yul\":10226:10319   */\n      tag_276\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10226:10319   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10344:10346   */\n      0x20\n        /* \"#utility.yul\":10339:10342   */\n      dup3\n        /* \"#utility.yul\":10335:10347   */\n      add\n        /* \"#utility.yul\":10328:10347   */\n      swap1\n      pop\n        /* \"#utility.yul\":9987:10353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10359:10778   */\n    tag_121:\n        /* \"#utility.yul\":10525:10529   */\n      0x00\n        /* \"#utility.yul\":10563:10565   */\n      0x20\n        /* \"#utility.yul\":10552:10561   */\n      dup3\n        /* \"#utility.yul\":10548:10566   */\n      add\n        /* \"#utility.yul\":10540:10566   */\n      swap1\n      pop\n        /* \"#utility.yul\":10612:10621   */\n      dup2\n        /* \"#utility.yul\":10606:10610   */\n      dup2\n        /* \"#utility.yul\":10602:10622   */\n      sub\n        /* \"#utility.yul\":10598:10599   */\n      0x00\n        /* \"#utility.yul\":10587:10596   */\n      dup4\n        /* \"#utility.yul\":10583:10600   */\n      add\n        /* \"#utility.yul\":10576:10623   */\n      mstore\n        /* \"#utility.yul\":10640:10771   */\n      tag_278\n        /* \"#utility.yul\":10766:10770   */\n      dup2\n        /* \"#utility.yul\":10640:10771   */\n      tag_170\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10632:10771   */\n      swap1\n      pop\n        /* \"#utility.yul\":10359:10778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10784:11008   */\n    tag_171:\n        /* \"#utility.yul\":10924:10958   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10920:10921   */\n      0x00\n        /* \"#utility.yul\":10912:10918   */\n      dup3\n        /* \"#utility.yul\":10908:10922   */\n      add\n        /* \"#utility.yul\":10901:10959   */\n      mstore\n        /* \"#utility.yul\":10993:11000   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10988:10990   */\n      0x20\n        /* \"#utility.yul\":10980:10986   */\n      dup3\n        /* \"#utility.yul\":10976:10991   */\n      add\n        /* \"#utility.yul\":10969:11001   */\n      mstore\n        /* \"#utility.yul\":10784:11008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11014:11380   */\n    tag_172:\n        /* \"#utility.yul\":11156:11159   */\n      0x00\n        /* \"#utility.yul\":11177:11244   */\n      tag_281\n        /* \"#utility.yul\":11241:11243   */\n      0x25\n        /* \"#utility.yul\":11236:11239   */\n      dup4\n        /* \"#utility.yul\":11177:11244   */\n      tag_142\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11170:11244   */\n      swap2\n      pop\n        /* \"#utility.yul\":11253:11346   */\n      tag_282\n        /* \"#utility.yul\":11342:11345   */\n      dup3\n        /* \"#utility.yul\":11253:11346   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11371:11373   */\n      0x40\n        /* \"#utility.yul\":11366:11369   */\n      dup3\n        /* \"#utility.yul\":11362:11374   */\n      add\n        /* \"#utility.yul\":11355:11374   */\n      swap1\n      pop\n        /* \"#utility.yul\":11014:11380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11386:11805   */\n    tag_126:\n        /* \"#utility.yul\":11552:11556   */\n      0x00\n        /* \"#utility.yul\":11590:11592   */\n      0x20\n        /* \"#utility.yul\":11579:11588   */\n      dup3\n        /* \"#utility.yul\":11575:11593   */\n      add\n        /* \"#utility.yul\":11567:11593   */\n      swap1\n      pop\n        /* \"#utility.yul\":11639:11648   */\n      dup2\n        /* \"#utility.yul\":11633:11637   */\n      dup2\n        /* \"#utility.yul\":11629:11649   */\n      sub\n        /* \"#utility.yul\":11625:11626   */\n      0x00\n        /* \"#utility.yul\":11614:11623   */\n      dup4\n        /* \"#utility.yul\":11610:11627   */\n      add\n        /* \"#utility.yul\":11603:11650   */\n      mstore\n        /* \"#utility.yul\":11667:11798   */\n      tag_284\n        /* \"#utility.yul\":11793:11797   */\n      dup2\n        /* \"#utility.yul\":11667:11798   */\n      tag_172\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11659:11798   */\n      swap1\n      pop\n        /* \"#utility.yul\":11386:11805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11811:12033   */\n    tag_173:\n        /* \"#utility.yul\":11951:11985   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11947:11948   */\n      0x00\n        /* \"#utility.yul\":11939:11945   */\n      dup3\n        /* \"#utility.yul\":11935:11949   */\n      add\n        /* \"#utility.yul\":11928:11986   */\n      mstore\n        /* \"#utility.yul\":12020:12025   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12015:12017   */\n      0x20\n        /* \"#utility.yul\":12007:12013   */\n      dup3\n        /* \"#utility.yul\":12003:12018   */\n      add\n        /* \"#utility.yul\":11996:12026   */\n      mstore\n        /* \"#utility.yul\":11811:12033   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12039:12405   */\n    tag_174:\n        /* \"#utility.yul\":12181:12184   */\n      0x00\n        /* \"#utility.yul\":12202:12269   */\n      tag_287\n        /* \"#utility.yul\":12266:12268   */\n      0x23\n        /* \"#utility.yul\":12261:12264   */\n      dup4\n        /* \"#utility.yul\":12202:12269   */\n      tag_142\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12195:12269   */\n      swap2\n      pop\n        /* \"#utility.yul\":12278:12371   */\n      tag_288\n        /* \"#utility.yul\":12367:12370   */\n      dup3\n        /* \"#utility.yul\":12278:12371   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12396:12398   */\n      0x40\n        /* \"#utility.yul\":12391:12394   */\n      dup3\n        /* \"#utility.yul\":12387:12399   */\n      add\n        /* \"#utility.yul\":12380:12399   */\n      swap1\n      pop\n        /* \"#utility.yul\":12039:12405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12411:12830   */\n    tag_129:\n        /* \"#utility.yul\":12577:12581   */\n      0x00\n        /* \"#utility.yul\":12615:12617   */\n      0x20\n        /* \"#utility.yul\":12604:12613   */\n      dup3\n        /* \"#utility.yul\":12600:12618   */\n      add\n        /* \"#utility.yul\":12592:12618   */\n      swap1\n      pop\n        /* \"#utility.yul\":12664:12673   */\n      dup2\n        /* \"#utility.yul\":12658:12662   */\n      dup2\n        /* \"#utility.yul\":12654:12674   */\n      sub\n        /* \"#utility.yul\":12650:12651   */\n      0x00\n        /* \"#utility.yul\":12639:12648   */\n      dup4\n        /* \"#utility.yul\":12635:12652   */\n      add\n        /* \"#utility.yul\":12628:12675   */\n      mstore\n        /* \"#utility.yul\":12692:12823   */\n      tag_290\n        /* \"#utility.yul\":12818:12822   */\n      dup2\n        /* \"#utility.yul\":12692:12823   */\n      tag_174\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12684:12823   */\n      swap1\n      pop\n        /* \"#utility.yul\":12411:12830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12836:13061   */\n    tag_175:\n        /* \"#utility.yul\":12976:13010   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12972:12973   */\n      0x00\n        /* \"#utility.yul\":12964:12970   */\n      dup3\n        /* \"#utility.yul\":12960:12974   */\n      add\n        /* \"#utility.yul\":12953:13011   */\n      mstore\n        /* \"#utility.yul\":13045:13053   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13040:13042   */\n      0x20\n        /* \"#utility.yul\":13032:13038   */\n      dup3\n        /* \"#utility.yul\":13028:13043   */\n      add\n        /* \"#utility.yul\":13021:13054   */\n      mstore\n        /* \"#utility.yul\":12836:13061   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13067:13433   */\n    tag_176:\n        /* \"#utility.yul\":13209:13212   */\n      0x00\n        /* \"#utility.yul\":13230:13297   */\n      tag_293\n        /* \"#utility.yul\":13294:13296   */\n      0x26\n        /* \"#utility.yul\":13289:13292   */\n      dup4\n        /* \"#utility.yul\":13230:13297   */\n      tag_142\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":13223:13297   */\n      swap2\n      pop\n        /* \"#utility.yul\":13306:13399   */\n      tag_294\n        /* \"#utility.yul\":13395:13398   */\n      dup3\n        /* \"#utility.yul\":13306:13399   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13424:13426   */\n      0x40\n        /* \"#utility.yul\":13419:13422   */\n      dup3\n        /* \"#utility.yul\":13415:13427   */\n      add\n        /* \"#utility.yul\":13408:13427   */\n      swap1\n      pop\n        /* \"#utility.yul\":13067:13433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13439:13858   */\n    tag_134:\n        /* \"#utility.yul\":13605:13609   */\n      0x00\n        /* \"#utility.yul\":13643:13645   */\n      0x20\n        /* \"#utility.yul\":13632:13641   */\n      dup3\n        /* \"#utility.yul\":13628:13646   */\n      add\n        /* \"#utility.yul\":13620:13646   */\n      swap1\n      pop\n        /* \"#utility.yul\":13692:13701   */\n      dup2\n        /* \"#utility.yul\":13686:13690   */\n      dup2\n        /* \"#utility.yul\":13682:13702   */\n      sub\n        /* \"#utility.yul\":13678:13679   */\n      0x00\n        /* \"#utility.yul\":13667:13676   */\n      dup4\n        /* \"#utility.yul\":13663:13680   */\n      add\n        /* \"#utility.yul\":13656:13703   */\n      mstore\n        /* \"#utility.yul\":13720:13851   */\n      tag_296\n        /* \"#utility.yul\":13846:13850   */\n      dup2\n        /* \"#utility.yul\":13720:13851   */\n      tag_176\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13712:13851   */\n      swap1\n      pop\n        /* \"#utility.yul\":13439:13858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dbc8b701afe8e174f06ac9001d43f0558241b1ad44ebe8c7a8f46befcd1c6bd064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611267806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b22565b60405180910390f35b6100e660048036038101906100e19190610bdd565b610308565b6040516100f39190610c38565b60405180910390f35b61010461032b565b6040516101119190610c62565b60405180910390f35b610134600480360381019061012f9190610c7d565b610335565b6040516101419190610c38565b60405180910390f35b610152610364565b60405161015f9190610cec565b60405180910390f35b610182600480360381019061017d9190610bdd565b61036d565b60405161018f9190610c38565b60405180910390f35b6101b260048036038101906101ad9190610d07565b6103a4565b6040516101bf9190610c62565b60405180910390f35b6101d06103ed565b6040516101dd9190610b22565b60405180910390f35b61020060048036038101906101fb9190610bdd565b61047f565b60405161020d9190610c38565b60405180910390f35b610230600480360381019061022b9190610bdd565b6104f6565b60405161023d9190610c38565b60405180910390f35b610260600480360381019061025b9190610d34565b610519565b60405161026d9190610c62565b60405180910390f35b60606036805461028590610da3565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610da3565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610771565b6103588585856107fd565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610e03565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610da3565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610da3565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610ecb565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107fd565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f5d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610fef565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107649190610c62565b60405180910390a3505050565b600061077d8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f757818110156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e09061105b565b60405180910390fd5b6107f684848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906110ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061117f565b60405180910390fd5b6108e6838383610a7f565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096490611211565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a029190610e03565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610c62565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac3578082015181840152602081019050610aa8565b83811115610ad2576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af482610a89565b610afe8185610a94565b9350610b0e818560208601610aa5565b610b1781610ad8565b840191505092915050565b60006020820190508181036000830152610b3c8184610ae9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7482610b49565b9050919050565b610b8481610b69565b8114610b8f57600080fd5b50565b600081359050610ba181610b7b565b92915050565b6000819050919050565b610bba81610ba7565b8114610bc557600080fd5b50565b600081359050610bd781610bb1565b92915050565b60008060408385031215610bf457610bf3610b44565b5b6000610c0285828601610b92565b9250506020610c1385828601610bc8565b9150509250929050565b60008115159050919050565b610c3281610c1d565b82525050565b6000602082019050610c4d6000830184610c29565b92915050565b610c5c81610ba7565b82525050565b6000602082019050610c776000830184610c53565b92915050565b600080600060608486031215610c9657610c95610b44565b5b6000610ca486828701610b92565b9350506020610cb586828701610b92565b9250506040610cc686828701610bc8565b9150509250925092565b600060ff82169050919050565b610ce681610cd0565b82525050565b6000602082019050610d016000830184610cdd565b92915050565b600060208284031215610d1d57610d1c610b44565b5b6000610d2b84828501610b92565b91505092915050565b60008060408385031215610d4b57610d4a610b44565b5b6000610d5985828601610b92565b9250506020610d6a85828601610b92565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dbb57607f821691505b602082108103610dce57610dcd610d74565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0e82610ba7565b9150610e1983610ba7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4e57610e4d610dd4565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb5602583610a94565b9150610ec082610e59565b604082019050919050565b60006020820190508181036000830152610ee481610ea8565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f47602483610a94565b9150610f5282610eeb565b604082019050919050565b60006020820190508181036000830152610f7681610f3a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd9602283610a94565b9150610fe482610f7d565b604082019050919050565b6000602082019050818103600083015261100881610fcc565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611045601d83610a94565b91506110508261100f565b602082019050919050565b6000602082019050818103600083015261107481611038565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d7602583610a94565b91506110e28261107b565b604082019050919050565b60006020820190508181036000830152611106816110ca565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611169602383610a94565b91506111748261110d565b604082019050919050565b600060208201905081810360008301526111988161115c565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111fb602683610a94565b91506112068261119f565b604082019050919050565b6000602082019050818103600083015261122a816111ee565b905091905056fea2646970667358221220dbc8b701afe8e174f06ac9001d43f0558241b1ad44ebe8c7a8f46befcd1c6bd064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1267 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 DUP3 PUSH2 0xA89 JUMP JUMPDEST PUSH2 0xAFE DUP2 DUP6 PUSH2 0xA94 JUMP JUMPDEST SWAP4 POP PUSH2 0xB0E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0xB17 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3C DUP2 DUP5 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB74 DUP3 PUSH2 0xB49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB84 DUP2 PUSH2 0xB69 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA1 DUP2 PUSH2 0xB7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD7 DUP2 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBF3 PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC02 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC13 DUP6 DUP3 DUP7 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC32 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC4D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC5C DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC96 JUMPI PUSH2 0xC95 PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB5 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC6 DUP7 DUP3 DUP8 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0xCD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4B JUMPI PUSH2 0xD4A PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD59 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD6A DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDBB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0xD74 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP3 PUSH2 0xBA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE19 DUP4 PUSH2 0xBA7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4E JUMPI PUSH2 0xE4D PUSH2 0xDD4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB5 PUSH1 0x25 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC0 DUP3 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE4 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF47 PUSH1 0x24 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF76 DUP2 PUSH2 0xF3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD9 PUSH1 0x22 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE4 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1008 DUP2 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1045 PUSH1 0x1D DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1050 DUP3 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1074 DUP2 PUSH2 0x1038 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D7 PUSH1 0x25 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E2 DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1106 DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0x23 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1198 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0x26 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122A DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xC8 0xB7 ADD 0xAF 0xE8 0xE1 PUSH21 0xF06AC9001D43F0558241B1AD44EBE8C7A8F46BEFCD SHR PUSH12 0xD064736F6C634300080D0033 ",
							"sourceMap": "1482:11772:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_746": {
									"entryPoint": 2692,
									"id": 746,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_681": {
									"entryPoint": 1448,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_735": {
									"entryPoint": 2687,
									"id": 735,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1349": {
									"entryPoint": 1440,
									"id": 1349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_724": {
									"entryPoint": 1905,
									"id": 724,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_508": {
									"entryPoint": 2045,
									"id": 508,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_303": {
									"entryPoint": 1305,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_328": {
									"entryPoint": 776,
									"id": 328,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_260": {
									"entryPoint": 932,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_236": {
									"entryPoint": 868,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_431": {
									"entryPoint": 1151,
									"id": 431,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_390": {
									"entryPoint": 877,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_216": {
									"entryPoint": 630,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_226": {
									"entryPoint": 1005,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_246": {
									"entryPoint": 811,
									"id": 246,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_361": {
									"entryPoint": 821,
									"id": 361,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_285": {
									"entryPoint": 1270,
									"id": 285,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13861:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:14",
														"type": ""
													}
												],
												"src": "7:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:14",
														"type": ""
													}
												],
												"src": "112:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:14",
																"statements": []
															},
															"src": "365:113:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:14"
															},
															"nodeType": "YulIf",
															"src": "487:101:14"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:14",
														"type": ""
													}
												],
												"src": "287:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:14",
														"type": ""
													}
												],
												"src": "600:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:14",
														"type": ""
													}
												],
												"src": "708:364:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:14",
														"type": ""
													}
												],
												"src": "1078:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:14",
														"type": ""
													}
												],
												"src": "1397:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:14",
														"type": ""
													}
												],
												"src": "1724:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:14",
														"type": ""
													}
												],
												"src": "1856:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:14"
															},
															"nodeType": "YulIf",
															"src": "2011:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:14",
														"type": ""
													}
												],
												"src": "1958:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:14",
														"type": ""
													}
												],
												"src": "2086:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:14",
														"type": ""
													}
												],
												"src": "2231:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:14"
															},
															"nodeType": "YulIf",
															"src": "2367:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:14",
														"type": ""
													}
												],
												"src": "2314:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:14",
														"type": ""
													}
												],
												"src": "2442:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:14"
															},
															"nodeType": "YulIf",
															"src": "2680:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:14",
														"type": ""
													}
												],
												"src": "2587:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:14",
														"type": ""
													}
												],
												"src": "3067:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:14",
														"type": ""
													}
												],
												"src": "3163:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:14",
														"type": ""
													}
												],
												"src": "3278:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:14",
														"type": ""
													}
												],
												"src": "3494:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:14",
														"type": ""
													}
												],
												"src": "3618:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:14"
															},
															"nodeType": "YulIf",
															"src": "3956:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:14",
														"type": ""
													}
												],
												"src": "3846:619:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:14",
														"type": ""
													}
												],
												"src": "4471:86:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:14",
														"type": ""
													}
												],
												"src": "4563:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:14",
														"type": ""
													}
												],
												"src": "4681:214:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:14"
															},
															"nodeType": "YulIf",
															"src": "4977:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:14",
														"type": ""
													}
												],
												"src": "4901:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5319:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5365:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5367:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5367:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5367:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5340:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:32:14"
															},
															"nodeType": "YulIf",
															"src": "5329:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "5458:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5473:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5477:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5502:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5537:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5548:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5533:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5533:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5557:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5512:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5502:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5585:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5600:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5614:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5604:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5630:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5665:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5676:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5661:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5661:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5685:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5640:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5630:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5281:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5292:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5304:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5312:6:14",
														"type": ""
													}
												],
												"src": "5236:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5744:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5761:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5754:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5754:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5754:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5861:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5851:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5851:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5882:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5885:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5875:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5716:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5953:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5963:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5977:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5983:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5973:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5994:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6024:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6030:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6020:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5998:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6071:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6085:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6099:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6107:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6095:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6095:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6085:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6051:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:26:14"
															},
															"nodeType": "YulIf",
															"src": "6041:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6174:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6188:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6188:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6188:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6138:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6161:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6169:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6158:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6135:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:38:14"
															},
															"nodeType": "YulIf",
															"src": "6132:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5937:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5946:6:14",
														"type": ""
													}
												],
												"src": "5902:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6256:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6273:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6276:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6266:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6266:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6370:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6397:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6387:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6228:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:261:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6491:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6473:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6468:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6502:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6525:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6507:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6507:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6502:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6665:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6667:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6667:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6667:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6586:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6593:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6661:1:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6589:74:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6583:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:81:14"
															},
															"nodeType": "YulIf",
															"src": "6580:107:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6697:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6708:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6711:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6704:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6445:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6448:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6454:3:14",
														"type": ""
													}
												],
												"src": "6414:305:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6831:118:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6853:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6861:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6849:14:14"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6865:34:14",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6842:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6921:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6929:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6917:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6917:15:14"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6934:7:14",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6910:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6910:32:14"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6823:6:14",
														"type": ""
													}
												],
												"src": "6725:224:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7101:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7111:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7177:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7182:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7118:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7118:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7283:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7194:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7296:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7307:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7312:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7089:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7097:3:14",
														"type": ""
													}
												],
												"src": "6955:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7498:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7508:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7520:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7531:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7508:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7555:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7566:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7551:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7574:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7580:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7570:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7570:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7544:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7544:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7600:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7734:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7608:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7608:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7600:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7478:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7493:4:14",
														"type": ""
													}
												],
												"src": "7327:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:117:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7880:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7888:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7876:14:14"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7892:34:14",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7948:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7956:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7944:15:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7961:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7937:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7937:31:14"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7850:6:14",
														"type": ""
													}
												],
												"src": "7752:223:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8127:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8137:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8203:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8208:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8144:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8309:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8220:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8220:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8322:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8333:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8329:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8115:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8123:3:14",
														"type": ""
													}
												],
												"src": "7981:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8524:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8534:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8546:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8557:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8542:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8534:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8581:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8592:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8577:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8600:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8606:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8596:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8596:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8626:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8760:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8634:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8626:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8504:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8519:4:14",
														"type": ""
													}
												],
												"src": "8353:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8884:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8906:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8914:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8902:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8902:14:14"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8918:34:14",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8895:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8974:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8982:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8970:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8970:15:14"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8987:4:14",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:29:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8963:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8876:6:14",
														"type": ""
													}
												],
												"src": "8778:221:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9151:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9161:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9227:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9168:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9161:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9333:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9244:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9244:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9244:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9346:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9357:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9353:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9139:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9147:3:14",
														"type": ""
													}
												],
												"src": "9005:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9548:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9558:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9570:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9558:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9605:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9616:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9624:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9620:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9594:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9594:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9650:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9784:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9658:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9650:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9528:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9543:4:14",
														"type": ""
													}
												],
												"src": "9377:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9908:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9930:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9926:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9926:14:14"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9942:31:14",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9919:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9919:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9919:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9900:6:14",
														"type": ""
													}
												],
												"src": "9802:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10133:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10143:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10209:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10150:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10143:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10226:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10226:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10226:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10328:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10339:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10121:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10129:3:14",
														"type": ""
													}
												],
												"src": "9987:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10530:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10540:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10552:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10563:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10548:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10540:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10587:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10598:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10583:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10583:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10606:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10602:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10576:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10576:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10576:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10632:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10766:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10640:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10640:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10632:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10510:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10525:4:14",
														"type": ""
													}
												],
												"src": "10359:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10890:118:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10912:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10920:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10908:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10908:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10924:34:14",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10901:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10901:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10901:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10980:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10988:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10976:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10976:15:14"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10993:7:14",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10969:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10969:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10969:32:14"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10882:6:14",
														"type": ""
													}
												],
												"src": "10784:224:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11160:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11170:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11236:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11241:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11177:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11177:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11170:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11342:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11253:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11253:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11253:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11355:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11366:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11371:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11362:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11355:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11148:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11156:3:14",
														"type": ""
													}
												],
												"src": "11014:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11557:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11567:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11579:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11590:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11575:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11567:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11614:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11625:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11610:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11610:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11633:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11639:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11629:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11629:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11603:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11603:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11659:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11793:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11667:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11659:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11537:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11552:4:14",
														"type": ""
													}
												],
												"src": "11386:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11917:116:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11939:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11947:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11935:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11935:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11951:34:14",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11928:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11928:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12007:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12015:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12003:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12003:15:14"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12020:5:14",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11996:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11996:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11996:30:14"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11909:6:14",
														"type": ""
													}
												],
												"src": "11811:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12185:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12195:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12261:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12266:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12202:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12202:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12195:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12367:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12278:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12278:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12278:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12380:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12391:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12396:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12387:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12387:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12380:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12173:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12181:3:14",
														"type": ""
													}
												],
												"src": "12039:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12582:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12592:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12604:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12615:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12600:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12600:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12592:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12639:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12650:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12635:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12658:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12664:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12654:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12654:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12628:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12628:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12628:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12684:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12818:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12692:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12692:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12684:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12562:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12577:4:14",
														"type": ""
													}
												],
												"src": "12411:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:119:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12964:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12972:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12960:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12960:14:14"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12976:34:14",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12953:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12953:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12953:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13032:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13040:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13028:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13028:15:14"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13045:8:14",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13021:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13021:33:14"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12934:6:14",
														"type": ""
													}
												],
												"src": "12836:225:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13213:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13223:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13289:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13294:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13230:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13230:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13223:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13395:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13306:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13306:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13306:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13408:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13419:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13424:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13415:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13415:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13408:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13201:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13209:3:14",
														"type": ""
													}
												],
												"src": "13067:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13610:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13620:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13632:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13643:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13628:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13628:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13620:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13667:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13678:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13663:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13663:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13686:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13692:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13682:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13682:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13656:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13656:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13656:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13712:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13846:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13720:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13720:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13712:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13590:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13605:4:14",
														"type": ""
													}
												],
												"src": "13439:419:14"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b22565b60405180910390f35b6100e660048036038101906100e19190610bdd565b610308565b6040516100f39190610c38565b60405180910390f35b61010461032b565b6040516101119190610c62565b60405180910390f35b610134600480360381019061012f9190610c7d565b610335565b6040516101419190610c38565b60405180910390f35b610152610364565b60405161015f9190610cec565b60405180910390f35b610182600480360381019061017d9190610bdd565b61036d565b60405161018f9190610c38565b60405180910390f35b6101b260048036038101906101ad9190610d07565b6103a4565b6040516101bf9190610c62565b60405180910390f35b6101d06103ed565b6040516101dd9190610b22565b60405180910390f35b61020060048036038101906101fb9190610bdd565b61047f565b60405161020d9190610c38565b60405180910390f35b610230600480360381019061022b9190610bdd565b6104f6565b60405161023d9190610c38565b60405180910390f35b610260600480360381019061025b9190610d34565b610519565b60405161026d9190610c62565b60405180910390f35b60606036805461028590610da3565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610da3565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610771565b6103588585856107fd565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610e03565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610da3565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610da3565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610ecb565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107fd565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f5d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610fef565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107649190610c62565b60405180910390a3505050565b600061077d8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f757818110156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e09061105b565b60405180910390fd5b6107f684848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906110ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061117f565b60405180910390fd5b6108e6838383610a7f565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096490611211565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a029190610e03565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610c62565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac3578082015181840152602081019050610aa8565b83811115610ad2576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af482610a89565b610afe8185610a94565b9350610b0e818560208601610aa5565b610b1781610ad8565b840191505092915050565b60006020820190508181036000830152610b3c8184610ae9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7482610b49565b9050919050565b610b8481610b69565b8114610b8f57600080fd5b50565b600081359050610ba181610b7b565b92915050565b6000819050919050565b610bba81610ba7565b8114610bc557600080fd5b50565b600081359050610bd781610bb1565b92915050565b60008060408385031215610bf457610bf3610b44565b5b6000610c0285828601610b92565b9250506020610c1385828601610bc8565b9150509250929050565b60008115159050919050565b610c3281610c1d565b82525050565b6000602082019050610c4d6000830184610c29565b92915050565b610c5c81610ba7565b82525050565b6000602082019050610c776000830184610c53565b92915050565b600080600060608486031215610c9657610c95610b44565b5b6000610ca486828701610b92565b9350506020610cb586828701610b92565b9250506040610cc686828701610bc8565b9150509250925092565b600060ff82169050919050565b610ce681610cd0565b82525050565b6000602082019050610d016000830184610cdd565b92915050565b600060208284031215610d1d57610d1c610b44565b5b6000610d2b84828501610b92565b91505092915050565b60008060408385031215610d4b57610d4a610b44565b5b6000610d5985828601610b92565b9250506020610d6a85828601610b92565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dbb57607f821691505b602082108103610dce57610dcd610d74565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0e82610ba7565b9150610e1983610ba7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4e57610e4d610dd4565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb5602583610a94565b9150610ec082610e59565b604082019050919050565b60006020820190508181036000830152610ee481610ea8565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f47602483610a94565b9150610f5282610eeb565b604082019050919050565b60006020820190508181036000830152610f7681610f3a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd9602283610a94565b9150610fe482610f7d565b604082019050919050565b6000602082019050818103600083015261100881610fcc565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611045601d83610a94565b91506110508261100f565b602082019050919050565b6000602082019050818103600083015261107481611038565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d7602583610a94565b91506110e28261107b565b604082019050919050565b60006020820190508181036000830152611106816110ca565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611169602383610a94565b91506111748261110d565b604082019050919050565b600060208201905081810360008301526111988161115c565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111fb602683610a94565b91506112068261119f565b604082019050919050565b6000602082019050818103600083015261122a816111ee565b905091905056fea2646970667358221220dbc8b701afe8e174f06ac9001d43f0558241b1ad44ebe8c7a8f46befcd1c6bd064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 DUP3 PUSH2 0xA89 JUMP JUMPDEST PUSH2 0xAFE DUP2 DUP6 PUSH2 0xA94 JUMP JUMPDEST SWAP4 POP PUSH2 0xB0E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0xB17 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3C DUP2 DUP5 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB74 DUP3 PUSH2 0xB49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB84 DUP2 PUSH2 0xB69 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA1 DUP2 PUSH2 0xB7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD7 DUP2 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBF3 PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC02 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC13 DUP6 DUP3 DUP7 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC32 DUP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC4D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC5C DUP2 PUSH2 0xBA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC96 JUMPI PUSH2 0xC95 PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB5 DUP7 DUP3 DUP8 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC6 DUP7 DUP3 DUP8 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0xCD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP5 DUP3 DUP6 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4B JUMPI PUSH2 0xD4A PUSH2 0xB44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD59 DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD6A DUP6 DUP3 DUP7 ADD PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDBB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0xD74 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP3 PUSH2 0xBA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE19 DUP4 PUSH2 0xBA7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4E JUMPI PUSH2 0xE4D PUSH2 0xDD4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB5 PUSH1 0x25 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC0 DUP3 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE4 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF47 PUSH1 0x24 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP3 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF76 DUP2 PUSH2 0xF3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD9 PUSH1 0x22 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE4 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1008 DUP2 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1045 PUSH1 0x1D DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1050 DUP3 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1074 DUP2 PUSH2 0x1038 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D7 PUSH1 0x25 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E2 DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1106 DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0x23 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1198 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0x26 DUP4 PUSH2 0xA94 JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122A DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xC8 0xB7 ADD 0xAF 0xE8 0xE1 PUSH21 0xF06AC9001D43F0558241B1AD44EBE8C7A8F46BEFCD SHR PUSH12 0xD064736F6C634300080D0033 ",
							"sourceMap": "1482:11772:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3581:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5529:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3430:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6210:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3745:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2704:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6931:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4066:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4313:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2493:98;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;4869:13;4885:12;:10;:12::i;:::-;4869:28;;4907:32;4916:5;4923:7;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;:::o;3581:106::-;3642:7;3668:12;;3661:19;;3581:106;:::o;5529:286::-;5656:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5712:38;5728:4;5734:7;5743:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;:::o;3430:91::-;3488:5;3512:2;3505:9;;3430:91;:::o;6210:234::-;6298:4;6314:13;6330:12;:10;:12::i;:::-;6314:28;;6352:64;6361:5;6368:7;6405:10;6377:25;6387:5;6394:7;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;:::-;6433:4;6426:11;;;6210:234;;;;:::o;3745:125::-;3819:7;3845:9;:18;3855:7;3845:18;;;;;;;;;;;;;;;;3838:25;;3745:125;;;:::o;2704:102::-;2760:13;2792:7;2785:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:102;:::o;6931:427::-;7024:4;7040:13;7056:12;:10;:12::i;:::-;7040:28;;7078:24;7105:25;7115:5;7122:7;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;7347:4;7340:11;;;;6931:427;;;;:::o;4066:189::-;4145:4;4161:13;4177:12;:10;:12::i;:::-;4161:28;;4199;4209:5;4216:2;4220:6;4199:9;:28::i;:::-;4244:4;4237:11;;;4066:189;;;;:::o;4313:149::-;4402:7;4428:11;:18;4440:5;4428:18;;;;;;;;;;;;;;;:27;4447:7;4428:27;;;;;;;;;;;;;;;;4421:34;;4313:149;;;;:::o;850:96:6:-;903:7;929:10;922:17;;850:96;:::o;10456:370:1:-;10604:1;10587:19;;:5;:19;;;10579:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10684:1;10665:21;;:7;:21;;;10657:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10766:6;10736:11;:18;10748:5;10736:18;;;;;;;;;;;;;;;:27;10755:7;10736:27;;;;;;;;;;;;;;;:36;;;;10803:7;10787:32;;10796:5;10787:32;;;10812:6;10787:32;;;;;;:::i;:::-;;;;;;;;10456:370;;;:::o;11107:441::-;11237:24;11264:25;11274:5;11281:7;11264:9;:25::i;:::-;11237:52;;11323:17;11303:16;:37;11299:243;;11384:6;11364:16;:26;;11356:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11299:243;11227:321;11107:441;;;:::o;7821:651::-;7963:1;7947:18;;:4;:18;;;7939:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8039:1;8025:16;;:2;:16;;;8017:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8092:38;8113:4;8119:2;8123:6;8092:20;:38::i;:::-;8141:19;8163:9;:15;8173:4;8163:15;;;;;;;;;;;;;;;;8141:37;;8211:6;8196:11;:21;;8188:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8326:6;8312:11;:20;8294:9;:15;8304:4;8294:15;;;;;;;;;;;;;;;:38;;;;8369:6;8352:9;:13;8362:2;8352:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8406:2;8391:26;;8400:4;8391:26;;;8410:6;8391:26;;;;;;:::i;:::-;;;;;;;;8428:37;8448:4;8454:2;8458:6;8428:19;:37::i;:::-;7929:543;7821:651;;;:::o;12132:121::-;;;;:::o;12841:120::-;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "942200",
								"executionCost": "981",
								"totalCost": "943181"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13254,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbc8b701afe8e174f06ac9001d43f0558241b1ad44ebe8c7a8f46befcd1c6bd064736f6c634300080d0033",
									".code": [
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 13254,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4885,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4916,
											"end": 4921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5797,
											"end": 5808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3505,
											"end": 3514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6330,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6361,
											"end": 6366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6415,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6387,
											"end": 6392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6401,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6352,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6437,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2792,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7056,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7056,
											"end": 7068,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7056,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7056,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7078,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7282,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7340,
											"end": 7351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4177,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4177,
											"end": 4189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4177,
											"end": 4189,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4177,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4209,
											"end": 4214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4237,
											"end": 4248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10456,
											"end": 10826,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10456,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10604,
											"end": 10605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10579,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10684,
											"end": 10685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10665,
											"end": 10686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10665,
											"end": 10686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10686,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10657,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10748,
											"end": 10753,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10755,
											"end": 10762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10763,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10772,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10812,
											"end": 10818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10819,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10826,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11107,
											"end": 11548,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11107,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11274,
											"end": 11279,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11281,
											"end": 11288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11264,
											"end": 11289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11264,
											"end": 11289,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11264,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11340,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11303,
											"end": 11319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11303,
											"end": 11340,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11299,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11299,
											"end": 11542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11384,
											"end": 11390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11390,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11390,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11356,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11466,
											"end": 11517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11475,
											"end": 11480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11516,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11466,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11466,
											"end": 11517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11466,
											"end": 11517,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11466,
											"end": 11517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11299,
											"end": 11542,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11299,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11548,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7821,
											"end": 8472,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7821,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7951,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7939,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8039,
											"end": 8040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8025,
											"end": 8041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8025,
											"end": 8041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8041,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8017,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8092,
											"end": 8130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8092,
											"end": 8130,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8092,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8178,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8217,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8188,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8303,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8304,
											"end": 8308,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8332,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8361,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8364,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8406,
											"end": 8408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8410,
											"end": 8416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8417,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8448,
											"end": 8452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8464,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 8472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 8472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 8472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 8472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 8472,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12132,
											"end": 12253,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 12132,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12841,
											"end": 12961,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 12841,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12961,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5359,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5364,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5458,
											"end": 5575,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 5685,
											"end": 5692,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5661,
											"end": 5683,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5585,
											"end": 5703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5716,
											"end": 5896,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 5716,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5842,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5865,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5885,
											"end": 5889,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5882,
											"end": 5883,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5890,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5977,
											"end": 5981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6032,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 6099,
											"end": 6105,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6095,
											"end": 6112,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6085,
											"end": 6112,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6085,
											"end": 6112,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6169,
											"end": 6171,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6172,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6135,
											"end": 6173,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5953,
											"end": 6222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6228,
											"end": 6408,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 6228,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6276,
											"end": 6353,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6354,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6373,
											"end": 6377,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 6370,
											"end": 6371,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6363,
											"end": 6378,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6397,
											"end": 6401,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6402,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 6491,
											"end": 6492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6468,
											"end": 6493,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6468,
											"end": 6493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6527,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6593,
											"end": 6659,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6663,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6586,
											"end": 6587,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6583,
											"end": 6664,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6708,
											"end": 6709,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6704,
											"end": 6713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6865,
											"end": 6899,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6859,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6849,
											"end": 6863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6900,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "PUSH",
											"source": 14,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6917,
											"end": 6932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 7182,
											"end": 7184,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 7177,
											"end": 7180,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7111,
											"end": 7185,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7111,
											"end": 7185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7312,
											"end": 7314,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7310,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7303,
											"end": 7315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7315,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7493,
											"end": 7497,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7533,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7534,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7580,
											"end": 7589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7570,
											"end": 7590,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7551,
											"end": 7568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 7734,
											"end": 7738,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7600,
											"end": 7739,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7600,
											"end": 7739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7892,
											"end": 7926,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7876,
											"end": 7890,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7869,
											"end": 7927,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 7967,
											"name": "PUSH",
											"source": 14,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7944,
											"end": 7959,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7937,
											"end": 7968,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8126,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 8208,
											"end": 8210,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8137,
											"end": 8211,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8137,
											"end": 8211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 8309,
											"end": 8312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8322,
											"end": 8341,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8322,
											"end": 8341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8519,
											"end": 8523,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8534,
											"end": 8560,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8534,
											"end": 8560,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8600,
											"end": 8604,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8592,
											"end": 8593,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8581,
											"end": 8590,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8577,
											"end": 8594,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8570,
											"end": 8617,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 8760,
											"end": 8764,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8626,
											"end": 8765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8626,
											"end": 8765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8918,
											"end": 8952,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8902,
											"end": 8916,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8895,
											"end": 8953,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "PUSH",
											"source": 14,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8982,
											"end": 8984,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8970,
											"end": 8985,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8963,
											"end": 8992,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 9232,
											"end": 9234,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9362,
											"end": 9364,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9357,
											"end": 9360,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9365,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9620,
											"end": 9640,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9601,
											"end": 9618,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9594,
											"end": 9641,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9942,
											"end": 9973,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9926,
											"end": 9940,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9919,
											"end": 9974,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10129,
											"end": 10132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10339,
											"end": 10342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10335,
											"end": 10347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10525,
											"end": 10529,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10548,
											"end": 10566,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10606,
											"end": 10610,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10602,
											"end": 10622,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10596,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10583,
											"end": 10600,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10576,
											"end": 10623,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 10766,
											"end": 10770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10924,
											"end": 10958,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10908,
											"end": 10922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10901,
											"end": 10959,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10993,
											"end": 11000,
											"name": "PUSH",
											"source": 14,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10976,
											"end": 10991,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10969,
											"end": 11001,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11156,
											"end": 11159,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 11241,
											"end": 11243,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 11236,
											"end": 11239,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11170,
											"end": 11244,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11170,
											"end": 11244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 11342,
											"end": 11345,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 11374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11355,
											"end": 11374,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11355,
											"end": 11374,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11592,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11579,
											"end": 11588,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11575,
											"end": 11593,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11637,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11625,
											"end": 11626,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11610,
											"end": 11627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11603,
											"end": 11650,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11951,
											"end": 11985,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11947,
											"end": 11948,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11945,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11935,
											"end": 11949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11928,
											"end": 11986,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12020,
											"end": 12025,
											"name": "PUSH",
											"source": 14,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12003,
											"end": 12018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11996,
											"end": 12026,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12181,
											"end": 12184,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 12266,
											"end": 12268,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 12261,
											"end": 12264,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12269,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 12367,
											"end": 12370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12391,
											"end": 12394,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12387,
											"end": 12399,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12380,
											"end": 12399,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12380,
											"end": 12399,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12577,
											"end": 12581,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12615,
											"end": 12617,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12604,
											"end": 12613,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12600,
											"end": 12618,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12592,
											"end": 12618,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12592,
											"end": 12618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12664,
											"end": 12673,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12658,
											"end": 12662,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12654,
											"end": 12674,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12650,
											"end": 12651,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12635,
											"end": 12652,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12628,
											"end": 12675,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12818,
											"end": 12822,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12684,
											"end": 12823,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12684,
											"end": 12823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "PUSH",
											"source": 14,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12972,
											"end": 12973,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 12970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12960,
											"end": 12974,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12953,
											"end": 13011,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13045,
											"end": 13053,
											"name": "PUSH",
											"source": 14,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13040,
											"end": 13042,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13032,
											"end": 13038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13028,
											"end": 13043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13021,
											"end": 13054,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 13294,
											"end": 13296,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 13289,
											"end": 13292,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13297,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 13395,
											"end": 13398,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13424,
											"end": 13426,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13422,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13415,
											"end": 13427,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13408,
											"end": 13427,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13408,
											"end": 13427,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13605,
											"end": 13609,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13632,
											"end": 13641,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13620,
											"end": 13646,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13620,
											"end": 13646,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13692,
											"end": 13701,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13690,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13682,
											"end": 13702,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13678,
											"end": 13679,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13676,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13663,
											"end": 13680,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13656,
											"end": 13703,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 13846,
											"end": 13850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13851,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13851,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb71b875e7f1b8ad082eb6ff83bca4bfa7d050476cc98fd39295826b654edfb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcec0617473fa22a0866d7daf25bf4d664a62902e49c4a158aef54c1e4348e8a\",\"dweb:/ipfs/QmPQetTKnLJBAQQrLKUWGVZwfp3VGmBhnqqJvmJTycM1jR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1363,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 160,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 166,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 168,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 170,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 172,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 751,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205866aaedac401b7f994e33e92e4df52592c5599d83a254e99d4ded5510c1ea5664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205866aaedac401b7f994e33e92e4df52592c5599d83a254e99d4ded5510c1ea5664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH7 0xAAEDAC401B7F99 0x4E CALLER 0xE9 0x2E 0x4D CREATE2 0x25 SWAP3 0xC5 MSIZE SWAP14 DUP4 LOG2 SLOAD 0xE9 SWAP14 0x4D 0xED SSTORE LT 0xC1 0xEA JUMP PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "667:3358:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205866aaedac401b7f994e33e92e4df52592c5599d83a254e99d4ded5510c1ea5664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH7 0xAAEDAC401B7F99 0x4E CALLER 0xE9 0x2E 0x4D CREATE2 0x25 SWAP3 0xC5 MSIZE SWAP14 DUP4 LOG2 SLOAD 0xE9 SWAP14 0x4D 0xED SSTORE LT 0xC1 0xEA JUMP PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "667:3358:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205866aaedac401b7f994e33e92e4df52592c5599d83a254e99d4ded5510c1ea5664736f6c634300080d0033",
									".code": [
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7316  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7316  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071c725024cdf3953feed91e20bfb3adf92d130858d63861375d3e7210ecff62e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071c725024cdf3953feed91e20bfb3adf92d130858d63861375d3e7210ecff62e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xC725024CDF3953FEED91E20BFB3ADF92D130 DUP6 DUP14 PUSH4 0x861375D3 0xE7 0x21 0xE 0xCF 0xF6 0x2E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "194:7122:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071c725024cdf3953feed91e20bfb3adf92d130858d63861375d3e7210ecff62e64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xC725024CDF3953FEED91E20BFB3ADF92D130 DUP6 DUP14 PUSH4 0x861375D3 0xE7 0x21 0xE 0xCF 0xF6 0x2E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "194:7122:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071c725024cdf3953feed91e20bfb3adf92d130858d63861375d3e7210ecff62e64736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1363,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SuperDepositor.sol": {
				"BeetsHelper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_balVault",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract IAsset[]",
											"name": "underlyings",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "tokenIndex",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "beetsPoolId",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "lpToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										}
									],
									"internalType": "struct BeetsHelper.VaultParams",
									"name": "details",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_singleSideDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract IAsset[]",
											"name": "underlyings",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "tokenIndex",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "beetsPoolId",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "lpToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										}
									],
									"internalType": "struct BeetsHelper.VaultParams",
									"name": "details",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_singleSideWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IAsset[]",
											"name": "underlyings",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "tokenIndex",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "beetsPoolId",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "lpToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										}
									],
									"internalType": "struct BeetsHelper.VaultParams",
									"name": "details",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "routeDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "z80 and Eidolon",
						"kind": "dev",
						"methods": {},
						"title": "BeetsHelper",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SuperDepositor.sol\":289:5020  contract BeetsHelper {... */\n  mstore(0x40, 0xa0)\n    /* \"SuperDepositor.sol\":910:980  constructor(address _balVault) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SuperDepositor.sol\":963:972  _balVault */\n  dup1\n    /* \"SuperDepositor.sol\":952:972  balVault = _balVault */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"SuperDepositor.sol\":910:980  constructor(address _balVault) {... */\n  pop\n    /* \"SuperDepositor.sol\":289:5020  contract BeetsHelper {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SuperDepositor.sol\":289:5020  contract BeetsHelper {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf3c94672c9097e8255317de36dd0d00a9f72d57eeb896861f583a1140be6889a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"SuperDepositor.sol\":289:5020  contract BeetsHelper {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e6335e6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x77aba213\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9cbcf4c7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbfbd3808\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SuperDepositor.sol\":1961:2332  function _singleSideWithdraw(VaultParams memory details, uint256 amount) public {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"SuperDepositor.sol\":376:409  address public immutable balVault */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SuperDepositor.sol\":988:1481  function routeDeposit(address tokenIn, VaultParams memory details, uint256 amount) public {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"SuperDepositor.sol\":1489:1953  function _singleSideDeposit(VaultParams memory details, uint256 amount) public {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"SuperDepositor.sol\":1961:2332  function _singleSideWithdraw(VaultParams memory details, uint256 amount) public {... */\n    tag_10:\n        /* \"SuperDepositor.sol\":2052:2080  IERC20Upgradeable inputToken */\n      0x00\n        /* \"SuperDepositor.sol\":2101:2108  details */\n      dup3\n        /* \"SuperDepositor.sol\":2101:2114  details.vault */\n      0x80\n      add\n      mload\n        /* \"SuperDepositor.sol\":2052:2115  IERC20Upgradeable inputToken = IERC20Upgradeable(details.vault) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":2126:2188  inputToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_23\n        /* \"SuperDepositor.sol\":2154:2164  msg.sender */\n      caller\n        /* \"SuperDepositor.sol\":2174:2178  this */\n      address\n        /* \"SuperDepositor.sol\":2181:2187  amount */\n      dup5\n        /* \"SuperDepositor.sol\":2126:2136  inputToken */\n      dup5\n        /* \"SuperDepositor.sol\":2126:2153  inputToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_24\n      swap1\n        /* \"SuperDepositor.sol\":2126:2188  inputToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_23:\n        /* \"SuperDepositor.sol\":2206:2213  details */\n      dup3\n        /* \"SuperDepositor.sol\":2206:2219  details.vault */\n      0x80\n      add\n      mload\n        /* \"SuperDepositor.sol\":2199:2232  IVault(details.vault).withdrawAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x853828b6\n        /* \"SuperDepositor.sol\":2199:2234  IVault(details.vault).withdrawAll() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n        /* \"SuperDepositor.sol\":2245:2324  _exitPool(details.underlyings, amount, details.tokenIndex, details.beetsPoolId) */\n      tag_28\n        /* \"SuperDepositor.sol\":2255:2262  details */\n      dup4\n        /* \"SuperDepositor.sol\":2255:2274  details.underlyings */\n      0x00\n      add\n      mload\n        /* \"SuperDepositor.sol\":2276:2282  amount */\n      dup4\n        /* \"SuperDepositor.sol\":2284:2291  details */\n      dup6\n        /* \"SuperDepositor.sol\":2284:2302  details.tokenIndex */\n      0x20\n      add\n      mload\n        /* \"SuperDepositor.sol\":2304:2311  details */\n      dup7\n        /* \"SuperDepositor.sol\":2304:2323  details.beetsPoolId */\n      0x40\n      add\n      mload\n        /* \"SuperDepositor.sol\":2245:2254  _exitPool */\n      tag_29\n        /* \"SuperDepositor.sol\":2245:2324  _exitPool(details.underlyings, amount, details.tokenIndex, details.beetsPoolId) */\n      jump\t// in\n    tag_28:\n        /* \"SuperDepositor.sol\":2041:2332  {... */\n      pop\n        /* \"SuperDepositor.sol\":1961:2332  function _singleSideWithdraw(VaultParams memory details, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SuperDepositor.sol\":376:409  address public immutable balVault */\n    tag_12:\n      immutable(\"0xf3c94672c9097e8255317de36dd0d00a9f72d57eeb896861f583a1140be6889a\")\n      dup2\n      jump\t// out\n        /* \"SuperDepositor.sol\":988:1481  function routeDeposit(address tokenIn, VaultParams memory details, uint256 amount) public {... */\n    tag_18:\n        /* \"SuperDepositor.sol\":1216:1236  address depositToken */\n      0x00\n        /* \"SuperDepositor.sol\":1247:1254  details */\n      dup3\n        /* \"SuperDepositor.sol\":1247:1266  details.underlyings */\n      0x00\n      add\n      mload\n        /* \"SuperDepositor.sol\":1267:1274  details */\n      dup4\n        /* \"SuperDepositor.sol\":1267:1285  details.tokenIndex */\n      0x20\n      add\n      mload\n        /* \"SuperDepositor.sol\":1247:1286  details.underlyings[details.tokenIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_31\n      jumpi\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n    tag_31:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SuperDepositor.sol\":1216:1287  address depositToken = address(details.underlyings[details.tokenIndex]) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":1312:1324  depositToken */\n      dup1\n        /* \"SuperDepositor.sol\":1301:1324  tokenIn == depositToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SuperDepositor.sol\":1301:1308  tokenIn */\n      dup5\n        /* \"SuperDepositor.sol\":1301:1324  tokenIn == depositToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"SuperDepositor.sol\":1298:1464  if(tokenIn == depositToken){... */\n      tag_34\n      jumpi\n        /* \"SuperDepositor.sol\":1340:1375  _singleSideDeposit(details, amount) */\n      tag_35\n        /* \"SuperDepositor.sol\":1359:1366  details */\n      dup4\n        /* \"SuperDepositor.sol\":1368:1374  amount */\n      dup4\n        /* \"SuperDepositor.sol\":1340:1358  _singleSideDeposit */\n      tag_21\n        /* \"SuperDepositor.sol\":1340:1375  _singleSideDeposit(details, amount) */\n      jump\t// in\n    tag_35:\n        /* \"SuperDepositor.sol\":1298:1464  if(tokenIn == depositToken){... */\n      jump(tag_36)\n    tag_34:\n    tag_36:\n        /* \"SuperDepositor.sol\":1078:1481  {... */\n      pop\n        /* \"SuperDepositor.sol\":988:1481  function routeDeposit(address tokenIn, VaultParams memory details, uint256 amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SuperDepositor.sol\":1489:1953  function _singleSideDeposit(VaultParams memory details, uint256 amount) public {... */\n    tag_21:\n        /* \"SuperDepositor.sol\":1579:1607  IERC20Upgradeable inputToken */\n      0x00\n        /* \"SuperDepositor.sol\":1636:1643  details */\n      dup3\n        /* \"SuperDepositor.sol\":1636:1655  details.underlyings */\n      0x00\n      add\n      mload\n        /* \"SuperDepositor.sol\":1656:1663  details */\n      dup4\n        /* \"SuperDepositor.sol\":1656:1674  details.tokenIndex */\n      0x20\n      add\n      mload\n        /* \"SuperDepositor.sol\":1636:1675  details.underlyings[details.tokenIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_38\n      jumpi\n      tag_39\n      tag_33\n      jump\t// in\n    tag_39:\n    tag_38:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SuperDepositor.sol\":1579:1677  IERC20Upgradeable inputToken = IERC20Upgradeable(address(details.underlyings[details.tokenIndex])) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":1688:1750  inputToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_40\n        /* \"SuperDepositor.sol\":1716:1726  msg.sender */\n      caller\n        /* \"SuperDepositor.sol\":1736:1740  this */\n      address\n        /* \"SuperDepositor.sol\":1743:1749  amount */\n      dup5\n        /* \"SuperDepositor.sol\":1688:1698  inputToken */\n      dup5\n        /* \"SuperDepositor.sol\":1688:1715  inputToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_24\n      swap1\n        /* \"SuperDepositor.sol\":1688:1750  inputToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"SuperDepositor.sol\":1761:1840  _joinPool(details.underlyings, amount, details.tokenIndex, details.beetsPoolId) */\n      tag_41\n        /* \"SuperDepositor.sol\":1771:1778  details */\n      dup4\n        /* \"SuperDepositor.sol\":1771:1790  details.underlyings */\n      0x00\n      add\n      mload\n        /* \"SuperDepositor.sol\":1792:1798  amount */\n      dup4\n        /* \"SuperDepositor.sol\":1800:1807  details */\n      dup6\n        /* \"SuperDepositor.sol\":1800:1818  details.tokenIndex */\n      0x20\n      add\n      mload\n        /* \"SuperDepositor.sol\":1820:1827  details */\n      dup7\n        /* \"SuperDepositor.sol\":1820:1839  details.beetsPoolId */\n      0x40\n      add\n      mload\n        /* \"SuperDepositor.sol\":1761:1770  _joinPool */\n      tag_42\n        /* \"SuperDepositor.sol\":1761:1840  _joinPool(details.underlyings, amount, details.tokenIndex, details.beetsPoolId) */\n      jump\t// in\n    tag_41:\n        /* \"SuperDepositor.sol\":1877:1945  _depositLPToVault(details.lpToken, details.vault, details.recipient) */\n      tag_43\n        /* \"SuperDepositor.sol\":1895:1902  details */\n      dup4\n        /* \"SuperDepositor.sol\":1895:1910  details.lpToken */\n      0x60\n      add\n      mload\n        /* \"SuperDepositor.sol\":1912:1919  details */\n      dup5\n        /* \"SuperDepositor.sol\":1912:1925  details.vault */\n      0x80\n      add\n      mload\n        /* \"SuperDepositor.sol\":1927:1934  details */\n      dup6\n        /* \"SuperDepositor.sol\":1927:1944  details.recipient */\n      0xa0\n      add\n      mload\n        /* \"SuperDepositor.sol\":1877:1894  _depositLPToVault */\n      tag_44\n        /* \"SuperDepositor.sol\":1877:1945  _depositLPToVault(details.lpToken, details.vault, details.recipient) */\n      jump\t// in\n    tag_43:\n        /* \"SuperDepositor.sol\":1568:1953  {... */\n      pop\n        /* \"SuperDepositor.sol\":1489:1953  function _singleSideDeposit(VaultParams memory details, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":967:1219  function safeTransferFrom(... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1212  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_46\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1136:1141  token */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1166:1193  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1195:1199  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1201:1203  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1205:1210  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1143:1211  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1135  _callOptionalReturn */\n      tag_49\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":1116:1212  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":967:1219  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SuperDepositor.sol\":4075:5015  function _exitPool(IAsset[] memory underlyings, uint256 amtOut, uint256 tokenIndex, bytes32 beetsPoolId) internal {... */\n    tag_29:\n        /* \"SuperDepositor.sol\":4281:4311  uint256[] memory minAmountsOut */\n      0x00\n        /* \"SuperDepositor.sol\":4328:4339  underlyings */\n      dup5\n        /* \"SuperDepositor.sol\":4328:4346  underlyings.length */\n      mload\n        /* \"SuperDepositor.sol\":4314:4347  new uint256[](underlyings.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n    tag_51:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_54\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_54:\n      pop\n        /* \"SuperDepositor.sol\":4281:4347  uint256[] memory minAmountsOut = new uint256[](underlyings.length) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":4386:4392  amtOut */\n      dup4\n        /* \"SuperDepositor.sol\":4358:4371  minAmountsOut */\n      dup2\n        /* \"SuperDepositor.sol\":4372:4382  tokenIndex */\n      dup5\n        /* \"SuperDepositor.sol\":4358:4383  minAmountsOut[tokenIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_55\n      jumpi\n      tag_56\n      tag_33\n      jump\t// in\n    tag_56:\n    tag_55:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"SuperDepositor.sol\":4358:4392  minAmountsOut[tokenIndex] = amtOut */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SuperDepositor.sol\":4405:4425  uint256 minAmountOut */\n      0x00\n        /* \"SuperDepositor.sol\":4428:4429  1 */\n      0x01\n        /* \"SuperDepositor.sol\":4405:4429  uint256 minAmountOut = 1 */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":4481:4502  bytes memory userData */\n      0x00\n        /* \"SuperDepositor.sol\":4516:4517  0 */\n      dup1\n        /* \"SuperDepositor.sol\":4518:4531  minAmountsOut */\n      dup4\n        /* \"SuperDepositor.sol\":4533:4545  minAmountOut */\n      dup4\n        /* \"SuperDepositor.sol\":4505:4546  abi.encode(0,minAmountsOut, minAmountOut) */\n      add(0x20, mload(0x40))\n      tag_57\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"SuperDepositor.sol\":4481:4546  bytes memory userData = abi.encode(0,minAmountsOut, minAmountOut) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":4559:4600  IBeetVault.ExitPoolRequest memory request */\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"SuperDepositor.sol\":4628:4639  underlyings */\n      dup8\n        /* \"SuperDepositor.sol\":4611:4618  request */\n      dup2\n        /* \"SuperDepositor.sol\":4611:4625  request.assets */\n      0x00\n      add\n        /* \"SuperDepositor.sol\":4611:4639  request.assets = underlyings */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SuperDepositor.sol\":4674:4687  minAmountsOut */\n      dup4\n        /* \"SuperDepositor.sol\":4650:4657  request */\n      dup2\n        /* \"SuperDepositor.sol\":4650:4671  request.minAmountsOut */\n      0x20\n      add\n        /* \"SuperDepositor.sol\":4650:4687  request.minAmountsOut = minAmountsOut */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SuperDepositor.sol\":4717:4725  userData */\n      dup2\n        /* \"SuperDepositor.sol\":4698:4705  request */\n      dup2\n        /* \"SuperDepositor.sol\":4698:4714  request.userData */\n      0x40\n      add\n        /* \"SuperDepositor.sol\":4698:4725  request.userData = userData */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SuperDepositor.sol\":4764:4769  false */\n      0x00\n        /* \"SuperDepositor.sol\":4736:4743  request */\n      dup2\n        /* \"SuperDepositor.sol\":4736:4761  request.toInternalBalance */\n      0x60\n      add\n        /* \"SuperDepositor.sol\":4736:4769  request.toInternalBalance = false */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SuperDepositor.sol\":4896:4904  balVault */\n      immutable(\"0xf3c94672c9097e8255317de36dd0d00a9f72d57eeb896861f583a1140be6889a\")\n        /* \"SuperDepositor.sol\":4885:4914  IBeetVault(balVault).exitPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8bdb3913\n        /* \"SuperDepositor.sol\":4915:4926  beetsPoolId */\n      dup7\n        /* \"SuperDepositor.sol\":4936:4940  this */\n      address\n        /* \"SuperDepositor.sol\":4951:4961  msg.sender */\n      caller\n        /* \"SuperDepositor.sol\":4964:4971  request */\n      dup6\n        /* \"SuperDepositor.sol\":4885:4972  IBeetVault(balVault).exitPool(beetsPoolId, address(this), payable(msg.sender), request) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n        /* \"SuperDepositor.sol\":4189:5015  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"SuperDepositor.sol\":4075:5015  function _exitPool(IAsset[] memory underlyings, uint256 amtOut, uint256 tokenIndex, bytes32 beetsPoolId) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SuperDepositor.sol\":3149:4067  function _joinPool(IAsset[] memory underlyings, uint256 amtIn, uint256 tokenIndex, bytes32 beetsPoolId) internal {... */\n    tag_42:\n        /* \"SuperDepositor.sol\":3273:3287  uint8 joinKind */\n      0x00\n        /* \"SuperDepositor.sol\":3290:3291  1 */\n      0x01\n        /* \"SuperDepositor.sol\":3273:3291  uint8 joinKind = 1 */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":3384:3410  uint256[] memory amountsIn */\n      0x00\n        /* \"SuperDepositor.sol\":3427:3438  underlyings */\n      dup6\n        /* \"SuperDepositor.sol\":3427:3445  underlyings.length */\n      mload\n        /* \"SuperDepositor.sol\":3413:3446  new uint256[](underlyings.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_67\n      jumpi\n      tag_68\n      tag_53\n      jump\t// in\n    tag_68:\n    tag_67:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_69:\n      pop\n        /* \"SuperDepositor.sol\":3384:3446  uint256[] memory amountsIn = new uint256[](underlyings.length) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":3481:3486  amtIn */\n      dup5\n        /* \"SuperDepositor.sol\":3457:3466  amountsIn */\n      dup2\n        /* \"SuperDepositor.sol\":3467:3477  tokenIndex */\n      dup6\n        /* \"SuperDepositor.sol\":3457:3478  amountsIn[tokenIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_70\n      jumpi\n      tag_71\n      tag_33\n      jump\t// in\n    tag_71:\n    tag_70:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"SuperDepositor.sol\":3457:3486  amountsIn[tokenIndex] = amtIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SuperDepositor.sol\":3499:3519  uint256 minAmountOut */\n      0x00\n        /* \"SuperDepositor.sol\":3522:3523  1 */\n      0x01\n        /* \"SuperDepositor.sol\":3499:3523  uint256 minAmountOut = 1 */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":3575:3596  bytes memory userData */\n      0x00\n        /* \"SuperDepositor.sol\":3610:3618  joinKind */\n      dup4\n        /* \"SuperDepositor.sol\":3620:3629  amountsIn */\n      dup4\n        /* \"SuperDepositor.sol\":3631:3643  minAmountOut */\n      dup4\n        /* \"SuperDepositor.sol\":3599:3644  abi.encode(joinKind, amountsIn, minAmountOut) */\n      add(0x20, mload(0x40))\n      tag_72\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"SuperDepositor.sol\":3575:3644  bytes memory userData = abi.encode(joinKind, amountsIn, minAmountOut) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":3657:3698  IBeetVault.JoinPoolRequest memory request */\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"SuperDepositor.sol\":3726:3737  underlyings */\n      dup9\n        /* \"SuperDepositor.sol\":3709:3716  request */\n      dup2\n        /* \"SuperDepositor.sol\":3709:3723  request.assets */\n      0x00\n      add\n        /* \"SuperDepositor.sol\":3709:3737  request.assets = underlyings */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SuperDepositor.sol\":3771:3780  amountsIn */\n      dup4\n        /* \"SuperDepositor.sol\":3748:3755  request */\n      dup2\n        /* \"SuperDepositor.sol\":3748:3768  request.maxAmountsIn */\n      0x20\n      add\n        /* \"SuperDepositor.sol\":3748:3780  request.maxAmountsIn = amountsIn */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SuperDepositor.sol\":3810:3818  userData */\n      dup2\n        /* \"SuperDepositor.sol\":3791:3798  request */\n      dup2\n        /* \"SuperDepositor.sol\":3791:3807  request.userData */\n      0x40\n      add\n        /* \"SuperDepositor.sol\":3791:3818  request.userData = userData */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SuperDepositor.sol\":3859:3864  false */\n      0x00\n        /* \"SuperDepositor.sol\":3829:3836  request */\n      dup2\n        /* \"SuperDepositor.sol\":3829:3856  request.fromInternalBalance */\n      0x60\n      add\n        /* \"SuperDepositor.sol\":3829:3864  request.fromInternalBalance = false */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"SuperDepositor.sol\":3877:3967  IERC20Upgradeable(address(underlyings[tokenIndex])).safeIncreaseAllowance(balVault, amtIn) */\n      tag_76\n        /* \"SuperDepositor.sol\":3951:3959  balVault */\n      immutable(\"0xf3c94672c9097e8255317de36dd0d00a9f72d57eeb896861f583a1140be6889a\")\n        /* \"SuperDepositor.sol\":3961:3966  amtIn */\n      dup10\n        /* \"SuperDepositor.sol\":3903:3914  underlyings */\n      dup12\n        /* \"SuperDepositor.sol\":3915:3925  tokenIndex */\n      dup11\n        /* \"SuperDepositor.sol\":3903:3926  underlyings[tokenIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_77\n      jumpi\n      tag_78\n      tag_33\n      jump\t// in\n    tag_78:\n    tag_77:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SuperDepositor.sol\":3877:3950  IERC20Upgradeable(address(underlyings[tokenIndex])).safeIncreaseAllowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_79\n      swap1\n        /* \"SuperDepositor.sol\":3877:3967  IERC20Upgradeable(address(underlyings[tokenIndex])).safeIncreaseAllowance(balVault, amtIn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"SuperDepositor.sol\":3989:3997  balVault */\n      immutable(\"0xf3c94672c9097e8255317de36dd0d00a9f72d57eeb896861f583a1140be6889a\")\n        /* \"SuperDepositor.sol\":3978:4007  IBeetVault(balVault).joinPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb95cac28\n        /* \"SuperDepositor.sol\":4008:4019  beetsPoolId */\n      dup8\n        /* \"SuperDepositor.sol\":4029:4033  this */\n      address\n        /* \"SuperDepositor.sol\":4044:4048  this */\n      address\n        /* \"SuperDepositor.sol\":4051:4058  request */\n      dup6\n        /* \"SuperDepositor.sol\":3978:4059  IBeetVault(balVault).joinPool(beetsPoolId, address(this), address(this), request) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n        /* \"SuperDepositor.sol\":3262:4067  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SuperDepositor.sol\":3149:4067  function _joinPool(IAsset[] memory underlyings, uint256 amtIn, uint256 tokenIndex, bytes32 beetsPoolId) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SuperDepositor.sol\":2344:2751  function _depositLPToVault(address lp, address vault, address recipient) internal {... */\n    tag_44:\n        /* \"SuperDepositor.sol\":2462:2489  _approveIfNeeded(vault, lp) */\n      tag_86\n        /* \"SuperDepositor.sol\":2479:2484  vault */\n      dup3\n        /* \"SuperDepositor.sol\":2486:2488  lp */\n      dup5\n        /* \"SuperDepositor.sol\":2462:2478  _approveIfNeeded */\n      tag_87\n        /* \"SuperDepositor.sol\":2462:2489  _approveIfNeeded(vault, lp) */\n      jump\t// in\n    tag_86:\n        /* \"SuperDepositor.sol\":2557:2562  vault */\n      dup2\n        /* \"SuperDepositor.sol\":2550:2574  IVault(vault).depositAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xde5f6268\n        /* \"SuperDepositor.sol\":2550:2576  IVault(vault).depositAll() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n        /* \"SuperDepositor.sol\":2618:2642  IERC20Upgradeable shares */\n      0x00\n        /* \"SuperDepositor.sol\":2663:2668  vault */\n      dup3\n        /* \"SuperDepositor.sol\":2618:2669  IERC20Upgradeable shares = IERC20Upgradeable(vault) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":2680:2743  shares.safeTransfer(recipient, shares.balanceOf(address(this))) */\n      tag_91\n        /* \"SuperDepositor.sol\":2700:2709  recipient */\n      dup3\n        /* \"SuperDepositor.sol\":2711:2717  shares */\n      dup3\n        /* \"SuperDepositor.sol\":2711:2727  shares.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SuperDepositor.sol\":2736:2740  this */\n      address\n        /* \"SuperDepositor.sol\":2711:2742  shares.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_92:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"SuperDepositor.sol\":2680:2686  shares */\n      dup4\n        /* \"SuperDepositor.sol\":2680:2699  shares.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_97\n      swap1\n        /* \"SuperDepositor.sol\":2680:2743  shares.safeTransfer(recipient, shares.balanceOf(address(this))) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"SuperDepositor.sol\":2426:2751  {... */\n      pop\n        /* \"SuperDepositor.sol\":2344:2751  function _depositLPToVault(address lp, address vault, address recipient) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3759  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3790:3794  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3770:3775  token */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3789  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_100\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3831  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3865:3866  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3855  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3862  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3866  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3940:3950  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3929:3959  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3921:4006  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3387:4023  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2099:2420  function safeIncreaseAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2236:2256  uint256 newAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2301:2306  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2259:2264  token */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2259:2274  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2283:2287  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2290:2297  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2259:2298  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2259:2306  token.allowance(address(this), spender) + value */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2236:2306  uint256 newAllowance = token.allowance(address(this), spender) + value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2316:2413  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2336:2341  token */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2366:2388  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2390:2397  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2399:2411  newAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2343:2412  abi.encodeWithSelector(token.approve.selector, spender, newAllowance) */\n      add(0x24, mload(0x40))\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2316:2335  _callOptionalReturn */\n      tag_49\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2316:2413  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2226:2420  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":2099:2420  function safeIncreaseAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SuperDepositor.sol\":2759:3049  function _approveIfNeeded(address spender, address token) internal {... */\n    tag_87:\n        /* \"SuperDepositor.sol\":2837:2861  IERC20Upgradeable token_ */\n      0x00\n        /* \"SuperDepositor.sol\":2882:2887  token */\n      dup2\n        /* \"SuperDepositor.sol\":2837:2888  IERC20Upgradeable token_ = IERC20Upgradeable(token) */\n      swap1\n      pop\n        /* \"SuperDepositor.sol\":2955:2956  0 */\n      0x00\n        /* \"SuperDepositor.sol\":2903:2909  token_ */\n      dup2\n        /* \"SuperDepositor.sol\":2903:2919  token_.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"SuperDepositor.sol\":2928:2932  this */\n      address\n        /* \"SuperDepositor.sol\":2935:2942  spender */\n      dup7\n        /* \"SuperDepositor.sol\":2903:2943  token_.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_122:\n        /* \"SuperDepositor.sol\":2903:2957  token_.allowance(address(this), spender) == uint256(0) */\n      sub\n        /* \"SuperDepositor.sol\":2899:3042  if (token_.allowance(address(this), spender) == uint256(0)) {... */\n      tag_123\n      jumpi\n        /* \"SuperDepositor.sol\":2974:3030  token_.safeIncreaseAllowance(spender, type(uint256).max) */\n      tag_124\n        /* \"SuperDepositor.sol\":3003:3010  spender */\n      dup4\n        /* \"SuperDepositor.sol\":3012:3029  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"SuperDepositor.sol\":2974:2980  token_ */\n      dup4\n        /* \"SuperDepositor.sol\":2974:3002  token_.safeIncreaseAllowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_79\n      swap1\n        /* \"SuperDepositor.sol\":2974:3030  token_.safeIncreaseAllowance(spender, type(uint256).max) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"SuperDepositor.sol\":2899:3042  if (token_.allowance(address(this), spender) == uint256(0)) {... */\n    tag_123:\n        /* \"SuperDepositor.sol\":2826:3049  {... */\n      pop\n        /* \"SuperDepositor.sol\":2759:3049  function _approveIfNeeded(address spender, address token) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":888:893  token */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":918:941  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":943:945  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":947:952  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":895:953  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:887  _callOptionalReturn */\n      tag_49\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3872:4095  function functionCall(... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4005:4017  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4036:4088  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4058:4064  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4066:4070  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4072:4073  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4075:4087  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4036:4057  functionCallWithValue */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4036:4088  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4029:4088  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3872:4095  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4959:5458  function functionCallWithValue(... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5124:5136  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5181:5186  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5156:5177  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5156:5186  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5148:5229  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5247:5265  isContract(target) */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5258:5264  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5247:5257  isContract */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5247:5265  isContract(target) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5239:5299  require(isContract(target), \"Address: call to non-contract\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5311:5323  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5325:5348  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5352:5358  target */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5352:5363  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5371:5376  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5378:5382  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5352:5383  target.call{value: value}(data) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_144\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_143)\n    tag_144:\n      0x60\n      swap2\n      pop\n    tag_143:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5310:5383  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5400:5451  verifyCallResult(success, returndata, errorMessage) */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5417:5424  success */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5426:5436  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5438:5450  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5400:5416  verifyCallResult */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5400:5451  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5393:5451  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4959:5458  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1246:1250  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1483  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1469:1499  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6622:7314  function verifyCallResult(... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6768:6780  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6796:6803  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6792:7308  if (success) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6826:6836  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6819:6836  return returndata */\n      swap1\n      pop\n      jump(tag_148)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6792:7308  if (success) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6957:6958  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6937:6947  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6937:6954  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6937:6958  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6933:7298  if (returndata.length > 0) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7131:7141  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7125:7142  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7191:7206  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7178:7188  returndata */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7174:7176  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7170:7189  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7163:7207  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6933:7298  if (returndata.length > 0) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7270:7282  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7263:7283  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6622:7314  function verifyCallResult(... */\n    tag_148:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_60:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_75:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_155:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_156:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_157:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_158:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:559   */\n    tag_159:\n        /* \"#utility.yul\":498:504   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x1f\n        /* \"#utility.yul\":545:552   */\n      not\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":533:538   */\n      dup4\n        /* \"#utility.yul\":529:543   */\n      add\n        /* \"#utility.yul\":525:553   */\n      and\n        /* \"#utility.yul\":515:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":457:559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_53:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x41\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:1032   */\n    tag_160:\n        /* \"#utility.yul\":834:861   */\n      tag_243\n        /* \"#utility.yul\":856:860   */\n      dup3\n        /* \"#utility.yul\":834:861   */\n      tag_159\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":822:862   */\n      add\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":952:962   */\n      dup2\n        /* \"#utility.yul\":949:971   */\n      lt\n        /* \"#utility.yul\":928:946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":916:926   */\n      dup3\n        /* \"#utility.yul\":913:947   */\n      gt\n        /* \"#utility.yul\":910:972   */\n      or\n        /* \"#utility.yul\":907:995   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":975:993   */\n      tag_245\n      tag_53\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":907:995   */\n    tag_244:\n        /* \"#utility.yul\":1015:1025   */\n      dup1\n        /* \"#utility.yul\":1011:1013   */\n      0x40\n        /* \"#utility.yul\":1004:1026   */\n      mstore\n        /* \"#utility.yul\":794:1032   */\n      pop\n        /* \"#utility.yul\":751:1032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1167   */\n    tag_161:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1099:1119   */\n      tag_247\n      tag_155\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1089:1119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1161   */\n      tag_248\n        /* \"#utility.yul\":1156:1160   */\n      dup3\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1128:1161   */\n      tag_160\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1038:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1290   */\n    tag_162:\n        /* \"#utility.yul\":1282:1283   */\n      0x00\n        /* \"#utility.yul\":1279:1280   */\n      dup1\n        /* \"#utility.yul\":1272:1284   */\n      revert\n        /* \"#utility.yul\":1296:1413   */\n    tag_163:\n        /* \"#utility.yul\":1405:1406   */\n      0x00\n        /* \"#utility.yul\":1402:1403   */\n      dup1\n        /* \"#utility.yul\":1395:1407   */\n      revert\n        /* \"#utility.yul\":1419:1745   */\n    tag_164:\n        /* \"#utility.yul\":1511:1515   */\n      0x00\n        /* \"#utility.yul\":1601:1619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1593:1599   */\n      dup3\n        /* \"#utility.yul\":1590:1620   */\n      gt\n        /* \"#utility.yul\":1587:1643   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":1623:1641   */\n      tag_253\n      tag_53\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1587:1643   */\n    tag_252:\n        /* \"#utility.yul\":1673:1677   */\n      0x20\n        /* \"#utility.yul\":1665:1671   */\n      dup3\n        /* \"#utility.yul\":1661:1678   */\n      mul\n        /* \"#utility.yul\":1653:1678   */\n      swap1\n      pop\n        /* \"#utility.yul\":1733:1737   */\n      0x20\n        /* \"#utility.yul\":1727:1731   */\n      dup2\n        /* \"#utility.yul\":1723:1738   */\n      add\n        /* \"#utility.yul\":1715:1738   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1751:1868   */\n    tag_165:\n        /* \"#utility.yul\":1860:1861   */\n      0x00\n        /* \"#utility.yul\":1857:1858   */\n      dup1\n        /* \"#utility.yul\":1850:1862   */\n      revert\n        /* \"#utility.yul\":1874:2000   */\n    tag_166:\n        /* \"#utility.yul\":1911:1918   */\n      0x00\n        /* \"#utility.yul\":1951:1993   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1944:1949   */\n      dup3\n        /* \"#utility.yul\":1940:1994   */\n      and\n        /* \"#utility.yul\":1929:1994   */\n      swap1\n      pop\n        /* \"#utility.yul\":1874:2000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2006:2102   */\n    tag_167:\n        /* \"#utility.yul\":2043:2050   */\n      0x00\n        /* \"#utility.yul\":2072:2096   */\n      tag_257\n        /* \"#utility.yul\":2090:2095   */\n      dup3\n        /* \"#utility.yul\":2072:2096   */\n      tag_166\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2061:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2006:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2219   */\n    tag_168:\n        /* \"#utility.yul\":2160:2167   */\n      0x00\n        /* \"#utility.yul\":2189:2213   */\n      tag_259\n        /* \"#utility.yul\":2207:2212   */\n      dup3\n        /* \"#utility.yul\":2189:2213   */\n      tag_167\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2178:2213   */\n      swap1\n      pop\n        /* \"#utility.yul\":2108:2219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2225:2377   */\n    tag_169:\n        /* \"#utility.yul\":2313:2352   */\n      tag_261\n        /* \"#utility.yul\":2346:2351   */\n      dup2\n        /* \"#utility.yul\":2313:2352   */\n      tag_168\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2306:2311   */\n      dup2\n        /* \"#utility.yul\":2303:2353   */\n      eq\n        /* \"#utility.yul\":2293:2371   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2364:2365   */\n      dup1\n        /* \"#utility.yul\":2357:2369   */\n      revert\n        /* \"#utility.yul\":2293:2371   */\n    tag_262:\n        /* \"#utility.yul\":2225:2377   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2383:2552   */\n    tag_170:\n        /* \"#utility.yul\":2444:2449   */\n      0x00\n        /* \"#utility.yul\":2482:2488   */\n      dup2\n        /* \"#utility.yul\":2469:2489   */\n      calldataload\n        /* \"#utility.yul\":2460:2489   */\n      swap1\n      pop\n        /* \"#utility.yul\":2498:2546   */\n      tag_264\n        /* \"#utility.yul\":2540:2545   */\n      dup2\n        /* \"#utility.yul\":2498:2546   */\n      tag_169\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2383:2552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2583:3338   */\n    tag_171:\n        /* \"#utility.yul\":2694:2699   */\n      0x00\n        /* \"#utility.yul\":2719:2815   */\n      tag_266\n        /* \"#utility.yul\":2735:2814   */\n      tag_267\n        /* \"#utility.yul\":2807:2813   */\n      dup5\n        /* \"#utility.yul\":2735:2814   */\n      tag_164\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2719:2815   */\n      tag_161\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2710:2815   */\n      swap1\n      pop\n        /* \"#utility.yul\":2835:2840   */\n      dup1\n        /* \"#utility.yul\":2864:2870   */\n      dup4\n        /* \"#utility.yul\":2857:2862   */\n      dup3\n        /* \"#utility.yul\":2850:2871   */\n      mstore\n        /* \"#utility.yul\":2898:2902   */\n      0x20\n        /* \"#utility.yul\":2891:2896   */\n      dup3\n        /* \"#utility.yul\":2887:2903   */\n      add\n        /* \"#utility.yul\":2880:2903   */\n      swap1\n      pop\n        /* \"#utility.yul\":2951:2955   */\n      0x20\n        /* \"#utility.yul\":2943:2949   */\n      dup5\n        /* \"#utility.yul\":2939:2956   */\n      mul\n        /* \"#utility.yul\":2931:2937   */\n      dup4\n        /* \"#utility.yul\":2927:2957   */\n      add\n        /* \"#utility.yul\":2980:2983   */\n      dup6\n        /* \"#utility.yul\":2972:2978   */\n      dup2\n        /* \"#utility.yul\":2969:2984   */\n      gt\n        /* \"#utility.yul\":2966:3088   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2999:3078   */\n      tag_269\n      tag_165\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2966:3088   */\n    tag_268:\n        /* \"#utility.yul\":3114:3120   */\n      dup4\n        /* \"#utility.yul\":3097:3332   */\n    tag_270:\n        /* \"#utility.yul\":3131:3137   */\n      dup2\n        /* \"#utility.yul\":3126:3129   */\n      dup2\n        /* \"#utility.yul\":3123:3138   */\n      lt\n        /* \"#utility.yul\":3097:3332   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":3206:3209   */\n      dup1\n        /* \"#utility.yul\":3235:3287   */\n      tag_273\n        /* \"#utility.yul\":3283:3286   */\n      dup9\n        /* \"#utility.yul\":3271:3281   */\n      dup3\n        /* \"#utility.yul\":3235:3287   */\n      tag_170\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3230:3233   */\n      dup5\n        /* \"#utility.yul\":3223:3288   */\n      mstore\n        /* \"#utility.yul\":3317:3321   */\n      0x20\n        /* \"#utility.yul\":3312:3315   */\n      dup5\n        /* \"#utility.yul\":3308:3322   */\n      add\n        /* \"#utility.yul\":3301:3322   */\n      swap4\n      pop\n        /* \"#utility.yul\":3173:3332   */\n      pop\n        /* \"#utility.yul\":3157:3161   */\n      0x20\n        /* \"#utility.yul\":3152:3155   */\n      dup2\n        /* \"#utility.yul\":3148:3162   */\n      add\n        /* \"#utility.yul\":3141:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3097:3332   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":3101:3122   */\n      pop\n        /* \"#utility.yul\":2700:3338   */\n      pop\n      pop\n        /* \"#utility.yul\":2583:3338   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3369:3769   */\n    tag_172:\n        /* \"#utility.yul\":3455:3460   */\n      0x00\n        /* \"#utility.yul\":3504:3507   */\n      dup3\n        /* \"#utility.yul\":3497:3501   */\n      0x1f\n        /* \"#utility.yul\":3489:3495   */\n      dup4\n        /* \"#utility.yul\":3485:3502   */\n      add\n        /* \"#utility.yul\":3481:3508   */\n      slt\n        /* \"#utility.yul\":3471:3593   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":3512:3591   */\n      tag_276\n      tag_163\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3471:3593   */\n    tag_275:\n        /* \"#utility.yul\":3629:3635   */\n      dup2\n        /* \"#utility.yul\":3616:3636   */\n      calldataload\n        /* \"#utility.yul\":3654:3763   */\n      tag_277\n        /* \"#utility.yul\":3759:3762   */\n      dup5\n        /* \"#utility.yul\":3751:3757   */\n      dup3\n        /* \"#utility.yul\":3744:3748   */\n      0x20\n        /* \"#utility.yul\":3736:3742   */\n      dup7\n        /* \"#utility.yul\":3732:3749   */\n      add\n        /* \"#utility.yul\":3654:3763   */\n      tag_171\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3645:3763   */\n      swap2\n      pop\n        /* \"#utility.yul\":3461:3769   */\n      pop\n        /* \"#utility.yul\":3369:3769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:3852   */\n    tag_173:\n        /* \"#utility.yul\":3812:3819   */\n      0x00\n        /* \"#utility.yul\":3841:3846   */\n      dup2\n        /* \"#utility.yul\":3830:3846   */\n      swap1\n      pop\n        /* \"#utility.yul\":3775:3852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3858:3980   */\n    tag_174:\n        /* \"#utility.yul\":3931:3955   */\n      tag_280\n        /* \"#utility.yul\":3949:3954   */\n      dup2\n        /* \"#utility.yul\":3931:3955   */\n      tag_173\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3924:3929   */\n      dup2\n        /* \"#utility.yul\":3921:3956   */\n      eq\n        /* \"#utility.yul\":3911:3974   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":3970:3971   */\n      0x00\n        /* \"#utility.yul\":3967:3968   */\n      dup1\n        /* \"#utility.yul\":3960:3972   */\n      revert\n        /* \"#utility.yul\":3911:3974   */\n    tag_281:\n        /* \"#utility.yul\":3858:3980   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3986:4125   */\n    tag_175:\n        /* \"#utility.yul\":4032:4037   */\n      0x00\n        /* \"#utility.yul\":4070:4076   */\n      dup2\n        /* \"#utility.yul\":4057:4077   */\n      calldataload\n        /* \"#utility.yul\":4048:4077   */\n      swap1\n      pop\n        /* \"#utility.yul\":4086:4119   */\n      tag_283\n        /* \"#utility.yul\":4113:4118   */\n      dup2\n        /* \"#utility.yul\":4086:4119   */\n      tag_174\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3986:4125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4131:4208   */\n    tag_176:\n        /* \"#utility.yul\":4168:4175   */\n      0x00\n        /* \"#utility.yul\":4197:4202   */\n      dup2\n        /* \"#utility.yul\":4186:4202   */\n      swap1\n      pop\n        /* \"#utility.yul\":4131:4208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4214:4336   */\n    tag_177:\n        /* \"#utility.yul\":4287:4311   */\n      tag_286\n        /* \"#utility.yul\":4305:4310   */\n      dup2\n        /* \"#utility.yul\":4287:4311   */\n      tag_176\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4280:4285   */\n      dup2\n        /* \"#utility.yul\":4277:4312   */\n      eq\n        /* \"#utility.yul\":4267:4330   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":4326:4327   */\n      0x00\n        /* \"#utility.yul\":4323:4324   */\n      dup1\n        /* \"#utility.yul\":4316:4328   */\n      revert\n        /* \"#utility.yul\":4267:4330   */\n    tag_287:\n        /* \"#utility.yul\":4214:4336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4342:4481   */\n    tag_178:\n        /* \"#utility.yul\":4388:4393   */\n      0x00\n        /* \"#utility.yul\":4426:4432   */\n      dup2\n        /* \"#utility.yul\":4413:4433   */\n      calldataload\n        /* \"#utility.yul\":4404:4433   */\n      swap1\n      pop\n        /* \"#utility.yul\":4442:4475   */\n      tag_289\n        /* \"#utility.yul\":4469:4474   */\n      dup2\n        /* \"#utility.yul\":4442:4475   */\n      tag_177\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4342:4481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4487:4609   */\n    tag_179:\n        /* \"#utility.yul\":4560:4584   */\n      tag_291\n        /* \"#utility.yul\":4578:4583   */\n      dup2\n        /* \"#utility.yul\":4560:4584   */\n      tag_167\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4553:4558   */\n      dup2\n        /* \"#utility.yul\":4550:4585   */\n      eq\n        /* \"#utility.yul\":4540:4603   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":4599:4600   */\n      0x00\n        /* \"#utility.yul\":4596:4597   */\n      dup1\n        /* \"#utility.yul\":4589:4601   */\n      revert\n        /* \"#utility.yul\":4540:4603   */\n    tag_292:\n        /* \"#utility.yul\":4487:4609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4615:4754   */\n    tag_180:\n        /* \"#utility.yul\":4661:4666   */\n      0x00\n        /* \"#utility.yul\":4699:4705   */\n      dup2\n        /* \"#utility.yul\":4686:4706   */\n      calldataload\n        /* \"#utility.yul\":4677:4706   */\n      swap1\n      pop\n        /* \"#utility.yul\":4715:4748   */\n      tag_294\n        /* \"#utility.yul\":4742:4747   */\n      dup2\n        /* \"#utility.yul\":4715:4748   */\n      tag_179\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4615:4754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4798:6251   */\n    tag_181:\n        /* \"#utility.yul\":4876:4881   */\n      0x00\n        /* \"#utility.yul\":4920:4924   */\n      0xc0\n        /* \"#utility.yul\":4908:4917   */\n      dup3\n        /* \"#utility.yul\":4903:4906   */\n      dup5\n        /* \"#utility.yul\":4899:4918   */\n      sub\n        /* \"#utility.yul\":4895:4925   */\n      slt\n        /* \"#utility.yul\":4892:5009   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":4928:5007   */\n      tag_297\n      tag_158\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4892:5009   */\n    tag_296:\n        /* \"#utility.yul\":5027:5048   */\n      tag_298\n        /* \"#utility.yul\":5043:5047   */\n      0xc0\n        /* \"#utility.yul\":5027:5048   */\n      tag_161\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5018:5048   */\n      swap1\n      pop\n        /* \"#utility.yul\":5142:5143   */\n      0x00\n        /* \"#utility.yul\":5131:5140   */\n      dup3\n        /* \"#utility.yul\":5127:5144   */\n      add\n        /* \"#utility.yul\":5114:5145   */\n      calldataload\n        /* \"#utility.yul\":5172:5190   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5164:5170   */\n      dup2\n        /* \"#utility.yul\":5161:5191   */\n      gt\n        /* \"#utility.yul\":5158:5275   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5194:5273   */\n      tag_300\n      tag_162\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5158:5275   */\n    tag_299:\n        /* \"#utility.yul\":5314:5403   */\n      tag_301\n        /* \"#utility.yul\":5399:5402   */\n      dup5\n        /* \"#utility.yul\":5390:5396   */\n      dup3\n        /* \"#utility.yul\":5379:5388   */\n      dup6\n        /* \"#utility.yul\":5375:5397   */\n      add\n        /* \"#utility.yul\":5314:5403   */\n      tag_172\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5307:5311   */\n      0x00\n        /* \"#utility.yul\":5300:5305   */\n      dup4\n        /* \"#utility.yul\":5296:5312   */\n      add\n        /* \"#utility.yul\":5289:5404   */\n      mstore\n        /* \"#utility.yul\":5058:5415   */\n      pop\n        /* \"#utility.yul\":5480:5482   */\n      0x20\n        /* \"#utility.yul\":5521:5570   */\n      tag_302\n        /* \"#utility.yul\":5566:5569   */\n      dup5\n        /* \"#utility.yul\":5557:5563   */\n      dup3\n        /* \"#utility.yul\":5546:5555   */\n      dup6\n        /* \"#utility.yul\":5542:5564   */\n      add\n        /* \"#utility.yul\":5521:5570   */\n      tag_175\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5514:5518   */\n      0x20\n        /* \"#utility.yul\":5507:5512   */\n      dup4\n        /* \"#utility.yul\":5503:5519   */\n      add\n        /* \"#utility.yul\":5496:5571   */\n      mstore\n        /* \"#utility.yul\":5425:5582   */\n      pop\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5689:5738   */\n      tag_303\n        /* \"#utility.yul\":5734:5737   */\n      dup5\n        /* \"#utility.yul\":5725:5731   */\n      dup3\n        /* \"#utility.yul\":5714:5723   */\n      dup6\n        /* \"#utility.yul\":5710:5732   */\n      add\n        /* \"#utility.yul\":5689:5738   */\n      tag_178\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5682:5686   */\n      0x40\n        /* \"#utility.yul\":5675:5680   */\n      dup4\n        /* \"#utility.yul\":5671:5687   */\n      add\n        /* \"#utility.yul\":5664:5739   */\n      mstore\n        /* \"#utility.yul\":5592:5750   */\n      pop\n        /* \"#utility.yul\":5812:5814   */\n      0x60\n        /* \"#utility.yul\":5853:5902   */\n      tag_304\n        /* \"#utility.yul\":5898:5901   */\n      dup5\n        /* \"#utility.yul\":5889:5895   */\n      dup3\n        /* \"#utility.yul\":5878:5887   */\n      dup6\n        /* \"#utility.yul\":5874:5896   */\n      add\n        /* \"#utility.yul\":5853:5902   */\n      tag_180\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5846:5850   */\n      0x60\n        /* \"#utility.yul\":5839:5844   */\n      dup4\n        /* \"#utility.yul\":5835:5851   */\n      add\n        /* \"#utility.yul\":5828:5903   */\n      mstore\n        /* \"#utility.yul\":5760:5914   */\n      pop\n        /* \"#utility.yul\":5974:5977   */\n      0x80\n        /* \"#utility.yul\":6016:6065   */\n      tag_305\n        /* \"#utility.yul\":6061:6064   */\n      dup5\n        /* \"#utility.yul\":6052:6058   */\n      dup3\n        /* \"#utility.yul\":6041:6050   */\n      dup6\n        /* \"#utility.yul\":6037:6059   */\n      add\n        /* \"#utility.yul\":6016:6065   */\n      tag_180\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6009:6013   */\n      0x80\n        /* \"#utility.yul\":6002:6007   */\n      dup4\n        /* \"#utility.yul\":5998:6014   */\n      add\n        /* \"#utility.yul\":5991:6066   */\n      mstore\n        /* \"#utility.yul\":5924:6077   */\n      pop\n        /* \"#utility.yul\":6141:6144   */\n      0xa0\n        /* \"#utility.yul\":6183:6232   */\n      tag_306\n        /* \"#utility.yul\":6228:6231   */\n      dup5\n        /* \"#utility.yul\":6219:6225   */\n      dup3\n        /* \"#utility.yul\":6208:6217   */\n      dup6\n        /* \"#utility.yul\":6204:6226   */\n      add\n        /* \"#utility.yul\":6183:6232   */\n      tag_180\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6176:6180   */\n      0xa0\n        /* \"#utility.yul\":6169:6174   */\n      dup4\n        /* \"#utility.yul\":6165:6181   */\n      add\n        /* \"#utility.yul\":6158:6233   */\n      mstore\n        /* \"#utility.yul\":6087:6244   */\n      pop\n        /* \"#utility.yul\":4798:6251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6257:6949   */\n    tag_9:\n        /* \"#utility.yul\":6354:6360   */\n      0x00\n        /* \"#utility.yul\":6362:6368   */\n      dup1\n        /* \"#utility.yul\":6411:6413   */\n      0x40\n        /* \"#utility.yul\":6399:6408   */\n      dup4\n        /* \"#utility.yul\":6390:6397   */\n      dup6\n        /* \"#utility.yul\":6386:6409   */\n      sub\n        /* \"#utility.yul\":6382:6414   */\n      slt\n        /* \"#utility.yul\":6379:6498   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6417:6496   */\n      tag_309\n      tag_156\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6379:6498   */\n    tag_308:\n        /* \"#utility.yul\":6565:6566   */\n      0x00\n        /* \"#utility.yul\":6554:6563   */\n      dup4\n        /* \"#utility.yul\":6550:6567   */\n      add\n        /* \"#utility.yul\":6537:6568   */\n      calldataload\n        /* \"#utility.yul\":6595:6613   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6587:6593   */\n      dup2\n        /* \"#utility.yul\":6584:6614   */\n      gt\n        /* \"#utility.yul\":6581:6698   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":6617:6696   */\n      tag_311\n      tag_157\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6581:6698   */\n    tag_310:\n        /* \"#utility.yul\":6722:6804   */\n      tag_312\n        /* \"#utility.yul\":6796:6803   */\n      dup6\n        /* \"#utility.yul\":6787:6793   */\n      dup3\n        /* \"#utility.yul\":6776:6785   */\n      dup7\n        /* \"#utility.yul\":6772:6794   */\n      add\n        /* \"#utility.yul\":6722:6804   */\n      tag_181\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6712:6804   */\n      swap3\n      pop\n        /* \"#utility.yul\":6508:6814   */\n      pop\n        /* \"#utility.yul\":6853:6855   */\n      0x20\n        /* \"#utility.yul\":6879:6932   */\n      tag_313\n        /* \"#utility.yul\":6924:6931   */\n      dup6\n        /* \"#utility.yul\":6915:6921   */\n      dup3\n        /* \"#utility.yul\":6904:6913   */\n      dup7\n        /* \"#utility.yul\":6900:6922   */\n      add\n        /* \"#utility.yul\":6879:6932   */\n      tag_175\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6869:6932   */\n      swap2\n      pop\n        /* \"#utility.yul\":6824:6942   */\n      pop\n        /* \"#utility.yul\":6257:6949   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6955:7073   */\n    tag_182:\n        /* \"#utility.yul\":7042:7066   */\n      tag_315\n        /* \"#utility.yul\":7060:7065   */\n      dup2\n        /* \"#utility.yul\":7042:7066   */\n      tag_167\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7037:7040   */\n      dup3\n        /* \"#utility.yul\":7030:7067   */\n      mstore\n        /* \"#utility.yul\":6955:7073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7079:7301   */\n    tag_14:\n        /* \"#utility.yul\":7172:7176   */\n      0x00\n        /* \"#utility.yul\":7210:7212   */\n      0x20\n        /* \"#utility.yul\":7199:7208   */\n      dup3\n        /* \"#utility.yul\":7195:7213   */\n      add\n        /* \"#utility.yul\":7187:7213   */\n      swap1\n      pop\n        /* \"#utility.yul\":7223:7294   */\n      tag_317\n        /* \"#utility.yul\":7291:7292   */\n      0x00\n        /* \"#utility.yul\":7280:7289   */\n      dup4\n        /* \"#utility.yul\":7276:7293   */\n      add\n        /* \"#utility.yul\":7267:7273   */\n      dup5\n        /* \"#utility.yul\":7223:7294   */\n      tag_182\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7079:7301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7307:8144   */\n    tag_17:\n        /* \"#utility.yul\":7413:7419   */\n      0x00\n        /* \"#utility.yul\":7421:7427   */\n      dup1\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7478:7480   */\n      0x60\n        /* \"#utility.yul\":7466:7475   */\n      dup5\n        /* \"#utility.yul\":7457:7464   */\n      dup7\n        /* \"#utility.yul\":7453:7476   */\n      sub\n        /* \"#utility.yul\":7449:7481   */\n      slt\n        /* \"#utility.yul\":7446:7565   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":7484:7563   */\n      tag_320\n      tag_156\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7446:7565   */\n    tag_319:\n        /* \"#utility.yul\":7604:7605   */\n      0x00\n        /* \"#utility.yul\":7629:7682   */\n      tag_321\n        /* \"#utility.yul\":7674:7681   */\n      dup7\n        /* \"#utility.yul\":7665:7671   */\n      dup3\n        /* \"#utility.yul\":7654:7663   */\n      dup8\n        /* \"#utility.yul\":7650:7672   */\n      add\n        /* \"#utility.yul\":7629:7682   */\n      tag_180\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":7619:7682   */\n      swap4\n      pop\n        /* \"#utility.yul\":7575:7692   */\n      pop\n        /* \"#utility.yul\":7759:7761   */\n      0x20\n        /* \"#utility.yul\":7748:7757   */\n      dup5\n        /* \"#utility.yul\":7744:7762   */\n      add\n        /* \"#utility.yul\":7731:7763   */\n      calldataload\n        /* \"#utility.yul\":7790:7808   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7782:7788   */\n      dup2\n        /* \"#utility.yul\":7779:7809   */\n      gt\n        /* \"#utility.yul\":7776:7893   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":7812:7891   */\n      tag_323\n      tag_157\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7776:7893   */\n    tag_322:\n        /* \"#utility.yul\":7917:7999   */\n      tag_324\n        /* \"#utility.yul\":7991:7998   */\n      dup7\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7971:7980   */\n      dup8\n        /* \"#utility.yul\":7967:7989   */\n      add\n        /* \"#utility.yul\":7917:7999   */\n      tag_181\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7907:7999   */\n      swap3\n      pop\n        /* \"#utility.yul\":7702:8009   */\n      pop\n        /* \"#utility.yul\":8048:8050   */\n      0x40\n        /* \"#utility.yul\":8074:8127   */\n      tag_325\n        /* \"#utility.yul\":8119:8126   */\n      dup7\n        /* \"#utility.yul\":8110:8116   */\n      dup3\n        /* \"#utility.yul\":8099:8108   */\n      dup8\n        /* \"#utility.yul\":8095:8117   */\n      add\n        /* \"#utility.yul\":8074:8127   */\n      tag_175\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8064:8127   */\n      swap2\n      pop\n        /* \"#utility.yul\":8019:8137   */\n      pop\n        /* \"#utility.yul\":7307:8144   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8150:8330   */\n    tag_33:\n        /* \"#utility.yul\":8198:8275   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8195:8196   */\n      0x00\n        /* \"#utility.yul\":8188:8276   */\n      mstore\n        /* \"#utility.yul\":8295:8299   */\n      0x32\n        /* \"#utility.yul\":8292:8293   */\n      0x04\n        /* \"#utility.yul\":8285:8300   */\n      mstore\n        /* \"#utility.yul\":8319:8323   */\n      0x24\n        /* \"#utility.yul\":8316:8317   */\n      0x00\n        /* \"#utility.yul\":8309:8324   */\n      revert\n        /* \"#utility.yul\":8336:8454   */\n    tag_183:\n        /* \"#utility.yul\":8423:8447   */\n      tag_328\n        /* \"#utility.yul\":8441:8446   */\n      dup2\n        /* \"#utility.yul\":8423:8447   */\n      tag_173\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8418:8421   */\n      dup3\n        /* \"#utility.yul\":8411:8448   */\n      mstore\n        /* \"#utility.yul\":8336:8454   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8902   */\n    tag_48:\n        /* \"#utility.yul\":8609:8613   */\n      0x00\n        /* \"#utility.yul\":8647:8649   */\n      0x60\n        /* \"#utility.yul\":8636:8645   */\n      dup3\n        /* \"#utility.yul\":8632:8650   */\n      add\n        /* \"#utility.yul\":8624:8650   */\n      swap1\n      pop\n        /* \"#utility.yul\":8660:8731   */\n      tag_330\n        /* \"#utility.yul\":8728:8729   */\n      0x00\n        /* \"#utility.yul\":8717:8726   */\n      dup4\n        /* \"#utility.yul\":8713:8730   */\n      add\n        /* \"#utility.yul\":8704:8710   */\n      dup7\n        /* \"#utility.yul\":8660:8731   */\n      tag_182\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8741:8813   */\n      tag_331\n        /* \"#utility.yul\":8809:8811   */\n      0x20\n        /* \"#utility.yul\":8798:8807   */\n      dup4\n        /* \"#utility.yul\":8794:8812   */\n      add\n        /* \"#utility.yul\":8785:8791   */\n      dup6\n        /* \"#utility.yul\":8741:8813   */\n      tag_182\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8823:8895   */\n      tag_332\n        /* \"#utility.yul\":8891:8893   */\n      0x40\n        /* \"#utility.yul\":8880:8889   */\n      dup4\n        /* \"#utility.yul\":8876:8894   */\n      add\n        /* \"#utility.yul\":8867:8873   */\n      dup5\n        /* \"#utility.yul\":8823:8895   */\n      tag_183\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":8460:8902   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8908:8993   */\n    tag_184:\n        /* \"#utility.yul\":8953:8960   */\n      0x00\n        /* \"#utility.yul\":8982:8987   */\n      dup2\n        /* \"#utility.yul\":8971:8987   */\n      swap1\n      pop\n        /* \"#utility.yul\":8908:8993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8999:9085   */\n    tag_185:\n        /* \"#utility.yul\":9034:9041   */\n      0x00\n        /* \"#utility.yul\":9074:9078   */\n      0xff\n        /* \"#utility.yul\":9067:9072   */\n      dup3\n        /* \"#utility.yul\":9063:9079   */\n      and\n        /* \"#utility.yul\":9052:9079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8999:9085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9091:9151   */\n    tag_186:\n        /* \"#utility.yul\":9119:9122   */\n      0x00\n        /* \"#utility.yul\":9140:9145   */\n      dup2\n        /* \"#utility.yul\":9133:9145   */\n      swap1\n      pop\n        /* \"#utility.yul\":9091:9151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9157:9311   */\n    tag_187:\n        /* \"#utility.yul\":9213:9222   */\n      0x00\n        /* \"#utility.yul\":9246:9305   */\n      tag_337\n        /* \"#utility.yul\":9262:9304   */\n      tag_338\n        /* \"#utility.yul\":9271:9303   */\n      tag_339\n        /* \"#utility.yul\":9297:9302   */\n      dup5\n        /* \"#utility.yul\":9271:9303   */\n      tag_184\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9262:9304   */\n      tag_186\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":9246:9305   */\n      tag_185\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":9233:9305   */\n      swap1\n      pop\n        /* \"#utility.yul\":9157:9311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9317:9460   */\n    tag_188:\n        /* \"#utility.yul\":9410:9453   */\n      tag_341\n        /* \"#utility.yul\":9447:9452   */\n      dup2\n        /* \"#utility.yul\":9410:9453   */\n      tag_187\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9405:9408   */\n      dup3\n        /* \"#utility.yul\":9398:9454   */\n      mstore\n        /* \"#utility.yul\":9317:9460   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9466:9580   */\n    tag_189:\n        /* \"#utility.yul\":9533:9539   */\n      0x00\n        /* \"#utility.yul\":9567:9572   */\n      dup2\n        /* \"#utility.yul\":9561:9573   */\n      mload\n        /* \"#utility.yul\":9551:9573   */\n      swap1\n      pop\n        /* \"#utility.yul\":9466:9580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9586:9770   */\n    tag_190:\n        /* \"#utility.yul\":9685:9696   */\n      0x00\n        /* \"#utility.yul\":9719:9725   */\n      dup3\n        /* \"#utility.yul\":9714:9717   */\n      dup3\n        /* \"#utility.yul\":9707:9726   */\n      mstore\n        /* \"#utility.yul\":9759:9763   */\n      0x20\n        /* \"#utility.yul\":9754:9757   */\n      dup3\n        /* \"#utility.yul\":9750:9764   */\n      add\n        /* \"#utility.yul\":9735:9764   */\n      swap1\n      pop\n        /* \"#utility.yul\":9586:9770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9776:9908   */\n    tag_191:\n        /* \"#utility.yul\":9843:9847   */\n      0x00\n        /* \"#utility.yul\":9866:9869   */\n      dup2\n        /* \"#utility.yul\":9858:9869   */\n      swap1\n      pop\n        /* \"#utility.yul\":9896:9900   */\n      0x20\n        /* \"#utility.yul\":9891:9894   */\n      dup3\n        /* \"#utility.yul\":9887:9901   */\n      add\n        /* \"#utility.yul\":9879:9901   */\n      swap1\n      pop\n        /* \"#utility.yul\":9776:9908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9914:10022   */\n    tag_192:\n        /* \"#utility.yul\":9991:10015   */\n      tag_346\n        /* \"#utility.yul\":10009:10014   */\n      dup2\n        /* \"#utility.yul\":9991:10015   */\n      tag_173\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9986:9989   */\n      dup3\n        /* \"#utility.yul\":9979:10016   */\n      mstore\n        /* \"#utility.yul\":9914:10022   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10028:10207   */\n    tag_193:\n        /* \"#utility.yul\":10097:10107   */\n      0x00\n        /* \"#utility.yul\":10118:10164   */\n      tag_348\n        /* \"#utility.yul\":10160:10163   */\n      dup4\n        /* \"#utility.yul\":10152:10158   */\n      dup4\n        /* \"#utility.yul\":10118:10164   */\n      tag_192\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10196:10200   */\n      0x20\n        /* \"#utility.yul\":10191:10194   */\n      dup4\n        /* \"#utility.yul\":10187:10201   */\n      add\n        /* \"#utility.yul\":10173:10201   */\n      swap1\n      pop\n        /* \"#utility.yul\":10028:10207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10213:10326   */\n    tag_194:\n        /* \"#utility.yul\":10283:10287   */\n      0x00\n        /* \"#utility.yul\":10315:10319   */\n      0x20\n        /* \"#utility.yul\":10310:10313   */\n      dup3\n        /* \"#utility.yul\":10306:10320   */\n      add\n        /* \"#utility.yul\":10298:10320   */\n      swap1\n      pop\n        /* \"#utility.yul\":10213:10326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10362:11094   */\n    tag_195:\n        /* \"#utility.yul\":10481:10484   */\n      0x00\n        /* \"#utility.yul\":10510:10564   */\n      tag_351\n        /* \"#utility.yul\":10558:10563   */\n      dup3\n        /* \"#utility.yul\":10510:10564   */\n      tag_189\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":10580:10666   */\n      tag_352\n        /* \"#utility.yul\":10659:10665   */\n      dup2\n        /* \"#utility.yul\":10654:10657   */\n      dup6\n        /* \"#utility.yul\":10580:10666   */\n      tag_190\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10573:10666   */\n      swap4\n      pop\n        /* \"#utility.yul\":10690:10746   */\n      tag_353\n        /* \"#utility.yul\":10740:10745   */\n      dup4\n        /* \"#utility.yul\":10690:10746   */\n      tag_191\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10769:10776   */\n      dup1\n        /* \"#utility.yul\":10800:10801   */\n      0x00\n        /* \"#utility.yul\":10785:11069   */\n    tag_354:\n        /* \"#utility.yul\":10810:10816   */\n      dup4\n        /* \"#utility.yul\":10807:10808   */\n      dup2\n        /* \"#utility.yul\":10804:10817   */\n      lt\n        /* \"#utility.yul\":10785:11069   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":10886:10892   */\n      dup2\n        /* \"#utility.yul\":10880:10893   */\n      mload\n        /* \"#utility.yul\":10913:10976   */\n      tag_357\n        /* \"#utility.yul\":10972:10975   */\n      dup9\n        /* \"#utility.yul\":10957:10970   */\n      dup3\n        /* \"#utility.yul\":10913:10976   */\n      tag_193\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10906:10976   */\n      swap8\n      pop\n        /* \"#utility.yul\":10999:11059   */\n      tag_358\n        /* \"#utility.yul\":11052:11058   */\n      dup4\n        /* \"#utility.yul\":10999:11059   */\n      tag_194\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10989:11059   */\n      swap3\n      pop\n        /* \"#utility.yul\":10845:11069   */\n      pop\n        /* \"#utility.yul\":10832:10833   */\n      0x01\n        /* \"#utility.yul\":10829:10830   */\n      dup2\n        /* \"#utility.yul\":10825:10834   */\n      add\n        /* \"#utility.yul\":10820:10834   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:11069   */\n      jump(tag_354)\n    tag_356:\n        /* \"#utility.yul\":10789:10803   */\n      pop\n        /* \"#utility.yul\":11085:11088   */\n      dup6\n        /* \"#utility.yul\":11078:11088   */\n      swap4\n      pop\n        /* \"#utility.yul\":10486:11094   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10362:11094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11100:11705   */\n    tag_58:\n        /* \"#utility.yul\":11305:11309   */\n      0x00\n        /* \"#utility.yul\":11343:11345   */\n      0x60\n        /* \"#utility.yul\":11332:11341   */\n      dup3\n        /* \"#utility.yul\":11328:11346   */\n      add\n        /* \"#utility.yul\":11320:11346   */\n      swap1\n      pop\n        /* \"#utility.yul\":11356:11433   */\n      tag_360\n        /* \"#utility.yul\":11430:11431   */\n      0x00\n        /* \"#utility.yul\":11419:11428   */\n      dup4\n        /* \"#utility.yul\":11415:11432   */\n      add\n        /* \"#utility.yul\":11406:11412   */\n      dup7\n        /* \"#utility.yul\":11356:11433   */\n      tag_188\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11480:11489   */\n      dup2\n        /* \"#utility.yul\":11474:11478   */\n      dup2\n        /* \"#utility.yul\":11470:11490   */\n      sub\n        /* \"#utility.yul\":11465:11467   */\n      0x20\n        /* \"#utility.yul\":11454:11463   */\n      dup4\n        /* \"#utility.yul\":11450:11468   */\n      add\n        /* \"#utility.yul\":11443:11491   */\n      mstore\n        /* \"#utility.yul\":11508:11616   */\n      tag_361\n        /* \"#utility.yul\":11611:11615   */\n      dup2\n        /* \"#utility.yul\":11602:11608   */\n      dup6\n        /* \"#utility.yul\":11508:11616   */\n      tag_195\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":11500:11616   */\n      swap1\n      pop\n        /* \"#utility.yul\":11626:11698   */\n      tag_362\n        /* \"#utility.yul\":11694:11696   */\n      0x40\n        /* \"#utility.yul\":11683:11692   */\n      dup4\n        /* \"#utility.yul\":11679:11697   */\n      add\n        /* \"#utility.yul\":11670:11676   */\n      dup5\n        /* \"#utility.yul\":11626:11698   */\n      tag_183\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":11100:11705   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11711:11829   */\n    tag_196:\n        /* \"#utility.yul\":11798:11822   */\n      tag_364\n        /* \"#utility.yul\":11816:11821   */\n      dup2\n        /* \"#utility.yul\":11798:11822   */\n      tag_176\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":11793:11796   */\n      dup3\n        /* \"#utility.yul\":11786:11823   */\n      mstore\n        /* \"#utility.yul\":11711:11829   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11835:11939   */\n    tag_197:\n        /* \"#utility.yul\":11880:11887   */\n      0x00\n        /* \"#utility.yul\":11909:11933   */\n      tag_366\n        /* \"#utility.yul\":11927:11932   */\n      dup3\n        /* \"#utility.yul\":11909:11933   */\n      tag_166\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":11898:11933   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11945:12087   */\n    tag_198:\n        /* \"#utility.yul\":12048:12080   */\n      tag_368\n        /* \"#utility.yul\":12074:12079   */\n      dup2\n        /* \"#utility.yul\":12048:12080   */\n      tag_197\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12043:12046   */\n      dup3\n        /* \"#utility.yul\":12036:12081   */\n      mstore\n        /* \"#utility.yul\":11945:12087   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12093:12222   */\n    tag_199:\n        /* \"#utility.yul\":12175:12181   */\n      0x00\n        /* \"#utility.yul\":12209:12214   */\n      dup2\n        /* \"#utility.yul\":12203:12215   */\n      mload\n        /* \"#utility.yul\":12193:12215   */\n      swap1\n      pop\n        /* \"#utility.yul\":12093:12222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12228:12402   */\n    tag_200:\n        /* \"#utility.yul\":12317:12328   */\n      0x00\n        /* \"#utility.yul\":12351:12357   */\n      dup3\n        /* \"#utility.yul\":12346:12349   */\n      dup3\n        /* \"#utility.yul\":12339:12358   */\n      mstore\n        /* \"#utility.yul\":12391:12395   */\n      0x20\n        /* \"#utility.yul\":12386:12389   */\n      dup3\n        /* \"#utility.yul\":12382:12396   */\n      add\n        /* \"#utility.yul\":12367:12396   */\n      swap1\n      pop\n        /* \"#utility.yul\":12228:12402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12408:12555   */\n    tag_201:\n        /* \"#utility.yul\":12490:12494   */\n      0x00\n        /* \"#utility.yul\":12513:12516   */\n      dup2\n        /* \"#utility.yul\":12505:12516   */\n      swap1\n      pop\n        /* \"#utility.yul\":12543:12547   */\n      0x20\n        /* \"#utility.yul\":12538:12541   */\n      dup3\n        /* \"#utility.yul\":12534:12548   */\n      add\n        /* \"#utility.yul\":12526:12548   */\n      swap1\n      pop\n        /* \"#utility.yul\":12408:12555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12561:12703   */\n    tag_202:\n        /* \"#utility.yul\":12611:12620   */\n      0x00\n        /* \"#utility.yul\":12644:12697   */\n      tag_373\n        /* \"#utility.yul\":12662:12696   */\n      tag_374\n        /* \"#utility.yul\":12671:12695   */\n      tag_375\n        /* \"#utility.yul\":12689:12694   */\n      dup5\n        /* \"#utility.yul\":12671:12695   */\n      tag_166\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":12662:12696   */\n      tag_186\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":12644:12697   */\n      tag_166\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12631:12697   */\n      swap1\n      pop\n        /* \"#utility.yul\":12561:12703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12709:12835   */\n    tag_203:\n        /* \"#utility.yul\":12759:12768   */\n      0x00\n        /* \"#utility.yul\":12792:12829   */\n      tag_377\n        /* \"#utility.yul\":12823:12828   */\n      dup3\n        /* \"#utility.yul\":12792:12829   */\n      tag_202\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12779:12829   */\n      swap1\n      pop\n        /* \"#utility.yul\":12709:12835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12841:12982   */\n    tag_204:\n        /* \"#utility.yul\":12906:12915   */\n      0x00\n        /* \"#utility.yul\":12939:12976   */\n      tag_379\n        /* \"#utility.yul\":12970:12975   */\n      dup3\n        /* \"#utility.yul\":12939:12976   */\n      tag_203\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12926:12976   */\n      swap1\n      pop\n        /* \"#utility.yul\":12841:12982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13139   */\n    tag_205:\n        /* \"#utility.yul\":13080:13132   */\n      tag_381\n        /* \"#utility.yul\":13126:13131   */\n      dup2\n        /* \"#utility.yul\":13080:13132   */\n      tag_204\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":13075:13078   */\n      dup3\n        /* \"#utility.yul\":13068:13133   */\n      mstore\n        /* \"#utility.yul\":12988:13139   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13145:13354   */\n    tag_206:\n        /* \"#utility.yul\":13229:13239   */\n      0x00\n        /* \"#utility.yul\":13250:13311   */\n      tag_383\n        /* \"#utility.yul\":13307:13310   */\n      dup4\n        /* \"#utility.yul\":13299:13305   */\n      dup4\n        /* \"#utility.yul\":13250:13311   */\n      tag_205\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13343:13347   */\n      0x20\n        /* \"#utility.yul\":13338:13341   */\n      dup4\n        /* \"#utility.yul\":13334:13348   */\n      add\n        /* \"#utility.yul\":13320:13348   */\n      swap1\n      pop\n        /* \"#utility.yul\":13145:13354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13360:13488   */\n    tag_207:\n        /* \"#utility.yul\":13445:13449   */\n      0x00\n        /* \"#utility.yul\":13477:13481   */\n      0x20\n        /* \"#utility.yul\":13472:13475   */\n      dup3\n        /* \"#utility.yul\":13468:13482   */\n      add\n        /* \"#utility.yul\":13460:13482   */\n      swap1\n      pop\n        /* \"#utility.yul\":13360:13488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13532:14319   */\n    tag_208:\n        /* \"#utility.yul\":13656:13659   */\n      0x00\n        /* \"#utility.yul\":13685:13754   */\n      tag_386\n        /* \"#utility.yul\":13748:13753   */\n      dup3\n        /* \"#utility.yul\":13685:13754   */\n      tag_199\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13770:13846   */\n      tag_387\n        /* \"#utility.yul\":13839:13845   */\n      dup2\n        /* \"#utility.yul\":13834:13837   */\n      dup6\n        /* \"#utility.yul\":13770:13846   */\n      tag_200\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13763:13846   */\n      swap4\n      pop\n        /* \"#utility.yul\":13870:13941   */\n      tag_388\n        /* \"#utility.yul\":13935:13940   */\n      dup4\n        /* \"#utility.yul\":13870:13941   */\n      tag_201\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":13964:13971   */\n      dup1\n        /* \"#utility.yul\":13995:13996   */\n      0x00\n        /* \"#utility.yul\":13980:14294   */\n    tag_389:\n        /* \"#utility.yul\":14005:14011   */\n      dup4\n        /* \"#utility.yul\":14002:14003   */\n      dup2\n        /* \"#utility.yul\":13999:14012   */\n      lt\n        /* \"#utility.yul\":13980:14294   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":14081:14087   */\n      dup2\n        /* \"#utility.yul\":14075:14088   */\n      mload\n        /* \"#utility.yul\":14108:14186   */\n      tag_392\n        /* \"#utility.yul\":14182:14185   */\n      dup9\n        /* \"#utility.yul\":14167:14180   */\n      dup3\n        /* \"#utility.yul\":14108:14186   */\n      tag_206\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":14101:14186   */\n      swap8\n      pop\n        /* \"#utility.yul\":14209:14284   */\n      tag_393\n        /* \"#utility.yul\":14277:14283   */\n      dup4\n        /* \"#utility.yul\":14209:14284   */\n      tag_207\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":14199:14284   */\n      swap3\n      pop\n        /* \"#utility.yul\":14040:14294   */\n      pop\n        /* \"#utility.yul\":14027:14028   */\n      0x01\n        /* \"#utility.yul\":14024:14025   */\n      dup2\n        /* \"#utility.yul\":14020:14029   */\n      add\n        /* \"#utility.yul\":14015:14029   */\n      swap1\n      pop\n        /* \"#utility.yul\":13980:14294   */\n      jump(tag_389)\n    tag_391:\n        /* \"#utility.yul\":13984:13998   */\n      pop\n        /* \"#utility.yul\":14310:14313   */\n      dup6\n        /* \"#utility.yul\":14303:14313   */\n      swap4\n      pop\n        /* \"#utility.yul\":13661:14319   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13532:14319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14325:14499   */\n    tag_209:\n        /* \"#utility.yul\":14414:14425   */\n      0x00\n        /* \"#utility.yul\":14448:14454   */\n      dup3\n        /* \"#utility.yul\":14443:14446   */\n      dup3\n        /* \"#utility.yul\":14436:14455   */\n      mstore\n        /* \"#utility.yul\":14488:14492   */\n      0x20\n        /* \"#utility.yul\":14483:14486   */\n      dup3\n        /* \"#utility.yul\":14479:14493   */\n      add\n        /* \"#utility.yul\":14464:14493   */\n      swap1\n      pop\n        /* \"#utility.yul\":14325:14499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14535:15247   */\n    tag_210:\n        /* \"#utility.yul\":14644:14647   */\n      0x00\n        /* \"#utility.yul\":14673:14727   */\n      tag_396\n        /* \"#utility.yul\":14721:14726   */\n      dup3\n        /* \"#utility.yul\":14673:14727   */\n      tag_189\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14743:14819   */\n      tag_397\n        /* \"#utility.yul\":14812:14818   */\n      dup2\n        /* \"#utility.yul\":14807:14810   */\n      dup6\n        /* \"#utility.yul\":14743:14819   */\n      tag_209\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":14736:14819   */\n      swap4\n      pop\n        /* \"#utility.yul\":14843:14899   */\n      tag_398\n        /* \"#utility.yul\":14893:14898   */\n      dup4\n        /* \"#utility.yul\":14843:14899   */\n      tag_191\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14922:14929   */\n      dup1\n        /* \"#utility.yul\":14953:14954   */\n      0x00\n        /* \"#utility.yul\":14938:15222   */\n    tag_399:\n        /* \"#utility.yul\":14963:14969   */\n      dup4\n        /* \"#utility.yul\":14960:14961   */\n      dup2\n        /* \"#utility.yul\":14957:14970   */\n      lt\n        /* \"#utility.yul\":14938:15222   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":15039:15045   */\n      dup2\n        /* \"#utility.yul\":15033:15046   */\n      mload\n        /* \"#utility.yul\":15066:15129   */\n      tag_402\n        /* \"#utility.yul\":15125:15128   */\n      dup9\n        /* \"#utility.yul\":15110:15123   */\n      dup3\n        /* \"#utility.yul\":15066:15129   */\n      tag_193\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":15059:15129   */\n      swap8\n      pop\n        /* \"#utility.yul\":15152:15212   */\n      tag_403\n        /* \"#utility.yul\":15205:15211   */\n      dup4\n        /* \"#utility.yul\":15152:15212   */\n      tag_194\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":15142:15212   */\n      swap3\n      pop\n        /* \"#utility.yul\":14998:15222   */\n      pop\n        /* \"#utility.yul\":14985:14986   */\n      0x01\n        /* \"#utility.yul\":14982:14983   */\n      dup2\n        /* \"#utility.yul\":14978:14987   */\n      add\n        /* \"#utility.yul\":14973:14987   */\n      swap1\n      pop\n        /* \"#utility.yul\":14938:15222   */\n      jump(tag_399)\n    tag_401:\n        /* \"#utility.yul\":14942:14956   */\n      pop\n        /* \"#utility.yul\":15238:15241   */\n      dup6\n        /* \"#utility.yul\":15231:15241   */\n      swap4\n      pop\n        /* \"#utility.yul\":14649:15247   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14535:15247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15253:15351   */\n    tag_211:\n        /* \"#utility.yul\":15304:15310   */\n      0x00\n        /* \"#utility.yul\":15338:15343   */\n      dup2\n        /* \"#utility.yul\":15332:15344   */\n      mload\n        /* \"#utility.yul\":15322:15344   */\n      swap1\n      pop\n        /* \"#utility.yul\":15253:15351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15357:15515   */\n    tag_212:\n        /* \"#utility.yul\":15430:15441   */\n      0x00\n        /* \"#utility.yul\":15464:15470   */\n      dup3\n        /* \"#utility.yul\":15459:15462   */\n      dup3\n        /* \"#utility.yul\":15452:15471   */\n      mstore\n        /* \"#utility.yul\":15504:15508   */\n      0x20\n        /* \"#utility.yul\":15499:15502   */\n      dup3\n        /* \"#utility.yul\":15495:15509   */\n      add\n        /* \"#utility.yul\":15480:15509   */\n      swap1\n      pop\n        /* \"#utility.yul\":15357:15515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15521:15828   */\n    tag_213:\n        /* \"#utility.yul\":15589:15590   */\n      0x00\n        /* \"#utility.yul\":15599:15712   */\n    tag_407:\n        /* \"#utility.yul\":15613:15619   */\n      dup4\n        /* \"#utility.yul\":15610:15611   */\n      dup2\n        /* \"#utility.yul\":15607:15620   */\n      lt\n        /* \"#utility.yul\":15599:15712   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":15698:15699   */\n      dup1\n        /* \"#utility.yul\":15693:15696   */\n      dup3\n        /* \"#utility.yul\":15689:15700   */\n      add\n        /* \"#utility.yul\":15683:15701   */\n      mload\n        /* \"#utility.yul\":15679:15680   */\n      dup2\n        /* \"#utility.yul\":15674:15677   */\n      dup5\n        /* \"#utility.yul\":15670:15681   */\n      add\n        /* \"#utility.yul\":15663:15702   */\n      mstore\n        /* \"#utility.yul\":15635:15637   */\n      0x20\n        /* \"#utility.yul\":15632:15633   */\n      dup2\n        /* \"#utility.yul\":15628:15638   */\n      add\n        /* \"#utility.yul\":15623:15638   */\n      swap1\n      pop\n        /* \"#utility.yul\":15599:15712   */\n      jump(tag_407)\n    tag_409:\n        /* \"#utility.yul\":15730:15736   */\n      dup4\n        /* \"#utility.yul\":15727:15728   */\n      dup2\n        /* \"#utility.yul\":15724:15737   */\n      gt\n        /* \"#utility.yul\":15721:15822   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":15810:15811   */\n      0x00\n        /* \"#utility.yul\":15801:15807   */\n      dup5\n        /* \"#utility.yul\":15796:15799   */\n      dup5\n        /* \"#utility.yul\":15792:15808   */\n      add\n        /* \"#utility.yul\":15785:15812   */\n      mstore\n        /* \"#utility.yul\":15721:15822   */\n    tag_410:\n        /* \"#utility.yul\":15570:15828   */\n      pop\n        /* \"#utility.yul\":15521:15828   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15834:16174   */\n    tag_214:\n        /* \"#utility.yul\":15910:15913   */\n      0x00\n        /* \"#utility.yul\":15938:15976   */\n      tag_412\n        /* \"#utility.yul\":15970:15975   */\n      dup3\n        /* \"#utility.yul\":15938:15976   */\n      tag_211\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15992:16052   */\n      tag_413\n        /* \"#utility.yul\":16045:16051   */\n      dup2\n        /* \"#utility.yul\":16040:16043   */\n      dup6\n        /* \"#utility.yul\":15992:16052   */\n      tag_212\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15985:16052   */\n      swap4\n      pop\n        /* \"#utility.yul\":16061:16113   */\n      tag_414\n        /* \"#utility.yul\":16106:16112   */\n      dup2\n        /* \"#utility.yul\":16101:16104   */\n      dup6\n        /* \"#utility.yul\":16094:16098   */\n      0x20\n        /* \"#utility.yul\":16087:16092   */\n      dup7\n        /* \"#utility.yul\":16083:16099   */\n      add\n        /* \"#utility.yul\":16061:16113   */\n      tag_213\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":16138:16167   */\n      tag_415\n        /* \"#utility.yul\":16160:16166   */\n      dup2\n        /* \"#utility.yul\":16138:16167   */\n      tag_159\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":16133:16136   */\n      dup5\n        /* \"#utility.yul\":16129:16168   */\n      add\n        /* \"#utility.yul\":16122:16168   */\n      swap2\n      pop\n        /* \"#utility.yul\":15914:16174   */\n      pop\n        /* \"#utility.yul\":15834:16174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16180:16270   */\n    tag_215:\n        /* \"#utility.yul\":16214:16221   */\n      0x00\n        /* \"#utility.yul\":16257:16262   */\n      dup2\n        /* \"#utility.yul\":16250:16263   */\n      iszero\n        /* \"#utility.yul\":16243:16264   */\n      iszero\n        /* \"#utility.yul\":16232:16264   */\n      swap1\n      pop\n        /* \"#utility.yul\":16180:16270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16276:16375   */\n    tag_216:\n        /* \"#utility.yul\":16347:16368   */\n      tag_418\n        /* \"#utility.yul\":16362:16367   */\n      dup2\n        /* \"#utility.yul\":16347:16368   */\n      tag_215\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":16342:16345   */\n      dup3\n        /* \"#utility.yul\":16335:16369   */\n      mstore\n        /* \"#utility.yul\":16276:16375   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16459:17666   */\n    tag_217:\n        /* \"#utility.yul\":16594:16597   */\n      0x00\n        /* \"#utility.yul\":16630:16634   */\n      0x80\n        /* \"#utility.yul\":16625:16628   */\n      dup4\n        /* \"#utility.yul\":16621:16635   */\n      add\n        /* \"#utility.yul\":16719:16723   */\n      0x00\n        /* \"#utility.yul\":16712:16717   */\n      dup4\n        /* \"#utility.yul\":16708:16724   */\n      add\n        /* \"#utility.yul\":16702:16725   */\n      mload\n        /* \"#utility.yul\":16772:16775   */\n      dup5\n        /* \"#utility.yul\":16766:16770   */\n      dup3\n        /* \"#utility.yul\":16762:16776   */\n      sub\n        /* \"#utility.yul\":16755:16759   */\n      0x00\n        /* \"#utility.yul\":16750:16753   */\n      dup7\n        /* \"#utility.yul\":16746:16760   */\n      add\n        /* \"#utility.yul\":16739:16777   */\n      mstore\n        /* \"#utility.yul\":16798:16916   */\n      tag_420\n        /* \"#utility.yul\":16911:16915   */\n      dup3\n        /* \"#utility.yul\":16897:16909   */\n      dup3\n        /* \"#utility.yul\":16798:16916   */\n      tag_208\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16790:16916   */\n      swap2\n      pop\n        /* \"#utility.yul\":16645:16927   */\n      pop\n        /* \"#utility.yul\":17018:17022   */\n      0x20\n        /* \"#utility.yul\":17011:17016   */\n      dup4\n        /* \"#utility.yul\":17007:17023   */\n      add\n        /* \"#utility.yul\":17001:17024   */\n      mload\n        /* \"#utility.yul\":17071:17074   */\n      dup5\n        /* \"#utility.yul\":17065:17069   */\n      dup3\n        /* \"#utility.yul\":17061:17075   */\n      sub\n        /* \"#utility.yul\":17054:17058   */\n      0x20\n        /* \"#utility.yul\":17049:17052   */\n      dup7\n        /* \"#utility.yul\":17045:17059   */\n      add\n        /* \"#utility.yul\":17038:17076   */\n      mstore\n        /* \"#utility.yul\":17097:17200   */\n      tag_421\n        /* \"#utility.yul\":17195:17199   */\n      dup3\n        /* \"#utility.yul\":17181:17193   */\n      dup3\n        /* \"#utility.yul\":17097:17200   */\n      tag_210\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":17089:17200   */\n      swap2\n      pop\n        /* \"#utility.yul\":16937:17211   */\n      pop\n        /* \"#utility.yul\":17297:17301   */\n      0x40\n        /* \"#utility.yul\":17290:17295   */\n      dup4\n        /* \"#utility.yul\":17286:17302   */\n      add\n        /* \"#utility.yul\":17280:17303   */\n      mload\n        /* \"#utility.yul\":17350:17353   */\n      dup5\n        /* \"#utility.yul\":17344:17348   */\n      dup3\n        /* \"#utility.yul\":17340:17354   */\n      sub\n        /* \"#utility.yul\":17333:17337   */\n      0x40\n        /* \"#utility.yul\":17328:17331   */\n      dup7\n        /* \"#utility.yul\":17324:17338   */\n      add\n        /* \"#utility.yul\":17317:17355   */\n      mstore\n        /* \"#utility.yul\":17376:17447   */\n      tag_422\n        /* \"#utility.yul\":17442:17446   */\n      dup3\n        /* \"#utility.yul\":17428:17440   */\n      dup3\n        /* \"#utility.yul\":17376:17447   */\n      tag_214\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":17368:17447   */\n      swap2\n      pop\n        /* \"#utility.yul\":17221:17458   */\n      pop\n        /* \"#utility.yul\":17553:17557   */\n      0x60\n        /* \"#utility.yul\":17546:17551   */\n      dup4\n        /* \"#utility.yul\":17542:17558   */\n      add\n        /* \"#utility.yul\":17536:17559   */\n      mload\n        /* \"#utility.yul\":17572:17629   */\n      tag_423\n        /* \"#utility.yul\":17623:17627   */\n      0x60\n        /* \"#utility.yul\":17618:17621   */\n      dup7\n        /* \"#utility.yul\":17614:17628   */\n      add\n        /* \"#utility.yul\":17600:17612   */\n      dup3\n        /* \"#utility.yul\":17572:17629   */\n      tag_216\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":17468:17639   */\n      pop\n        /* \"#utility.yul\":17656:17660   */\n      dup1\n        /* \"#utility.yul\":17649:17660   */\n      swap2\n      pop\n        /* \"#utility.yul\":16599:17666   */\n      pop\n        /* \"#utility.yul\":16459:17666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17672:18440   */\n    tag_62:\n        /* \"#utility.yul\":17931:17935   */\n      0x00\n        /* \"#utility.yul\":17969:17972   */\n      0x80\n        /* \"#utility.yul\":17958:17967   */\n      dup3\n        /* \"#utility.yul\":17954:17973   */\n      add\n        /* \"#utility.yul\":17946:17973   */\n      swap1\n      pop\n        /* \"#utility.yul\":17983:18054   */\n      tag_425\n        /* \"#utility.yul\":18051:18052   */\n      0x00\n        /* \"#utility.yul\":18040:18049   */\n      dup4\n        /* \"#utility.yul\":18036:18053   */\n      add\n        /* \"#utility.yul\":18027:18033   */\n      dup8\n        /* \"#utility.yul\":17983:18054   */\n      tag_196\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":18064:18136   */\n      tag_426\n        /* \"#utility.yul\":18132:18134   */\n      0x20\n        /* \"#utility.yul\":18121:18130   */\n      dup4\n        /* \"#utility.yul\":18117:18135   */\n      add\n        /* \"#utility.yul\":18108:18114   */\n      dup7\n        /* \"#utility.yul\":18064:18136   */\n      tag_182\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":18146:18234   */\n      tag_427\n        /* \"#utility.yul\":18230:18232   */\n      0x40\n        /* \"#utility.yul\":18219:18228   */\n      dup4\n        /* \"#utility.yul\":18215:18233   */\n      add\n        /* \"#utility.yul\":18206:18212   */\n      dup6\n        /* \"#utility.yul\":18146:18234   */\n      tag_198\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":18281:18290   */\n      dup2\n        /* \"#utility.yul\":18275:18279   */\n      dup2\n        /* \"#utility.yul\":18271:18291   */\n      sub\n        /* \"#utility.yul\":18266:18268   */\n      0x60\n        /* \"#utility.yul\":18255:18264   */\n      dup4\n        /* \"#utility.yul\":18251:18269   */\n      add\n        /* \"#utility.yul\":18244:18292   */\n      mstore\n        /* \"#utility.yul\":18309:18433   */\n      tag_428\n        /* \"#utility.yul\":18428:18432   */\n      dup2\n        /* \"#utility.yul\":18419:18425   */\n      dup5\n        /* \"#utility.yul\":18309:18433   */\n      tag_217\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":18301:18433   */\n      swap1\n      pop\n        /* \"#utility.yul\":17672:18440   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18446:18558   */\n    tag_218:\n        /* \"#utility.yul\":18529:18551   */\n      tag_430\n        /* \"#utility.yul\":18545:18550   */\n      dup2\n        /* \"#utility.yul\":18529:18551   */\n      tag_185\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":18524:18527   */\n      dup3\n        /* \"#utility.yul\":18517:18552   */\n      mstore\n        /* \"#utility.yul\":18446:18558   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18564:19149   */\n    tag_73:\n        /* \"#utility.yul\":18759:18763   */\n      0x00\n        /* \"#utility.yul\":18797:18799   */\n      0x60\n        /* \"#utility.yul\":18786:18795   */\n      dup3\n        /* \"#utility.yul\":18782:18800   */\n      add\n        /* \"#utility.yul\":18774:18800   */\n      swap1\n      pop\n        /* \"#utility.yul\":18810:18877   */\n      tag_432\n        /* \"#utility.yul\":18874:18875   */\n      0x00\n        /* \"#utility.yul\":18863:18872   */\n      dup4\n        /* \"#utility.yul\":18859:18876   */\n      add\n        /* \"#utility.yul\":18850:18856   */\n      dup7\n        /* \"#utility.yul\":18810:18877   */\n      tag_218\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":18924:18933   */\n      dup2\n        /* \"#utility.yul\":18918:18922   */\n      dup2\n        /* \"#utility.yul\":18914:18934   */\n      sub\n        /* \"#utility.yul\":18909:18911   */\n      0x20\n        /* \"#utility.yul\":18898:18907   */\n      dup4\n        /* \"#utility.yul\":18894:18912   */\n      add\n        /* \"#utility.yul\":18887:18935   */\n      mstore\n        /* \"#utility.yul\":18952:19060   */\n      tag_433\n        /* \"#utility.yul\":19055:19059   */\n      dup2\n        /* \"#utility.yul\":19046:19052   */\n      dup6\n        /* \"#utility.yul\":18952:19060   */\n      tag_195\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":18944:19060   */\n      swap1\n      pop\n        /* \"#utility.yul\":19070:19142   */\n      tag_434\n        /* \"#utility.yul\":19138:19140   */\n      0x40\n        /* \"#utility.yul\":19127:19136   */\n      dup4\n        /* \"#utility.yul\":19123:19141   */\n      add\n        /* \"#utility.yul\":19114:19120   */\n      dup5\n        /* \"#utility.yul\":19070:19142   */\n      tag_183\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":18564:19149   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19233:20441   */\n    tag_219:\n        /* \"#utility.yul\":19368:19371   */\n      0x00\n        /* \"#utility.yul\":19404:19408   */\n      0x80\n        /* \"#utility.yul\":19399:19402   */\n      dup4\n        /* \"#utility.yul\":19395:19409   */\n      add\n        /* \"#utility.yul\":19493:19497   */\n      0x00\n        /* \"#utility.yul\":19486:19491   */\n      dup4\n        /* \"#utility.yul\":19482:19498   */\n      add\n        /* \"#utility.yul\":19476:19499   */\n      mload\n        /* \"#utility.yul\":19546:19549   */\n      dup5\n        /* \"#utility.yul\":19540:19544   */\n      dup3\n        /* \"#utility.yul\":19536:19550   */\n      sub\n        /* \"#utility.yul\":19529:19533   */\n      0x00\n        /* \"#utility.yul\":19524:19527   */\n      dup7\n        /* \"#utility.yul\":19520:19534   */\n      add\n        /* \"#utility.yul\":19513:19551   */\n      mstore\n        /* \"#utility.yul\":19572:19690   */\n      tag_436\n        /* \"#utility.yul\":19685:19689   */\n      dup3\n        /* \"#utility.yul\":19671:19683   */\n      dup3\n        /* \"#utility.yul\":19572:19690   */\n      tag_208\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":19564:19690   */\n      swap2\n      pop\n        /* \"#utility.yul\":19419:19701   */\n      pop\n        /* \"#utility.yul\":19791:19795   */\n      0x20\n        /* \"#utility.yul\":19784:19789   */\n      dup4\n        /* \"#utility.yul\":19780:19796   */\n      add\n        /* \"#utility.yul\":19774:19797   */\n      mload\n        /* \"#utility.yul\":19844:19847   */\n      dup5\n        /* \"#utility.yul\":19838:19842   */\n      dup3\n        /* \"#utility.yul\":19834:19848   */\n      sub\n        /* \"#utility.yul\":19827:19831   */\n      0x20\n        /* \"#utility.yul\":19822:19825   */\n      dup7\n        /* \"#utility.yul\":19818:19832   */\n      add\n        /* \"#utility.yul\":19811:19849   */\n      mstore\n        /* \"#utility.yul\":19870:19973   */\n      tag_437\n        /* \"#utility.yul\":19968:19972   */\n      dup3\n        /* \"#utility.yul\":19954:19966   */\n      dup3\n        /* \"#utility.yul\":19870:19973   */\n      tag_210\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":19862:19973   */\n      swap2\n      pop\n        /* \"#utility.yul\":19711:19984   */\n      pop\n        /* \"#utility.yul\":20070:20074   */\n      0x40\n        /* \"#utility.yul\":20063:20068   */\n      dup4\n        /* \"#utility.yul\":20059:20075   */\n      add\n        /* \"#utility.yul\":20053:20076   */\n      mload\n        /* \"#utility.yul\":20123:20126   */\n      dup5\n        /* \"#utility.yul\":20117:20121   */\n      dup3\n        /* \"#utility.yul\":20113:20127   */\n      sub\n        /* \"#utility.yul\":20106:20110   */\n      0x40\n        /* \"#utility.yul\":20101:20104   */\n      dup7\n        /* \"#utility.yul\":20097:20111   */\n      add\n        /* \"#utility.yul\":20090:20128   */\n      mstore\n        /* \"#utility.yul\":20149:20220   */\n      tag_438\n        /* \"#utility.yul\":20215:20219   */\n      dup3\n        /* \"#utility.yul\":20201:20213   */\n      dup3\n        /* \"#utility.yul\":20149:20220   */\n      tag_214\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":20141:20220   */\n      swap2\n      pop\n        /* \"#utility.yul\":19994:20231   */\n      pop\n        /* \"#utility.yul\":20328:20332   */\n      0x60\n        /* \"#utility.yul\":20321:20326   */\n      dup4\n        /* \"#utility.yul\":20317:20333   */\n      add\n        /* \"#utility.yul\":20311:20334   */\n      mload\n        /* \"#utility.yul\":20347:20404   */\n      tag_439\n        /* \"#utility.yul\":20398:20402   */\n      0x60\n        /* \"#utility.yul\":20393:20396   */\n      dup7\n        /* \"#utility.yul\":20389:20403   */\n      add\n        /* \"#utility.yul\":20375:20387   */\n      dup3\n        /* \"#utility.yul\":20347:20404   */\n      tag_216\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":20241:20414   */\n      pop\n        /* \"#utility.yul\":20431:20435   */\n      dup1\n        /* \"#utility.yul\":20424:20435   */\n      swap2\n      pop\n        /* \"#utility.yul\":19373:20441   */\n      pop\n        /* \"#utility.yul\":19233:20441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20447:21183   */\n    tag_81:\n        /* \"#utility.yul\":20690:20694   */\n      0x00\n        /* \"#utility.yul\":20728:20731   */\n      0x80\n        /* \"#utility.yul\":20717:20726   */\n      dup3\n        /* \"#utility.yul\":20713:20732   */\n      add\n        /* \"#utility.yul\":20705:20732   */\n      swap1\n      pop\n        /* \"#utility.yul\":20742:20813   */\n      tag_441\n        /* \"#utility.yul\":20810:20811   */\n      0x00\n        /* \"#utility.yul\":20799:20808   */\n      dup4\n        /* \"#utility.yul\":20795:20812   */\n      add\n        /* \"#utility.yul\":20786:20792   */\n      dup8\n        /* \"#utility.yul\":20742:20813   */\n      tag_196\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":20823:20895   */\n      tag_442\n        /* \"#utility.yul\":20891:20893   */\n      0x20\n        /* \"#utility.yul\":20880:20889   */\n      dup4\n        /* \"#utility.yul\":20876:20894   */\n      add\n        /* \"#utility.yul\":20867:20873   */\n      dup7\n        /* \"#utility.yul\":20823:20895   */\n      tag_182\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":20905:20977   */\n      tag_443\n        /* \"#utility.yul\":20973:20975   */\n      0x40\n        /* \"#utility.yul\":20962:20971   */\n      dup4\n        /* \"#utility.yul\":20958:20976   */\n      add\n        /* \"#utility.yul\":20949:20955   */\n      dup6\n        /* \"#utility.yul\":20905:20977   */\n      tag_182\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":21024:21033   */\n      dup2\n        /* \"#utility.yul\":21018:21022   */\n      dup2\n        /* \"#utility.yul\":21014:21034   */\n      sub\n        /* \"#utility.yul\":21009:21011   */\n      0x60\n        /* \"#utility.yul\":20998:21007   */\n      dup4\n        /* \"#utility.yul\":20994:21012   */\n      add\n        /* \"#utility.yul\":20987:21035   */\n      mstore\n        /* \"#utility.yul\":21052:21176   */\n      tag_444\n        /* \"#utility.yul\":21171:21175   */\n      dup2\n        /* \"#utility.yul\":21162:21168   */\n      dup5\n        /* \"#utility.yul\":21052:21176   */\n      tag_219\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":21044:21176   */\n      swap1\n      pop\n        /* \"#utility.yul\":20447:21183   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21189:21332   */\n    tag_220:\n        /* \"#utility.yul\":21246:21251   */\n      0x00\n        /* \"#utility.yul\":21277:21283   */\n      dup2\n        /* \"#utility.yul\":21271:21284   */\n      mload\n        /* \"#utility.yul\":21262:21284   */\n      swap1\n      pop\n        /* \"#utility.yul\":21293:21326   */\n      tag_446\n        /* \"#utility.yul\":21320:21325   */\n      dup2\n        /* \"#utility.yul\":21293:21326   */\n      tag_174\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":21189:21332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21338:21689   */\n    tag_96:\n        /* \"#utility.yul\":21408:21414   */\n      0x00\n        /* \"#utility.yul\":21457:21459   */\n      0x20\n        /* \"#utility.yul\":21445:21454   */\n      dup3\n        /* \"#utility.yul\":21436:21443   */\n      dup5\n        /* \"#utility.yul\":21432:21455   */\n      sub\n        /* \"#utility.yul\":21428:21460   */\n      slt\n        /* \"#utility.yul\":21425:21544   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":21463:21542   */\n      tag_449\n      tag_156\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":21425:21544   */\n    tag_448:\n        /* \"#utility.yul\":21583:21584   */\n      0x00\n        /* \"#utility.yul\":21608:21672   */\n      tag_450\n        /* \"#utility.yul\":21664:21671   */\n      dup5\n        /* \"#utility.yul\":21655:21661   */\n      dup3\n        /* \"#utility.yul\":21644:21653   */\n      dup6\n        /* \"#utility.yul\":21640:21662   */\n      add\n        /* \"#utility.yul\":21608:21672   */\n      tag_220\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":21598:21672   */\n      swap2\n      pop\n        /* \"#utility.yul\":21554:21682   */\n      pop\n        /* \"#utility.yul\":21338:21689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21695:21811   */\n    tag_221:\n        /* \"#utility.yul\":21765:21786   */\n      tag_452\n        /* \"#utility.yul\":21780:21785   */\n      dup2\n        /* \"#utility.yul\":21765:21786   */\n      tag_215\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":21758:21763   */\n      dup2\n        /* \"#utility.yul\":21755:21787   */\n      eq\n        /* \"#utility.yul\":21745:21805   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":21801:21802   */\n      0x00\n        /* \"#utility.yul\":21798:21799   */\n      dup1\n        /* \"#utility.yul\":21791:21803   */\n      revert\n        /* \"#utility.yul\":21745:21805   */\n    tag_453:\n        /* \"#utility.yul\":21695:21811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21817:21954   */\n    tag_222:\n        /* \"#utility.yul\":21871:21876   */\n      0x00\n        /* \"#utility.yul\":21902:21908   */\n      dup2\n        /* \"#utility.yul\":21896:21909   */\n      mload\n        /* \"#utility.yul\":21887:21909   */\n      swap1\n      pop\n        /* \"#utility.yul\":21918:21948   */\n      tag_455\n        /* \"#utility.yul\":21942:21947   */\n      dup2\n        /* \"#utility.yul\":21918:21948   */\n      tag_221\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":21817:21954   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21960:22305   */\n    tag_103:\n        /* \"#utility.yul\":22027:22033   */\n      0x00\n        /* \"#utility.yul\":22076:22078   */\n      0x20\n        /* \"#utility.yul\":22064:22073   */\n      dup3\n        /* \"#utility.yul\":22055:22062   */\n      dup5\n        /* \"#utility.yul\":22051:22074   */\n      sub\n        /* \"#utility.yul\":22047:22079   */\n      slt\n        /* \"#utility.yul\":22044:22163   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":22082:22161   */\n      tag_458\n      tag_156\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":22044:22163   */\n    tag_457:\n        /* \"#utility.yul\":22202:22203   */\n      0x00\n        /* \"#utility.yul\":22227:22288   */\n      tag_459\n        /* \"#utility.yul\":22280:22287   */\n      dup5\n        /* \"#utility.yul\":22271:22277   */\n      dup3\n        /* \"#utility.yul\":22260:22269   */\n      dup6\n        /* \"#utility.yul\":22256:22278   */\n      add\n        /* \"#utility.yul\":22227:22288   */\n      tag_222\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":22217:22288   */\n      swap2\n      pop\n        /* \"#utility.yul\":22173:22298   */\n      pop\n        /* \"#utility.yul\":21960:22305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22311:22480   */\n    tag_223:\n        /* \"#utility.yul\":22395:22406   */\n      0x00\n        /* \"#utility.yul\":22429:22435   */\n      dup3\n        /* \"#utility.yul\":22424:22427   */\n      dup3\n        /* \"#utility.yul\":22417:22436   */\n      mstore\n        /* \"#utility.yul\":22469:22473   */\n      0x20\n        /* \"#utility.yul\":22464:22467   */\n      dup3\n        /* \"#utility.yul\":22460:22474   */\n      add\n        /* \"#utility.yul\":22445:22474   */\n      swap1\n      pop\n        /* \"#utility.yul\":22311:22480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22486:22715   */\n    tag_224:\n        /* \"#utility.yul\":22626:22660   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":22622:22623   */\n      0x00\n        /* \"#utility.yul\":22614:22620   */\n      dup3\n        /* \"#utility.yul\":22610:22624   */\n      add\n        /* \"#utility.yul\":22603:22661   */\n      mstore\n        /* \"#utility.yul\":22695:22707   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22690:22692   */\n      0x20\n        /* \"#utility.yul\":22682:22688   */\n      dup3\n        /* \"#utility.yul\":22678:22693   */\n      add\n        /* \"#utility.yul\":22671:22708   */\n      mstore\n        /* \"#utility.yul\":22486:22715   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22721:23087   */\n    tag_225:\n        /* \"#utility.yul\":22863:22866   */\n      0x00\n        /* \"#utility.yul\":22884:22951   */\n      tag_463\n        /* \"#utility.yul\":22948:22950   */\n      0x2a\n        /* \"#utility.yul\":22943:22946   */\n      dup4\n        /* \"#utility.yul\":22884:22951   */\n      tag_223\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":22877:22951   */\n      swap2\n      pop\n        /* \"#utility.yul\":22960:23053   */\n      tag_464\n        /* \"#utility.yul\":23049:23052   */\n      dup3\n        /* \"#utility.yul\":22960:23053   */\n      tag_224\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":23078:23080   */\n      0x40\n        /* \"#utility.yul\":23073:23076   */\n      dup3\n        /* \"#utility.yul\":23069:23081   */\n      add\n        /* \"#utility.yul\":23062:23081   */\n      swap1\n      pop\n        /* \"#utility.yul\":22721:23087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23093:23512   */\n    tag_106:\n        /* \"#utility.yul\":23259:23263   */\n      0x00\n        /* \"#utility.yul\":23297:23299   */\n      0x20\n        /* \"#utility.yul\":23286:23295   */\n      dup3\n        /* \"#utility.yul\":23282:23300   */\n      add\n        /* \"#utility.yul\":23274:23300   */\n      swap1\n      pop\n        /* \"#utility.yul\":23346:23355   */\n      dup2\n        /* \"#utility.yul\":23340:23344   */\n      dup2\n        /* \"#utility.yul\":23336:23356   */\n      sub\n        /* \"#utility.yul\":23332:23333   */\n      0x00\n        /* \"#utility.yul\":23321:23330   */\n      dup4\n        /* \"#utility.yul\":23317:23334   */\n      add\n        /* \"#utility.yul\":23310:23357   */\n      mstore\n        /* \"#utility.yul\":23374:23505   */\n      tag_466\n        /* \"#utility.yul\":23500:23504   */\n      dup2\n        /* \"#utility.yul\":23374:23505   */\n      tag_225\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":23366:23505   */\n      swap1\n      pop\n        /* \"#utility.yul\":23093:23512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23518:23850   */\n    tag_109:\n        /* \"#utility.yul\":23639:23643   */\n      0x00\n        /* \"#utility.yul\":23677:23679   */\n      0x40\n        /* \"#utility.yul\":23666:23675   */\n      dup3\n        /* \"#utility.yul\":23662:23680   */\n      add\n        /* \"#utility.yul\":23654:23680   */\n      swap1\n      pop\n        /* \"#utility.yul\":23690:23761   */\n      tag_468\n        /* \"#utility.yul\":23758:23759   */\n      0x00\n        /* \"#utility.yul\":23747:23756   */\n      dup4\n        /* \"#utility.yul\":23743:23760   */\n      add\n        /* \"#utility.yul\":23734:23740   */\n      dup6\n        /* \"#utility.yul\":23690:23761   */\n      tag_182\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":23771:23843   */\n      tag_469\n        /* \"#utility.yul\":23839:23841   */\n      0x20\n        /* \"#utility.yul\":23828:23837   */\n      dup4\n        /* \"#utility.yul\":23824:23842   */\n      add\n        /* \"#utility.yul\":23815:23821   */\n      dup5\n        /* \"#utility.yul\":23771:23843   */\n      tag_182\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":23518:23850   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23856:24036   */\n    tag_226:\n        /* \"#utility.yul\":23904:23981   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23901:23902   */\n      0x00\n        /* \"#utility.yul\":23894:23982   */\n      mstore\n        /* \"#utility.yul\":24001:24005   */\n      0x11\n        /* \"#utility.yul\":23998:23999   */\n      0x04\n        /* \"#utility.yul\":23991:24006   */\n      mstore\n        /* \"#utility.yul\":24025:24029   */\n      0x24\n        /* \"#utility.yul\":24022:24023   */\n      0x00\n        /* \"#utility.yul\":24015:24030   */\n      revert\n        /* \"#utility.yul\":24042:24347   */\n    tag_114:\n        /* \"#utility.yul\":24082:24085   */\n      0x00\n        /* \"#utility.yul\":24101:24121   */\n      tag_472\n        /* \"#utility.yul\":24119:24120   */\n      dup3\n        /* \"#utility.yul\":24101:24121   */\n      tag_173\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":24096:24121   */\n      swap2\n      pop\n        /* \"#utility.yul\":24135:24155   */\n      tag_473\n        /* \"#utility.yul\":24153:24154   */\n      dup4\n        /* \"#utility.yul\":24135:24155   */\n      tag_173\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":24130:24155   */\n      swap3\n      pop\n        /* \"#utility.yul\":24289:24290   */\n      dup3\n        /* \"#utility.yul\":24221:24287   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24217:24291   */\n      sub\n        /* \"#utility.yul\":24214:24215   */\n      dup3\n        /* \"#utility.yul\":24211:24292   */\n      gt\n        /* \"#utility.yul\":24208:24315   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":24295:24313   */\n      tag_475\n      tag_226\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":24208:24315   */\n    tag_474:\n        /* \"#utility.yul\":24339:24340   */\n      dup3\n        /* \"#utility.yul\":24336:24337   */\n      dup3\n        /* \"#utility.yul\":24332:24341   */\n      add\n        /* \"#utility.yul\":24325:24341   */\n      swap1\n      pop\n        /* \"#utility.yul\":24042:24347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24353:24685   */\n    tag_117:\n        /* \"#utility.yul\":24474:24478   */\n      0x00\n        /* \"#utility.yul\":24512:24514   */\n      0x40\n        /* \"#utility.yul\":24501:24510   */\n      dup3\n        /* \"#utility.yul\":24497:24515   */\n      add\n        /* \"#utility.yul\":24489:24515   */\n      swap1\n      pop\n        /* \"#utility.yul\":24525:24596   */\n      tag_477\n        /* \"#utility.yul\":24593:24594   */\n      0x00\n        /* \"#utility.yul\":24582:24591   */\n      dup4\n        /* \"#utility.yul\":24578:24595   */\n      add\n        /* \"#utility.yul\":24569:24575   */\n      dup6\n        /* \"#utility.yul\":24525:24596   */\n      tag_182\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":24606:24678   */\n      tag_478\n        /* \"#utility.yul\":24674:24676   */\n      0x20\n        /* \"#utility.yul\":24663:24672   */\n      dup4\n        /* \"#utility.yul\":24659:24677   */\n      add\n        /* \"#utility.yul\":24650:24656   */\n      dup5\n        /* \"#utility.yul\":24606:24678   */\n      tag_183\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":24353:24685   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24691:24916   */\n    tag_227:\n        /* \"#utility.yul\":24831:24865   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":24827:24828   */\n      0x00\n        /* \"#utility.yul\":24819:24825   */\n      dup3\n        /* \"#utility.yul\":24815:24829   */\n      add\n        /* \"#utility.yul\":24808:24866   */\n      mstore\n        /* \"#utility.yul\":24900:24908   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24895:24897   */\n      0x20\n        /* \"#utility.yul\":24887:24893   */\n      dup3\n        /* \"#utility.yul\":24883:24898   */\n      add\n        /* \"#utility.yul\":24876:24909   */\n      mstore\n        /* \"#utility.yul\":24691:24916   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24922:25288   */\n    tag_228:\n        /* \"#utility.yul\":25064:25067   */\n      0x00\n        /* \"#utility.yul\":25085:25152   */\n      tag_481\n        /* \"#utility.yul\":25149:25151   */\n      0x26\n        /* \"#utility.yul\":25144:25147   */\n      dup4\n        /* \"#utility.yul\":25085:25152   */\n      tag_223\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":25078:25152   */\n      swap2\n      pop\n        /* \"#utility.yul\":25161:25254   */\n      tag_482\n        /* \"#utility.yul\":25250:25253   */\n      dup3\n        /* \"#utility.yul\":25161:25254   */\n      tag_227\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":25279:25281   */\n      0x40\n        /* \"#utility.yul\":25274:25277   */\n      dup3\n        /* \"#utility.yul\":25270:25282   */\n      add\n        /* \"#utility.yul\":25263:25282   */\n      swap1\n      pop\n        /* \"#utility.yul\":24922:25288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25294:25713   */\n    tag_134:\n        /* \"#utility.yul\":25460:25464   */\n      0x00\n        /* \"#utility.yul\":25498:25500   */\n      0x20\n        /* \"#utility.yul\":25487:25496   */\n      dup3\n        /* \"#utility.yul\":25483:25501   */\n      add\n        /* \"#utility.yul\":25475:25501   */\n      swap1\n      pop\n        /* \"#utility.yul\":25547:25556   */\n      dup2\n        /* \"#utility.yul\":25541:25545   */\n      dup2\n        /* \"#utility.yul\":25537:25557   */\n      sub\n        /* \"#utility.yul\":25533:25534   */\n      0x00\n        /* \"#utility.yul\":25522:25531   */\n      dup4\n        /* \"#utility.yul\":25518:25535   */\n      add\n        /* \"#utility.yul\":25511:25558   */\n      mstore\n        /* \"#utility.yul\":25575:25706   */\n      tag_484\n        /* \"#utility.yul\":25701:25705   */\n      dup2\n        /* \"#utility.yul\":25575:25706   */\n      tag_228\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":25567:25706   */\n      swap1\n      pop\n        /* \"#utility.yul\":25294:25713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25719:25898   */\n    tag_229:\n        /* \"#utility.yul\":25859:25890   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":25855:25856   */\n      0x00\n        /* \"#utility.yul\":25847:25853   */\n      dup3\n        /* \"#utility.yul\":25843:25857   */\n      add\n        /* \"#utility.yul\":25836:25891   */\n      mstore\n        /* \"#utility.yul\":25719:25898   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25904:26270   */\n    tag_230:\n        /* \"#utility.yul\":26046:26049   */\n      0x00\n        /* \"#utility.yul\":26067:26134   */\n      tag_487\n        /* \"#utility.yul\":26131:26133   */\n      0x1d\n        /* \"#utility.yul\":26126:26129   */\n      dup4\n        /* \"#utility.yul\":26067:26134   */\n      tag_223\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":26060:26134   */\n      swap2\n      pop\n        /* \"#utility.yul\":26143:26236   */\n      tag_488\n        /* \"#utility.yul\":26232:26235   */\n      dup3\n        /* \"#utility.yul\":26143:26236   */\n      tag_229\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":26261:26263   */\n      0x20\n        /* \"#utility.yul\":26256:26259   */\n      dup3\n        /* \"#utility.yul\":26252:26264   */\n      add\n        /* \"#utility.yul\":26245:26264   */\n      swap1\n      pop\n        /* \"#utility.yul\":25904:26270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26276:26695   */\n    tag_139:\n        /* \"#utility.yul\":26442:26446   */\n      0x00\n        /* \"#utility.yul\":26480:26482   */\n      0x20\n        /* \"#utility.yul\":26469:26478   */\n      dup3\n        /* \"#utility.yul\":26465:26483   */\n      add\n        /* \"#utility.yul\":26457:26483   */\n      swap1\n      pop\n        /* \"#utility.yul\":26529:26538   */\n      dup2\n        /* \"#utility.yul\":26523:26527   */\n      dup2\n        /* \"#utility.yul\":26519:26539   */\n      sub\n        /* \"#utility.yul\":26515:26516   */\n      0x00\n        /* \"#utility.yul\":26504:26513   */\n      dup4\n        /* \"#utility.yul\":26500:26517   */\n      add\n        /* \"#utility.yul\":26493:26540   */\n      mstore\n        /* \"#utility.yul\":26557:26688   */\n      tag_490\n        /* \"#utility.yul\":26683:26687   */\n      dup2\n        /* \"#utility.yul\":26557:26688   */\n      tag_230\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":26549:26688   */\n      swap1\n      pop\n        /* \"#utility.yul\":26276:26695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26701:26848   */\n    tag_231:\n        /* \"#utility.yul\":26802:26813   */\n      0x00\n        /* \"#utility.yul\":26839:26842   */\n      dup2\n        /* \"#utility.yul\":26824:26842   */\n      swap1\n      pop\n        /* \"#utility.yul\":26701:26848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26854:27227   */\n    tag_232:\n        /* \"#utility.yul\":26958:26961   */\n      0x00\n        /* \"#utility.yul\":26986:27024   */\n      tag_493\n        /* \"#utility.yul\":27018:27023   */\n      dup3\n        /* \"#utility.yul\":26986:27024   */\n      tag_211\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":27040:27128   */\n      tag_494\n        /* \"#utility.yul\":27121:27127   */\n      dup2\n        /* \"#utility.yul\":27116:27119   */\n      dup6\n        /* \"#utility.yul\":27040:27128   */\n      tag_231\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":27033:27128   */\n      swap4\n      pop\n        /* \"#utility.yul\":27137:27189   */\n      tag_495\n        /* \"#utility.yul\":27182:27188   */\n      dup2\n        /* \"#utility.yul\":27177:27180   */\n      dup6\n        /* \"#utility.yul\":27170:27174   */\n      0x20\n        /* \"#utility.yul\":27163:27168   */\n      dup7\n        /* \"#utility.yul\":27159:27175   */\n      add\n        /* \"#utility.yul\":27137:27189   */\n      tag_213\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":27214:27220   */\n      dup1\n        /* \"#utility.yul\":27209:27212   */\n      dup5\n        /* \"#utility.yul\":27205:27221   */\n      add\n        /* \"#utility.yul\":27198:27221   */\n      swap2\n      pop\n        /* \"#utility.yul\":26962:27227   */\n      pop\n        /* \"#utility.yul\":26854:27227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27233:27504   */\n    tag_141:\n        /* \"#utility.yul\":27363:27366   */\n      0x00\n        /* \"#utility.yul\":27385:27478   */\n      tag_497\n        /* \"#utility.yul\":27474:27477   */\n      dup3\n        /* \"#utility.yul\":27465:27471   */\n      dup5\n        /* \"#utility.yul\":27385:27478   */\n      tag_232\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":27378:27478   */\n      swap2\n      pop\n        /* \"#utility.yul\":27495:27498   */\n      dup2\n        /* \"#utility.yul\":27488:27498   */\n      swap1\n      pop\n        /* \"#utility.yul\":27233:27504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27510:27609   */\n    tag_233:\n        /* \"#utility.yul\":27562:27568   */\n      0x00\n        /* \"#utility.yul\":27596:27601   */\n      dup2\n        /* \"#utility.yul\":27590:27602   */\n      mload\n        /* \"#utility.yul\":27580:27602   */\n      swap1\n      pop\n        /* \"#utility.yul\":27510:27609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27615:27979   */\n    tag_234:\n        /* \"#utility.yul\":27703:27706   */\n      0x00\n        /* \"#utility.yul\":27731:27770   */\n      tag_500\n        /* \"#utility.yul\":27764:27769   */\n      dup3\n        /* \"#utility.yul\":27731:27770   */\n      tag_233\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":27786:27857   */\n      tag_501\n        /* \"#utility.yul\":27850:27856   */\n      dup2\n        /* \"#utility.yul\":27845:27848   */\n      dup6\n        /* \"#utility.yul\":27786:27857   */\n      tag_223\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":27779:27857   */\n      swap4\n      pop\n        /* \"#utility.yul\":27866:27918   */\n      tag_502\n        /* \"#utility.yul\":27911:27917   */\n      dup2\n        /* \"#utility.yul\":27906:27909   */\n      dup6\n        /* \"#utility.yul\":27899:27903   */\n      0x20\n        /* \"#utility.yul\":27892:27897   */\n      dup7\n        /* \"#utility.yul\":27888:27904   */\n      add\n        /* \"#utility.yul\":27866:27918   */\n      tag_213\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":27943:27972   */\n      tag_503\n        /* \"#utility.yul\":27965:27971   */\n      dup2\n        /* \"#utility.yul\":27943:27972   */\n      tag_159\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":27938:27941   */\n      dup5\n        /* \"#utility.yul\":27934:27973   */\n      add\n        /* \"#utility.yul\":27927:27973   */\n      swap2\n      pop\n        /* \"#utility.yul\":27707:27979   */\n      pop\n        /* \"#utility.yul\":27615:27979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27985:28298   */\n    tag_154:\n        /* \"#utility.yul\":28098:28102   */\n      0x00\n        /* \"#utility.yul\":28136:28138   */\n      0x20\n        /* \"#utility.yul\":28125:28134   */\n      dup3\n        /* \"#utility.yul\":28121:28139   */\n      add\n        /* \"#utility.yul\":28113:28139   */\n      swap1\n      pop\n        /* \"#utility.yul\":28185:28194   */\n      dup2\n        /* \"#utility.yul\":28179:28183   */\n      dup2\n        /* \"#utility.yul\":28175:28195   */\n      sub\n        /* \"#utility.yul\":28171:28172   */\n      0x00\n        /* \"#utility.yul\":28160:28169   */\n      dup4\n        /* \"#utility.yul\":28156:28173   */\n      add\n        /* \"#utility.yul\":28149:28196   */\n      mstore\n        /* \"#utility.yul\":28213:28291   */\n      tag_505\n        /* \"#utility.yul\":28286:28290   */\n      dup2\n        /* \"#utility.yul\":28277:28283   */\n      dup5\n        /* \"#utility.yul\":28213:28291   */\n      tag_234\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":28205:28291   */\n      swap1\n      pop\n        /* \"#utility.yul\":27985:28298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204a84b23eb5c3b925ef107490915a93d32f6b7de56f7a8dedb6fbb2f33286a0aa64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:14"
															},
															"nodeType": "YulIf",
															"src": "932:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:14",
														"type": ""
													}
												],
												"src": "845:351:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b5060405162001bfd38038062001bfd8339818101604052810190620000379190620000dc565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b620000b68162000097565b8114620000c257600080fd5b50565b600081519050620000d681620000ab565b92915050565b600060208284031215620000f557620000f462000072565b5b60006200010584828501620000c5565b91505092915050565b608051611abe6200013f6000396000818161017c015281816103f10152818161056501526105c70152611abe6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e6335e61461005157806377aba2131461006d5780639cbcf4c71461008b578063bfbd3808146100a7575b600080fd5b61006b60048036038101906100669190610ff7565b6100c3565b005b61007561017a565b6040516100829190611062565b60405180910390f35b6100a560048036038101906100a0919061107d565b61019e565b005b6100c160048036038101906100bc9190610ff7565b61020e565b005b6000826080015190506100f93330848473ffffffffffffffffffffffffffffffffffffffff16610296909392919063ffffffff16565b826080015173ffffffffffffffffffffffffffffffffffffffff1663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561014557600080fd5b505af1158015610159573d6000803e3d6000fd5b505050506101758360000151838560200151866040015161031f565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082600001518360200151815181106101bb576101ba6110ec565b5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361020757610202838361020e565b610208565b5b50505050565b6000826000015183602001518151811061022b5761022a6110ec565b5b602002602001015190506102623330848473ffffffffffffffffffffffffffffffffffffffff16610296909392919063ffffffff16565b61027a8360000151838560200151866040015161048a565b610291836060015184608001518560a00151610661565b505050565b610319846323b872dd60e01b8585856040516024016102b79392919061112a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061077a565b50505050565b6000845167ffffffffffffffff81111561033c5761033b610ce6565b5b60405190808252806020026020018201604052801561036a5781602001602082028036833780820191505090505b50905083818481518110610381576103806110ec565b5b60200260200101818152505060006001905060008083836040516020016103aa93929190611271565b60405160208183030381529060405290506103c3610c68565b87816000018190525083816020018190525081816040018190525060008160600190151590811515815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638bdb3913863033856040518563ffffffff1660e01b815260040161044e9493929190611566565b600060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b505050505050505050505050565b6000600190506000855167ffffffffffffffff8111156104ad576104ac610ce6565b5b6040519080825280602002602001820160405280156104db5781602001602082028036833780820191505090505b509050848185815181106104f2576104f16110ec565b5b602002602001018181525050600060019050600083838360405160200161051b939291906115c1565b6040516020818303038152906040529050610534610c92565b88816000018190525083816020018190525081816040018190525060008160600190151590811515815250506105c57f0000000000000000000000000000000000000000000000000000000000000000898b8a81518110610598576105976110ec565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108419092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b95cac28873030856040518563ffffffff1660e01b81526004016106249493929190611670565b600060405180830381600087803b15801561063e57600080fd5b505af1158015610652573d6000803e3d6000fd5b50505050505050505050505050565b61066b8284610953565b8173ffffffffffffffffffffffffffffffffffffffff1663de5f62686040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106b357600080fd5b505af11580156106c7573d6000803e3d6000fd5b505050506000829050610774828273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070d9190611062565b602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e91906116d1565b8373ffffffffffffffffffffffffffffffffffffffff16610a2c9092919063ffffffff16565b50505050565b60006107dc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ab29092919063ffffffff16565b905060008151111561083c57808060200190518101906107fc919061172a565b61083b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610832906117da565b60405180910390fd5b5b505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b815260040161087f9291906117fa565b602060405180830381865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c091906116d1565b6108ca9190611852565b905061094d8463095ea7b360e01b85846040516024016108eb9291906118a8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061077a565b50505050565b600081905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b81526004016109959291906117fa565b602060405180830381865afa1580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d691906116d1565b03610a2757610a26837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8373ffffffffffffffffffffffffffffffffffffffff166108419092919063ffffffff16565b5b505050565b610aad8363a9059cbb60e01b8484604051602401610a4b9291906118a8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061077a565b505050565b6060610ac18484600085610aca565b90509392505050565b606082471015610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0690611943565b60405180910390fd5b610b1885610bde565b610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e906119af565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b809190611a0b565b60006040518083038185875af1925050503d8060008114610bbd576040519150601f19603f3d011682016040523d82523d6000602084013e610bc2565b606091505b5091509150610bd2828286610c01565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610c1157829050610c61565b600083511115610c245782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c589190611a66565b60405180910390fd5b9392505050565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d1e82610cd5565b810181811067ffffffffffffffff82111715610d3d57610d3c610ce6565b5b80604052505050565b6000610d50610cbc565b9050610d5c8282610d15565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610d8657610d85610ce6565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dc782610d9c565b9050919050565b6000610dd982610dbc565b9050919050565b610de981610dce565b8114610df457600080fd5b50565b600081359050610e0681610de0565b92915050565b6000610e1f610e1a84610d6b565b610d46565b90508083825260208201905060208402830185811115610e4257610e41610d97565b5b835b81811015610e6b5780610e578882610df7565b845260208401935050602081019050610e44565b5050509392505050565b600082601f830112610e8a57610e89610d66565b5b8135610e9a848260208601610e0c565b91505092915050565b6000819050919050565b610eb681610ea3565b8114610ec157600080fd5b50565b600081359050610ed381610ead565b92915050565b6000819050919050565b610eec81610ed9565b8114610ef757600080fd5b50565b600081359050610f0981610ee3565b92915050565b610f1881610dbc565b8114610f2357600080fd5b50565b600081359050610f3581610f0f565b92915050565b600060c08284031215610f5157610f50610cd0565b5b610f5b60c0610d46565b9050600082013567ffffffffffffffff811115610f7b57610f7a610d61565b5b610f8784828501610e75565b6000830152506020610f9b84828501610ec4565b6020830152506040610faf84828501610efa565b6040830152506060610fc384828501610f26565b6060830152506080610fd784828501610f26565b60808301525060a0610feb84828501610f26565b60a08301525092915050565b6000806040838503121561100e5761100d610cc6565b5b600083013567ffffffffffffffff81111561102c5761102b610ccb565b5b61103885828601610f3b565b925050602061104985828601610ec4565b9150509250929050565b61105c81610dbc565b82525050565b60006020820190506110776000830184611053565b92915050565b60008060006060848603121561109657611095610cc6565b5b60006110a486828701610f26565b935050602084013567ffffffffffffffff8111156110c5576110c4610ccb565b5b6110d186828701610f3b565b92505060406110e286828701610ec4565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61112481610ea3565b82525050565b600060608201905061113f6000830186611053565b61114c6020830185611053565b611159604083018461111b565b949350505050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061119d61119861119384611161565b611178565b61116b565b9050919050565b6111ad81611182565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111e881610ea3565b82525050565b60006111fa83836111df565b60208301905092915050565b6000602082019050919050565b600061121e826111b3565b61122881856111be565b9350611233836111cf565b8060005b8381101561126457815161124b88826111ee565b975061125683611206565b925050600181019050611237565b5085935050505092915050565b600060608201905061128660008301866111a4565b81810360208301526112988185611213565b90506112a7604083018461111b565b949350505050565b6112b881610ed9565b82525050565b60006112c982610d9c565b9050919050565b6112d9816112be565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061132661132161131c84610d9c565b611178565b610d9c565b9050919050565b60006113388261130b565b9050919050565b600061134a8261132d565b9050919050565b61135a8161133f565b82525050565b600061136c8383611351565b60208301905092915050565b6000602082019050919050565b6000611390826112df565b61139a81856112ea565b93506113a5836112fb565b8060005b838110156113d65781516113bd8882611360565b97506113c883611378565b9250506001810190506113a9565b5085935050505092915050565b600082825260208201905092915050565b60006113ff826111b3565b61140981856113e3565b9350611414836111cf565b8060005b8381101561144557815161142c88826111ee565b975061143783611206565b925050600181019050611418565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561148c578082015181840152602081019050611471565b8381111561149b576000848401525b50505050565b60006114ac82611452565b6114b6818561145d565b93506114c681856020860161146e565b6114cf81610cd5565b840191505092915050565b60008115159050919050565b6114ef816114da565b82525050565b600060808301600083015184820360008601526115128282611385565b9150506020830151848203602086015261152c82826113f4565b9150506040830151848203604086015261154682826114a1565b915050606083015161155b60608601826114e6565b508091505092915050565b600060808201905061157b60008301876112af565b6115886020830186611053565b61159560408301856112d0565b81810360608301526115a781846114f5565b905095945050505050565b6115bb8161116b565b82525050565b60006060820190506115d660008301866115b2565b81810360208301526115e88185611213565b90506115f7604083018461111b565b949350505050565b6000608083016000830151848203600086015261161c8282611385565b9150506020830151848203602086015261163682826113f4565b9150506040830151848203604086015261165082826114a1565b915050606083015161166560608601826114e6565b508091505092915050565b600060808201905061168560008301876112af565b6116926020830186611053565b61169f6040830185611053565b81810360608301526116b181846115ff565b905095945050505050565b6000815190506116cb81610ead565b92915050565b6000602082840312156116e7576116e6610cc6565b5b60006116f5848285016116bc565b91505092915050565b611707816114da565b811461171257600080fd5b50565b600081519050611724816116fe565b92915050565b6000602082840312156117405761173f610cc6565b5b600061174e84828501611715565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006117c4602a83611757565b91506117cf82611768565b604082019050919050565b600060208201905081810360008301526117f3816117b7565b9050919050565b600060408201905061180f6000830185611053565b61181c6020830184611053565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185d82610ea3565b915061186883610ea3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561189d5761189c611823565b5b828201905092915050565b60006040820190506118bd6000830185611053565b6118ca602083018461111b565b9392505050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061192d602683611757565b9150611938826118d1565b604082019050919050565b6000602082019050818103600083015261195c81611920565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611999601d83611757565b91506119a482611963565b602082019050919050565b600060208201905081810360008301526119c88161198c565b9050919050565b600081905092915050565b60006119e582611452565b6119ef81856119cf565b93506119ff81856020860161146e565b80840191505092915050565b6000611a1782846119da565b915081905092915050565b600081519050919050565b6000611a3882611a22565b611a428185611757565b9350611a5281856020860161146e565b611a5b81610cd5565b840191505092915050565b60006020820190508181036000830152611a808184611a2d565b90509291505056fea26469706673582212204a84b23eb5c3b925ef107490915a93d32f6b7de56f7a8dedb6fbb2f33286a0aa64736f6c634300080d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BFD CODESIZE SUB DUP1 PUSH3 0x1BFD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xDC JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x10E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA4 DUP3 PUSH3 0x77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB6 DUP2 PUSH3 0x97 JUMP JUMPDEST DUP2 EQ PUSH3 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xD6 DUP2 PUSH3 0xAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF5 JUMPI PUSH3 0xF4 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x105 DUP5 DUP3 DUP6 ADD PUSH3 0xC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1ABE PUSH3 0x13F PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x17C ADD MSTORE DUP2 DUP2 PUSH2 0x3F1 ADD MSTORE DUP2 DUP2 PUSH2 0x565 ADD MSTORE PUSH2 0x5C7 ADD MSTORE PUSH2 0x1ABE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE6335E6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x77ABA213 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x9CBCF4C7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBFBD3808 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x19E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH2 0xF9 CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x853828B6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x175 DUP4 PUSH1 0x0 ADD MLOAD DUP4 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x31F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1BB JUMPI PUSH2 0x1BA PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x207 JUMPI PUSH2 0x202 DUP4 DUP4 PUSH2 0x20E JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x22B JUMPI PUSH2 0x22A PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x262 CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27A DUP4 PUSH1 0x0 ADD MLOAD DUP4 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x291 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD PUSH2 0x661 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x319 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33C JUMPI PUSH2 0x33B PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x3C3 PUSH2 0xC68 JUMP JUMPDEST DUP8 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8BDB3913 DUP7 ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4DB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x534 PUSH2 0xC92 JUMP JUMPDEST DUP9 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x5C5 PUSH32 0x0 DUP10 DUP12 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB95CAC28 DUP8 ADDRESS ADDRESS DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x66B DUP3 DUP5 PUSH2 0x953 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDE5F6268 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP3 SWAP1 POP PUSH2 0x774 DUP3 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA2C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x83C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x832 SWAP1 PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP1 POP PUSH2 0x94D DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8EB SWAP3 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D6 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST SUB PUSH2 0xA27 JUMPI PUSH2 0xA26 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAAD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA4B SWAP3 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xACA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB18 DUP6 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBD2 DUP3 DUP3 DUP7 PUSH2 0xC01 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xC11 JUMPI DUP3 SWAP1 POP PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xC24 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD1E DUP3 PUSH2 0xCD5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD3D JUMPI PUSH2 0xD3C PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0xCBC JUMP JUMPDEST SWAP1 POP PUSH2 0xD5C DUP3 DUP3 PUSH2 0xD15 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD86 JUMPI PUSH2 0xD85 PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC7 DUP3 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD9 DUP3 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE9 DUP2 PUSH2 0xDCE JUMP JUMPDEST DUP2 EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE06 DUP2 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F PUSH2 0xE1A DUP5 PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xD97 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE6B JUMPI DUP1 PUSH2 0xE57 DUP9 DUP3 PUSH2 0xDF7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE44 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE8A JUMPI PUSH2 0xE89 PUSH2 0xD66 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB6 DUP2 PUSH2 0xEA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xED3 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xED9 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF09 DUP2 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP2 EQ PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF35 DUP2 PUSH2 0xF0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF51 JUMPI PUSH2 0xF50 PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST PUSH2 0xF5B PUSH1 0xC0 PUSH2 0xD46 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7A PUSH2 0xD61 JUMP JUMPDEST JUMPDEST PUSH2 0xF87 DUP5 DUP3 DUP6 ADD PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xF9B DUP5 DUP3 DUP6 ADD PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xFAF DUP5 DUP3 DUP6 ADD PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xFC3 DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xFD7 DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0xFEB DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x100E JUMPI PUSH2 0x100D PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102B PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH2 0x1038 DUP6 DUP3 DUP7 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1049 DUP6 DUP3 DUP7 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x105C DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1077 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1095 PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10A4 DUP7 DUP3 DUP8 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH2 0x10D1 DUP7 DUP3 DUP8 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10E2 DUP7 DUP3 DUP8 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0xEA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x113F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x114C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x1159 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119D PUSH2 0x1198 PUSH2 0x1193 DUP5 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x116B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AD DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E8 DUP2 PUSH2 0xEA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FA DUP4 DUP4 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP6 PUSH2 0x11BE JUMP JUMPDEST SWAP4 POP PUSH2 0x1233 DUP4 PUSH2 0x11CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1264 JUMPI DUP2 MLOAD PUSH2 0x124B DUP9 DUP3 PUSH2 0x11EE JUMP JUMPDEST SWAP8 POP PUSH2 0x1256 DUP4 PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1237 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1298 DUP2 DUP6 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP PUSH2 0x12A7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x12B8 DUP2 PUSH2 0xED9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C9 DUP3 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D9 DUP2 PUSH2 0x12BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1326 PUSH2 0x1321 PUSH2 0x131C DUP5 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1338 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP3 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135A DUP2 PUSH2 0x133F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136C DUP4 DUP4 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1390 DUP3 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x139A DUP2 DUP6 PUSH2 0x12EA JUMP JUMPDEST SWAP4 POP PUSH2 0x13A5 DUP4 PUSH2 0x12FB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D6 JUMPI DUP2 MLOAD PUSH2 0x13BD DUP9 DUP3 PUSH2 0x1360 JUMP JUMPDEST SWAP8 POP PUSH2 0x13C8 DUP4 PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13A9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP3 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x1409 DUP2 DUP6 PUSH2 0x13E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1414 DUP4 PUSH2 0x11CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1445 JUMPI DUP2 MLOAD PUSH2 0x142C DUP9 DUP3 PUSH2 0x11EE JUMP JUMPDEST SWAP8 POP PUSH2 0x1437 DUP4 PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1418 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x148C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1471 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP3 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x14B6 DUP2 DUP6 PUSH2 0x145D JUMP JUMPDEST SWAP4 POP PUSH2 0x14C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST PUSH2 0x14CF DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EF DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1512 DUP3 DUP3 PUSH2 0x1385 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x152C DUP3 DUP3 PUSH2 0x13F4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1546 DUP3 DUP3 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x155B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x14E6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x157B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x1588 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x1595 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15A7 DUP2 DUP5 PUSH2 0x14F5 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15BB DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15B2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x15E8 DUP2 DUP6 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP PUSH2 0x15F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x161C DUP3 DUP3 PUSH2 0x1385 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1636 DUP3 DUP3 PUSH2 0x13F4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1650 DUP3 DUP3 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1665 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x14E6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1685 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x1692 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x169F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16B1 DUP2 DUP5 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16CB DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F5 DUP5 DUP3 DUP6 ADD PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1724 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP5 DUP3 DUP6 ADD PUSH2 0x1715 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C4 PUSH1 0x2A DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x17CF DUP3 PUSH2 0x1768 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F3 DUP2 PUSH2 0x17B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x181C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP3 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1868 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x1823 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x18CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192D PUSH1 0x26 DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x1938 DUP3 PUSH2 0x18D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x195C DUP2 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1999 PUSH1 0x1D DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A4 DUP3 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19C8 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E5 DUP3 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x19EF DUP2 DUP6 PUSH2 0x19CF JUMP JUMPDEST SWAP4 POP PUSH2 0x19FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP3 DUP5 PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A38 DUP3 PUSH2 0x1A22 JUMP JUMPDEST PUSH2 0x1A42 DUP2 DUP6 PUSH2 0x1757 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST PUSH2 0x1A5B DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A80 DUP2 DUP5 PUSH2 0x1A2D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP5 0xB2 RETURNDATACOPY 0xB5 0xC3 0xB9 0x25 0xEF LT PUSH21 0x90915A93D32F6B7DE56F7A8DEDB6FBB2F33286A0AA PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "289:4731:7:-:0;;;910:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;963:9;952:20;;;;;;;;;;910:70;289:4731;;88:117:14;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;289:4731:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approveIfNeeded_1616": {
									"entryPoint": 2387,
									"id": 1616,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1078": {
									"entryPoint": 1914,
									"id": 1078,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_depositLPToVault_1575": {
									"entryPoint": 1633,
									"id": 1575,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_exitPool_1817": {
									"entryPoint": 799,
									"id": 1817,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_joinPool_1725": {
									"entryPoint": 1162,
									"id": 1725,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_singleSideDeposit_1488": {
									"entryPoint": 526,
									"id": 1488,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_singleSideWithdraw_1534": {
									"entryPoint": 195,
									"id": 1534,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balVault_1376": {
									"entryPoint": 378,
									"id": 1376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1238": {
									"entryPoint": 2762,
									"id": 1238,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1168": {
									"entryPoint": 2738,
									"id": 1168,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_1097": {
									"entryPoint": 3038,
									"id": 1097,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@routeDeposit_1434": {
									"entryPoint": 414,
									"id": 1434,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeIncreaseAllowance_992": {
									"entryPoint": 2113,
									"id": 992,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_912": {
									"entryPoint": 662,
									"id": 912,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_886": {
									"entryPoint": 2604,
									"id": 886,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyCallResult_1321": {
									"entryPoint": 3073,
									"id": 1321,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IAsset_$1822": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_VaultParams_$1391_memory_ptr": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_struct$_VaultParams_$1391_memory_ptrt_uint256": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_VaultParams_$1391_memory_ptrt_uint256": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_contract$_IAsset_$1822_to_t_address": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 4816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IAsset_$1822_to_t_address": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint8_fromStack": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExitPoolRequest_$2118_memory_ptr_to_t_struct$_ExitPoolRequest_$2118_memory_ptr_fromStack": {
									"entryPoint": 5365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_JoinPoolRequest_$2093_memory_ptr_to_t_struct$_JoinPoolRequest_$2093_memory_ptr_fromStack": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_payable_t_struct$_ExitPoolRequest_$2118_memory_ptr__to_t_bytes32_t_address_t_address_payable_t_struct$_ExitPoolRequest_$2118_memory_ptr__fromStack_reversed": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$2093_memory_ptr__to_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$2093_memory_ptr__fromStack_reversed": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IAsset_$1822": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 4449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IAsset_$1822_to_t_address": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint8": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5230,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IAsset_$1822": {
									"entryPoint": 3552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:28301:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:14"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:14",
														"type": ""
													}
												],
												"src": "457:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:14"
															},
															"nodeType": "YulIf",
															"src": "907:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:14",
														"type": ""
													}
												],
												"src": "751:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:14",
														"type": ""
													}
												],
												"src": "1038:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:12:14"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "1173:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1402:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1296:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1516:229:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1621:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1623:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1623:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1623:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1593:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1601:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1590:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:30:14"
															},
															"nodeType": "YulIf",
															"src": "1587:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1653:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1665:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1661:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1653:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1715:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1727:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1723:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1715:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1500:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1511:4:14",
														"type": ""
													}
												],
												"src": "1419:326:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1840:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1860:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1850:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1850:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1751:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1919:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1929:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1944:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1951:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1929:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1901:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1911:7:14",
														"type": ""
													}
												],
												"src": "1874:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2061:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2090:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2072:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2061:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2033:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2043:7:14",
														"type": ""
													}
												],
												"src": "2006:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2178:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2207:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2189:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2178:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IAsset_$1822",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2150:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2160:7:14",
														"type": ""
													}
												],
												"src": "2108:111:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:94:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2355:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2367:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2357:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2357:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2357:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2306:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2346:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IAsset_$1822",
																					"nodeType": "YulIdentifier",
																					"src": "2313:32:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2313:39:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2303:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2303:50:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2296:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:58:14"
															},
															"nodeType": "YulIf",
															"src": "2293:78:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IAsset_$1822",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2276:5:14",
														"type": ""
													}
												],
												"src": "2225:152:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2450:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2460:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2482:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2469:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2460:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2540:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IAsset_$1822",
																	"nodeType": "YulIdentifier",
																	"src": "2498:41:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2498:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2498:48:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IAsset_$1822",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2428:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2436:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2444:5:14",
														"type": ""
													}
												],
												"src": "2383:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2700:638:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2710:105:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2807:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2735:71:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:79:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2719:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:96:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2710:5:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2824:16:14",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "2835:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2828:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2857:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2864:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2850:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2850:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2880:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2891:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2898:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2913:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2943:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2951:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2939:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2939:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2917:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2985:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2999:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2999:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2999:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2972:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2980:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2969:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:15:14"
															},
															"nodeType": "YulIf",
															"src": "2966:122:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3173:159:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3188:21:14",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "3192:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3230:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "3271:10:14"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "3283:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_contract$_IAsset_$1822",
																						"nodeType": "YulIdentifier",
																						"src": "3235:35:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3235:52:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3223:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3223:65:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:65:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3301:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3312:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3317:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3308:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3308:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3301:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3126:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3131:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3123:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3139:25:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3141:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3157:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3148:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3148:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3141:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3101:21:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3103:17:14",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "3114:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "3107:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3097:235:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2670:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2678:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2686:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2694:5:14",
														"type": ""
													}
												],
												"src": "2583:755:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3461:308:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3510:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3512:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3512:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3512:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3489:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3497:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3485:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3485:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3504:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3481:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:35:14"
															},
															"nodeType": "YulIf",
															"src": "3471:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3602:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3629:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3606:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3645:118:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3736:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3744:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3732:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3732:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3751:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3759:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3654:77:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:109:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3645:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3439:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3447:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3455:5:14",
														"type": ""
													}
												],
												"src": "3369:400:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3820:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3830:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3841:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3830:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3802:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3812:7:14",
														"type": ""
													}
												],
												"src": "3775:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3901:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3958:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3967:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3970:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3960:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3960:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3960:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3924:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3949:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3931:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3931:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3921:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3921:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:43:14"
															},
															"nodeType": "YulIf",
															"src": "3911:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3894:5:14",
														"type": ""
													}
												],
												"src": "3858:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4038:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4048:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4070:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4057:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4048:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4113:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4086:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4086:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4016:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4024:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4032:5:14",
														"type": ""
													}
												],
												"src": "3986:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4176:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4186:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4197:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4186:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4158:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4168:7:14",
														"type": ""
													}
												],
												"src": "4131:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4257:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4314:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4323:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4326:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4316:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4316:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4316:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4280:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4305:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "4287:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4287:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4277:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:43:14"
															},
															"nodeType": "YulIf",
															"src": "4267:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4250:5:14",
														"type": ""
													}
												],
												"src": "4214:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4426:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4413:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4404:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4469:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "4442:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4372:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4380:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4388:5:14",
														"type": ""
													}
												],
												"src": "4342:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4530:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4589:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4553:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4560:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4560:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4550:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4550:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4543:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4543:43:14"
															},
															"nodeType": "YulIf",
															"src": "4540:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4523:5:14",
														"type": ""
													}
												],
												"src": "4487:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4667:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4677:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4699:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4686:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4677:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4742:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4715:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4645:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4653:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4661:5:14",
														"type": ""
													}
												],
												"src": "4615:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4882:1369:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4926:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "4928:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4928:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4928:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4903:3:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4908:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4899:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4899:19:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4920:4:14",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4895:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4895:30:14"
															},
															"nodeType": "YulIf",
															"src": "4892:117:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5018:30:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5043:4:14",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5027:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5027:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5018:5:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:357:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5100:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5131:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5142:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5127:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5127:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5114:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5114:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5104:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5192:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
																						"nodeType": "YulIdentifier",
																						"src": "5194:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5194:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5194:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5164:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5172:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5161:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "5158:117:14"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5300:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5307:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5296:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5296:16:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5379:9:14"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5390:6:14"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5375:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5375:22:14"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5399:3:14"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "5314:60:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5314:89:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5289:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5289:115:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5289:115:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5425:157:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5466:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5480:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5470:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5507:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5514:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5503:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5503:16:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5546:9:14"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5557:6:14"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5542:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5542:22:14"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5566:3:14"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5521:20:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5521:49:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5496:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5496:75:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5496:75:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5592:158:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5634:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5638:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5675:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5682:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5671:16:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5714:9:14"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5725:6:14"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5710:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5710:22:14"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5734:3:14"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5689:20:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5689:49:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5664:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5664:75:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5664:75:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5760:154:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5798:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5812:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5802:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5839:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5846:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5835:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5835:16:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "5878:9:14"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "5889:6:14"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5874:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5874:22:14"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "5898:3:14"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5853:20:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5853:49:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5828:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5828:75:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5828:75:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5924:153:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5960:17:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5974:3:14",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5964:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6002:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6009:4:14",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5998:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5998:16:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "6041:9:14"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "6052:6:14"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6037:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6037:22:14"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "6061:3:14"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6016:20:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6016:49:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "5991:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5991:75:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5991:75:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6087:157:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6127:17:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6141:3:14",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6131:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6169:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6176:4:14",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6165:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6165:16:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "6208:9:14"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "6219:6:14"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6204:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6204:22:14"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "6228:3:14"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6183:20:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6183:49:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6158:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:75:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6158:75:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_VaultParams_$1391_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4857:9:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4868:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4876:5:14",
														"type": ""
													}
												],
												"src": "4798:1453:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6369:580:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6415:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6417:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6417:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6390:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6399:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6386:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6386:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6382:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6382:32:14"
															},
															"nodeType": "YulIf",
															"src": "6379:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "6508:306:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6523:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6554:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6565:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6550:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6550:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6537:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6527:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6615:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6617:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6617:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6617:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6587:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6595:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6584:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6584:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "6581:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6712:92:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6776:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6787:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6772:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6772:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6796:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_VaultParams_$1391_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6722:49:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6722:82:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6712:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6824:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6839:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6843:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6869:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6904:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6915:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6900:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6900:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6924:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6879:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6879:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6869:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_VaultParams_$1391_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6331:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6342:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6354:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6362:6:14",
														"type": ""
													}
												],
												"src": "6257:692:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7020:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7037:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7060:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7042:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7042:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7030:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7030:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7030:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7008:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7015:3:14",
														"type": ""
													}
												],
												"src": "6955:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7177:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7187:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7199:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7210:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7187:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7267:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7280:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7291:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7276:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7276:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7223:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7223:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7223:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7149:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7161:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7172:4:14",
														"type": ""
													}
												],
												"src": "7079:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7436:708:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7482:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7484:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7484:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7484:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7457:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7466:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7453:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7453:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7478:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7449:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7449:32:14"
															},
															"nodeType": "YulIf",
															"src": "7446:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "7575:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7590:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7604:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7594:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7619:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7654:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7665:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7650:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7650:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7674:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7629:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7629:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7619:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7702:307:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7717:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7748:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7759:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7744:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7744:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7731:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7731:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7721:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7810:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7812:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7812:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7812:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7782:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7790:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7779:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7779:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "7776:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7907:92:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7971:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7982:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7967:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7967:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7991:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_VaultParams_$1391_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7917:49:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7917:82:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7907:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8019:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8034:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8048:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8038:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8064:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8099:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8110:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8095:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8095:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8119:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8074:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8074:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8064:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_struct$_VaultParams_$1391_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7390:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7401:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7413:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7421:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7429:6:14",
														"type": ""
													}
												],
												"src": "7307:837:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8178:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8195:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8198:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8188:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8295:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8285:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8285:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8285:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8316:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8319:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8150:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8401:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8418:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8441:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8423:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8423:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8411:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8411:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8411:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8389:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8396:3:14",
														"type": ""
													}
												],
												"src": "8336:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8614:288:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8624:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8636:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8647:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8632:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8632:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8624:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8704:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8717:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8728:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8713:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8713:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8660:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8660:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8660:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8785:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8798:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8809:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8794:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8794:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8741:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8741:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8867:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8880:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8891:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8823:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8823:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8570:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8582:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8590:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8598:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8609:4:14",
														"type": ""
													}
												],
												"src": "8460:442:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8961:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8971:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8982:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8971:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8943:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8953:7:14",
														"type": ""
													}
												],
												"src": "8908:85:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9042:43:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9052:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9067:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9074:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9063:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9063:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9052:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9024:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9034:7:14",
														"type": ""
													}
												],
												"src": "8999:86:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9123:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9133:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9140:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9133:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9109:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9119:3:14",
														"type": ""
													}
												],
												"src": "9091:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9223:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9233:72:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9297:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "9271:25:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9271:32:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "9262:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9262:42:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9246:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9246:59:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9233:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9203:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9213:9:14",
														"type": ""
													}
												],
												"src": "9157:154:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9388:72:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9405:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9447:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "9410:36:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9410:43:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9398:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:56:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9398:56:14"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9376:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9383:3:14",
														"type": ""
													}
												],
												"src": "9317:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9540:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9551:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9567:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9561:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9561:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9551:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9523:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9533:6:14",
														"type": ""
													}
												],
												"src": "9466:114:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9697:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9714:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9719:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9707:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9707:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9707:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9735:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9754:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9759:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9750:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9750:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9735:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9669:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9674:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9685:11:14",
														"type": ""
													}
												],
												"src": "9586:184:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9848:60:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9858:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "9866:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9858:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9879:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9891:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9896:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9887:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:14:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9879:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9835:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9843:4:14",
														"type": ""
													}
												],
												"src": "9776:132:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9969:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9986:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10009:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9991:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9991:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9979:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9979:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9979:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9957:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9964:3:14",
														"type": ""
													}
												],
												"src": "9914:108:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10108:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10152:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10160:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10118:33:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10118:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10118:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10173:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10191:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10196:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10187:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10187:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "10173:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10081:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10089:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "10097:10:14",
														"type": ""
													}
												],
												"src": "10028:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10288:38:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10298:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10310:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10315:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10306:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10306:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "10298:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10275:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "10283:4:14",
														"type": ""
													}
												],
												"src": "10213:113:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10486:608:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10496:68:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10558:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10510:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:54:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10500:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10573:93:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10654:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10659:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10580:73:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10580:86:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10573:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10675:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10740:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10690:49:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:56:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10679:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10755:21:14",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10769:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10759:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10845:224:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10859:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10886:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10880:5:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10880:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10863:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10906:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10957:13:14"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10972:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10913:43:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10913:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10906:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10989:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11052:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10999:52:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10999:60:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10989:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10807:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10810:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10804:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10818:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10820:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10829:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10832:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10825:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10825:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10820:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10789:14:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10791:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10800:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10795:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10785:284:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11078:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11085:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11078:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10465:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10472:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10481:3:14",
														"type": ""
													}
												],
												"src": "10362:732:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11310:395:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11320:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11332:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11343:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11328:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11328:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11320:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11406:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11419:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11430:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11415:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11415:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11356:49:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11356:77:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11356:77:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11454:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11465:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11450:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11450:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11474:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11480:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11470:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11470:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11443:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11443:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11443:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11500:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11602:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11611:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11508:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11500:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11670:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11683:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11694:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11679:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11679:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11626:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11626:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11626:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11266:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11278:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11286:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11294:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11305:4:14",
														"type": ""
													}
												],
												"src": "11100:605:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11776:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11793:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11816:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "11798:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11798:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11786:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11786:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11786:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11764:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11771:3:14",
														"type": ""
													}
												],
												"src": "11711:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11888:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11898:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11927:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11909:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11898:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11870:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11880:7:14",
														"type": ""
													}
												],
												"src": "11835:104:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12026:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12043:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12074:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "12048:25:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12036:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12036:45:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12036:45:14"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12014:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12021:3:14",
														"type": ""
													}
												],
												"src": "11945:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12182:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12193:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12209:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12203:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12193:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12165:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12175:6:14",
														"type": ""
													}
												],
												"src": "12093:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12329:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12346:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12351:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12339:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12339:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12339:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12367:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12386:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12391:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12382:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12367:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12301:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12306:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12317:11:14",
														"type": ""
													}
												],
												"src": "12228:174:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12495:60:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12505:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12513:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12505:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12526:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12538:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12543:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12534:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12534:14:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12526:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12482:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12490:4:14",
														"type": ""
													}
												],
												"src": "12408:147:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12621:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12631:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12689:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "12671:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12671:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "12662:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12662:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12644:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12644:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12631:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12601:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12611:9:14",
														"type": ""
													}
												],
												"src": "12561:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12769:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12779:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12823:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12792:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12792:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12779:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12749:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12759:9:14",
														"type": ""
													}
												],
												"src": "12709:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12916:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12926:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12970:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12939:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12939:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12926:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAsset_$1822_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12896:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12906:9:14",
														"type": ""
													}
												],
												"src": "12841:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13058:81:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13075:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13126:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAsset_$1822_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13080:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13080:52:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13068:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13068:65:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAsset_$1822_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13046:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13053:3:14",
														"type": ""
													}
												],
												"src": "12988:151:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13240:114:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13299:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13307:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAsset_$1822_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13250:48:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13250:61:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13250:61:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13320:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13338:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13343:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13334:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13320:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_contract$_IAsset_$1822_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13213:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13221:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13229:10:14",
														"type": ""
													}
												],
												"src": "13145:209:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13450:38:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13460:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13472:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13477:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13468:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13460:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13437:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13445:4:14",
														"type": ""
													}
												],
												"src": "13360:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13661:658:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13671:83:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13748:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13685:62:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13685:69:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13675:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13763:83:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13834:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13839:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13770:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13770:76:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13763:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13855:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13935:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13870:64:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13870:71:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13859:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13950:21:14",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13964:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13954:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14040:254:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14054:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14081:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "14075:5:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14075:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "14058:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14101:85:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "14167:13:14"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "14182:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_contract$_IAsset_$1822_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "14108:58:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14108:78:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14101:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14199:85:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14277:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "14209:67:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14209:75:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14199:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14002:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14005:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13999:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13999:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14013:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14015:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14024:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14027:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14020:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14020:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14015:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13984:14:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13986:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13995:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13990:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13980:314:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14303:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14310:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14303:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13640:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13647:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13656:3:14",
														"type": ""
													}
												],
												"src": "13532:787:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14426:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14443:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14448:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14436:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14436:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14436:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14464:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14483:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14488:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14479:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14479:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14464:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14398:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14403:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14414:11:14",
														"type": ""
													}
												],
												"src": "14325:174:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14649:598:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14659:68:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14721:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14673:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14673:54:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14663:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14736:83:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14807:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14812:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14743:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14743:76:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14736:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14828:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14893:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14843:49:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14843:56:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "14832:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14908:21:14",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "14922:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "14912:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14998:224:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15012:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15039:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "15033:5:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15033:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "15016:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15059:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "15110:13:14"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15125:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "15066:43:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15066:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15059:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15142:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15205:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15152:52:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15152:60:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15142:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14960:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14963:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14957:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14957:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14971:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14973:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14982:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14985:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14978:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14978:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14973:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14942:14:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14944:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14953:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "14948:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14938:284:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15231:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15238:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15231:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14628:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14635:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14644:3:14",
														"type": ""
													}
												],
												"src": "14535:712:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15311:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15322:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15338:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15332:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15332:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15322:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15294:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15304:6:14",
														"type": ""
													}
												],
												"src": "15253:98:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15442:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15459:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15464:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15452:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15452:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15452:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15480:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15499:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15504:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15495:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15495:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15480:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15414:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15419:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15430:11:14",
														"type": ""
													}
												],
												"src": "15357:158:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15570:258:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15580:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15589:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15584:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15649:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15674:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15679:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15670:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15670:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15693:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15698:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15689:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15689:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15683:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15683:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15663:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15663:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15663:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15610:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15613:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15607:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15607:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15621:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15623:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15632:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15635:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15628:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15628:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15623:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15603:3:14",
																"statements": []
															},
															"src": "15599:113:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15746:76:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15796:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15801:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15792:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15792:16:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15810:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15785:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15785:27:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15785:27:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15727:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15730:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15724:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15724:13:14"
															},
															"nodeType": "YulIf",
															"src": "15721:101:14"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15552:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15557:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15562:6:14",
														"type": ""
													}
												],
												"src": "15521:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15914:260:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15924:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15970:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15938:31:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15938:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15928:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15985:67:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16040:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16045:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15992:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15992:60:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15985:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16087:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16094:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16083:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16083:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16101:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16106:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16061:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16061:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16061:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16122:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16133:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16160:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16138:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16138:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16129:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16129:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16122:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15895:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15902:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15910:3:14",
														"type": ""
													}
												],
												"src": "15834:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16222:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16232:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16257:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16250:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16250:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16243:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16243:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16232:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16204:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16214:7:14",
														"type": ""
													}
												],
												"src": "16180:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16325:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16342:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16362:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "16347:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16347:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16335:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16335:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16335:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16313:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16320:3:14",
														"type": ""
													}
												],
												"src": "16276:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16599:1067:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16609:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16625:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16630:4:14",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16621:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16621:14:14"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "16613:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16645:282:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16682:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16712:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16719:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16708:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16708:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16702:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16702:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "16686:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "16750:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16755:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16746:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16746:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "16766:4:14"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "16772:3:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "16762:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16762:14:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16739:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16739:38:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16739:38:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16790:126:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "16897:12:14"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16911:4:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16798:98:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16798:118:14"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "16790:4:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16937:274:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16981:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17011:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17018:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17007:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17007:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17001:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17001:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "16985:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "17049:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17054:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17045:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17045:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "17065:4:14"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "17071:3:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "17061:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17061:14:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17038:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17038:38:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17038:38:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17089:111:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "17181:12:14"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17195:4:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17097:83:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17097:103:14"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "17089:4:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17221:237:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17260:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17290:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17297:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17286:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17286:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17280:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17280:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "17264:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "17328:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17333:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17324:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17324:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "17344:4:14"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "17350:3:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "17340:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17340:14:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17317:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17317:38:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17317:38:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17368:79:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "17428:12:14"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17442:4:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17376:51:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17376:71:14"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "17368:4:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17468:171:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17516:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17546:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17553:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17542:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17542:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17536:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17536:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "17520:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "17600:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "17618:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17623:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17614:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17614:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "17572:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17572:57:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17572:57:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17649:11:14",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "17656:4:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17649:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExitPoolRequest_$2118_memory_ptr_to_t_struct$_ExitPoolRequest_$2118_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16578:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16585:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16594:3:14",
														"type": ""
													}
												],
												"src": "16459:1207:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17936:504:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17946:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17958:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17969:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17954:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17954:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17946:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18027:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18040:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18051:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18036:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18036:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17983:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17983:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17983:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18108:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18121:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18132:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18117:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18117:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18064:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18064:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18064:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18206:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18219:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18230:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18215:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18215:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18146:59:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18146:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18146:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18255:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18266:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18251:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18251:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18275:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18281:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18271:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18271:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18244:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18244:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18244:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18301:132:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18419:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18428:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExitPoolRequest_$2118_memory_ptr_to_t_struct$_ExitPoolRequest_$2118_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18309:109:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18309:124:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18301:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_payable_t_struct$_ExitPoolRequest_$2118_memory_ptr__to_t_bytes32_t_address_t_address_payable_t_struct$_ExitPoolRequest_$2118_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17884:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17896:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17904:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17912:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17920:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17931:4:14",
														"type": ""
													}
												],
												"src": "17672:768:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18507:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18524:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18545:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "18529:15:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18529:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18517:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18517:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18517:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18495:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18502:3:14",
														"type": ""
													}
												],
												"src": "18446:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18764:385:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18774:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18786:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18797:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18782:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18782:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18774:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18850:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18863:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18874:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18859:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18859:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18810:39:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18810:67:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18810:67:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18898:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18909:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18894:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18894:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18918:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18924:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18914:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18914:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18887:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18887:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18887:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18944:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19046:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19055:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18952:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18952:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18944:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19114:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19127:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19138:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19123:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19123:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19070:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19070:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19070:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18720:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18732:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18740:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18748:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18759:4:14",
														"type": ""
													}
												],
												"src": "18564:585:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19373:1068:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19383:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19399:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19404:4:14",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19395:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19395:14:14"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "19387:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19419:282:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19456:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19486:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19493:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19482:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19482:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19476:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19476:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19460:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19524:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19529:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19520:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19520:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "19540:4:14"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19546:3:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "19536:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19536:14:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "19513:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19513:38:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19513:38:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19564:126:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19671:12:14"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19685:4:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "19572:98:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19572:118:14"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "19564:4:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19711:273:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19754:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19784:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19791:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19780:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19780:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "19774:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19774:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "19758:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19822:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19827:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19818:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19818:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "19838:4:14"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "19844:3:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "19834:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19834:14:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "19811:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19811:38:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "19811:38:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19862:111:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "19954:12:14"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19968:4:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "19870:83:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19870:103:14"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "19862:4:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19994:237:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20033:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20063:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20070:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20059:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20059:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20053:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20053:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20037:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20101:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20106:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20097:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20097:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "20117:4:14"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20123:3:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "20113:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20113:14:14"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "20090:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20090:38:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20090:38:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20141:79:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20201:12:14"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20215:4:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "20149:51:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20149:71:14"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "20141:4:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20241:173:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20291:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20321:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20328:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20317:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20317:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "20311:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20311:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "20295:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "20375:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "20393:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20398:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20389:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20389:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "20347:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20347:57:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "20347:57:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20424:11:14",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "20431:4:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20424:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_JoinPoolRequest_$2093_memory_ptr_to_t_struct$_JoinPoolRequest_$2093_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19352:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19359:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19368:3:14",
														"type": ""
													}
												],
												"src": "19233:1208:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20695:488:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20705:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20717:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20728:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20713:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20713:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20705:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20786:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20799:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20810:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20795:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20795:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20742:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20742:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20742:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20867:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20880:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20891:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20876:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20876:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20823:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20823:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20823:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20949:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20962:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20973:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20958:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20958:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20905:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20905:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20905:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20998:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21009:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20994:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20994:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21018:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21024:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21014:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21014:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20987:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20987:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20987:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21044:132:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21162:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21171:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_JoinPoolRequest_$2093_memory_ptr_to_t_struct$_JoinPoolRequest_$2093_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21052:109:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21052:124:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21044:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$2093_memory_ptr__to_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$2093_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20643:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20655:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20663:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20671:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20679:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20690:4:14",
														"type": ""
													}
												],
												"src": "20447:736:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21252:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21262:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21277:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21271:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21271:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21262:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21320:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21293:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21293:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21293:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "21230:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21238:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21246:5:14",
														"type": ""
													}
												],
												"src": "21189:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21415:274:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21461:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21463:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21463:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21463:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21436:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21445:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21432:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21432:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21457:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21428:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21428:32:14"
															},
															"nodeType": "YulIf",
															"src": "21425:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "21554:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21569:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21583:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21573:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21598:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21644:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21655:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21640:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21640:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21664:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21608:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21608:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21598:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21385:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21396:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21408:6:14",
														"type": ""
													}
												],
												"src": "21338:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21735:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21789:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21798:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21801:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21791:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21791:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21791:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21758:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21780:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "21765:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21765:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21755:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21755:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21748:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21748:40:14"
															},
															"nodeType": "YulIf",
															"src": "21745:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21728:5:14",
														"type": ""
													}
												],
												"src": "21695:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21877:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21887:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21902:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21896:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21896:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21887:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21942:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21918:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21918:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21918:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "21855:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21863:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21871:5:14",
														"type": ""
													}
												],
												"src": "21817:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22034:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22080:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "22082:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22082:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22082:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22055:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22064:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22051:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22051:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22076:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "22047:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22047:32:14"
															},
															"nodeType": "YulIf",
															"src": "22044:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "22173:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "22188:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22202:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "22192:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22217:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "22260:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "22271:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "22256:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22256:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22280:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "22227:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22227:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "22217:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22004:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "22015:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22027:6:14",
														"type": ""
													}
												],
												"src": "21960:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22407:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22424:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22429:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22417:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22417:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22417:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22445:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22464:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22469:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22460:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22460:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22445:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22379:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22384:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22395:11:14",
														"type": ""
													}
												],
												"src": "22311:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22592:123:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22614:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22622:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22610:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22610:14:14"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22626:34:14",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22603:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22603:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22603:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22682:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22690:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22678:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22678:15:14"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22695:12:14",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22671:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22671:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22671:37:14"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22584:6:14",
														"type": ""
													}
												],
												"src": "22486:229:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22867:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22877:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22943:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22948:2:14",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22884:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22884:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22877:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23049:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "22960:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22960:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22960:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23062:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23073:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23078:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23069:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23069:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23062:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22855:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22863:3:14",
														"type": ""
													}
												],
												"src": "22721:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23264:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23274:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23286:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23297:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23282:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23282:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23274:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23321:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23332:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23317:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23317:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23340:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23346:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23336:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23336:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23310:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23310:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23366:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23500:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23374:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23374:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23366:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23244:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23259:4:14",
														"type": ""
													}
												],
												"src": "23093:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23644:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23654:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23666:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23677:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23662:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23662:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23654:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23734:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23747:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23758:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23743:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23743:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23690:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23690:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23690:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23815:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23828:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23839:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23824:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23824:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23771:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23771:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23771:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23608:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23620:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23628:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23639:4:14",
														"type": ""
													}
												],
												"src": "23518:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23884:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23901:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23904:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23894:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23894:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23894:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23998:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24001:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23991:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23991:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23991:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24022:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24025:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24015:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24015:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24015:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "23856:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24086:261:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24096:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24119:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24101:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24101:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24096:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24130:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24153:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24135:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24135:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24130:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24293:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24295:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24295:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24295:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24214:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24221:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24289:1:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24217:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24217:74:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24211:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24211:81:14"
															},
															"nodeType": "YulIf",
															"src": "24208:107:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24325:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24336:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24339:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24332:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24332:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24325:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24073:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24076:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24082:3:14",
														"type": ""
													}
												],
												"src": "24042:305:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24479:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24489:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24501:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24512:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24497:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24497:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24489:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24569:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24582:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24593:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24578:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24578:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24525:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24525:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24525:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24650:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24663:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24674:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24659:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24659:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24606:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24606:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24606:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24443:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24455:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24463:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24474:4:14",
														"type": ""
													}
												],
												"src": "24353:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24797:119:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24819:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24827:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24815:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24815:14:14"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24831:34:14",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24808:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24808:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24808:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24887:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24895:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24883:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24883:15:14"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24900:8:14",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24876:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24876:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24876:33:14"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24789:6:14",
														"type": ""
													}
												],
												"src": "24691:225:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25068:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25078:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25144:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25149:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25085:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25085:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25078:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25250:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "25161:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25161:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25161:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25263:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25274:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25279:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25270:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25270:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25263:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25056:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25064:3:14",
														"type": ""
													}
												],
												"src": "24922:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25465:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25475:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25487:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25498:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25483:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25483:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25475:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25522:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25533:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25518:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25518:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25541:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25547:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25537:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25537:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25511:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25511:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25511:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25567:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25701:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25575:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25575:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25567:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25445:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25460:4:14",
														"type": ""
													}
												],
												"src": "25294:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25825:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25847:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25855:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25843:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25843:14:14"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25859:31:14",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25836:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25836:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25836:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25817:6:14",
														"type": ""
													}
												],
												"src": "25719:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26050:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26060:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26126:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26131:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26067:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26067:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26060:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26232:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "26143:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26143:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26143:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26245:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26256:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26261:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26252:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26252:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26245:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26038:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26046:3:14",
														"type": ""
													}
												],
												"src": "25904:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26447:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26457:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26469:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26480:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26465:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26465:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26457:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26504:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26515:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26500:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26500:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26523:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26529:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26519:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26519:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26493:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26493:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26493:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26549:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26683:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26557:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26557:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26549:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26427:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26442:4:14",
														"type": ""
													}
												],
												"src": "26276:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26814:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26824:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26839:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26824:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26786:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26791:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26802:11:14",
														"type": ""
													}
												],
												"src": "26701:147:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26962:265:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26972:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27018:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26986:31:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26986:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26976:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27033:95:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27116:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27121:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27040:75:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27040:88:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27033:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27163:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27170:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27159:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27159:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27177:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27182:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27137:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27137:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27137:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27198:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27209:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27214:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27205:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27205:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27198:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26943:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26950:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26958:3:14",
														"type": ""
													}
												],
												"src": "26854:373:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27367:137:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27378:100:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27465:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27474:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27385:79:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27385:93:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27378:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27488:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "27495:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27488:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27346:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27352:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27363:3:14",
														"type": ""
													}
												],
												"src": "27233:271:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27569:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27580:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27596:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27590:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27590:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27580:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27552:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27562:6:14",
														"type": ""
													}
												],
												"src": "27510:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27707:272:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27717:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27764:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27731:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27731:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27721:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27779:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27845:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27850:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27786:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27786:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27779:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27892:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27899:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27888:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27888:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27906:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27911:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27866:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27866:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27866:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27927:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27938:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27965:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27943:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27943:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27934:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27934:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27927:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27688:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27695:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27703:3:14",
														"type": ""
													}
												],
												"src": "27615:364:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28103:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28113:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28125:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28136:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28121:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28121:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28113:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28160:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28171:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28156:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28156:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28179:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28185:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28175:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28175:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28149:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28149:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28149:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28205:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28277:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28286:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28213:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28213:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28205:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28075:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28087:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28098:4:14",
														"type": ""
													}
												],
												"src": "27985:313:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IAsset_$1822(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IAsset_$1822(value) {\n        if iszero(eq(value, cleanup_t_contract$_IAsset_$1822(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IAsset_$1822(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IAsset_$1822(value)\n    }\n\n    // contract IAsset[]\n    function abi_decode_available_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_contract$_IAsset_$1822(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // contract IAsset[]\n    function abi_decode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct BeetsHelper.VaultParams\n    function abi_decode_t_struct$_VaultParams_$1391_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xc0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xc0)\n\n        {\n            // underlyings\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x00), abi_decode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenIndex\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // beetsPoolId\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // lpToken\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // vault\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // recipient\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_VaultParams_$1391_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_VaultParams_$1391_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_struct$_VaultParams_$1391_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_struct$_VaultParams_$1391_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint8(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_0_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function array_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAsset_$1822_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAsset_$1822_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_IAsset_$1822_to_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_IAsset_$1822_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_IAsset_$1822_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // contract IAsset[] -> address[]\n    function abi_encode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_IAsset_$1822_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct IBeetVault.ExitPoolRequest -> struct IBeetVault.ExitPoolRequest\n    function abi_encode_t_struct$_ExitPoolRequest_$2118_memory_ptr_to_t_struct$_ExitPoolRequest_$2118_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // assets\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // minAmountsOut\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // userData\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // toInternalBalance\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_payable_t_struct$_ExitPoolRequest_$2118_memory_ptr__to_t_bytes32_t_address_t_address_payable_t_struct$_ExitPoolRequest_$2118_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ExitPoolRequest_$2118_memory_ptr_to_t_struct$_ExitPoolRequest_$2118_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    // struct IBeetVault.JoinPoolRequest -> struct IBeetVault.JoinPoolRequest\n    function abi_encode_t_struct$_JoinPoolRequest_$2093_memory_ptr_to_t_struct$_JoinPoolRequest_$2093_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // assets\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // maxAmountsIn\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // userData\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // fromInternalBalance\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$2093_memory_ptr__to_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$2093_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_struct$_JoinPoolRequest_$2093_memory_ptr_to_t_struct$_JoinPoolRequest_$2093_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1376": [
									{
										"length": 32,
										"start": 380
									},
									{
										"length": 32,
										"start": 1009
									},
									{
										"length": 32,
										"start": 1381
									},
									{
										"length": 32,
										"start": 1479
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e6335e61461005157806377aba2131461006d5780639cbcf4c71461008b578063bfbd3808146100a7575b600080fd5b61006b60048036038101906100669190610ff7565b6100c3565b005b61007561017a565b6040516100829190611062565b60405180910390f35b6100a560048036038101906100a0919061107d565b61019e565b005b6100c160048036038101906100bc9190610ff7565b61020e565b005b6000826080015190506100f93330848473ffffffffffffffffffffffffffffffffffffffff16610296909392919063ffffffff16565b826080015173ffffffffffffffffffffffffffffffffffffffff1663853828b66040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561014557600080fd5b505af1158015610159573d6000803e3d6000fd5b505050506101758360000151838560200151866040015161031f565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600082600001518360200151815181106101bb576101ba6110ec565b5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361020757610202838361020e565b610208565b5b50505050565b6000826000015183602001518151811061022b5761022a6110ec565b5b602002602001015190506102623330848473ffffffffffffffffffffffffffffffffffffffff16610296909392919063ffffffff16565b61027a8360000151838560200151866040015161048a565b610291836060015184608001518560a00151610661565b505050565b610319846323b872dd60e01b8585856040516024016102b79392919061112a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061077a565b50505050565b6000845167ffffffffffffffff81111561033c5761033b610ce6565b5b60405190808252806020026020018201604052801561036a5781602001602082028036833780820191505090505b50905083818481518110610381576103806110ec565b5b60200260200101818152505060006001905060008083836040516020016103aa93929190611271565b60405160208183030381529060405290506103c3610c68565b87816000018190525083816020018190525081816040018190525060008160600190151590811515815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638bdb3913863033856040518563ffffffff1660e01b815260040161044e9493929190611566565b600060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b505050505050505050505050565b6000600190506000855167ffffffffffffffff8111156104ad576104ac610ce6565b5b6040519080825280602002602001820160405280156104db5781602001602082028036833780820191505090505b509050848185815181106104f2576104f16110ec565b5b602002602001018181525050600060019050600083838360405160200161051b939291906115c1565b6040516020818303038152906040529050610534610c92565b88816000018190525083816020018190525081816040018190525060008160600190151590811515815250506105c57f0000000000000000000000000000000000000000000000000000000000000000898b8a81518110610598576105976110ec565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108419092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b95cac28873030856040518563ffffffff1660e01b81526004016106249493929190611670565b600060405180830381600087803b15801561063e57600080fd5b505af1158015610652573d6000803e3d6000fd5b50505050505050505050505050565b61066b8284610953565b8173ffffffffffffffffffffffffffffffffffffffff1663de5f62686040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106b357600080fd5b505af11580156106c7573d6000803e3d6000fd5b505050506000829050610774828273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070d9190611062565b602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e91906116d1565b8373ffffffffffffffffffffffffffffffffffffffff16610a2c9092919063ffffffff16565b50505050565b60006107dc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ab29092919063ffffffff16565b905060008151111561083c57808060200190518101906107fc919061172a565b61083b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610832906117da565b60405180910390fd5b5b505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b815260040161087f9291906117fa565b602060405180830381865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c091906116d1565b6108ca9190611852565b905061094d8463095ea7b360e01b85846040516024016108eb9291906118a8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061077a565b50505050565b600081905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b81526004016109959291906117fa565b602060405180830381865afa1580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d691906116d1565b03610a2757610a26837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8373ffffffffffffffffffffffffffffffffffffffff166108419092919063ffffffff16565b5b505050565b610aad8363a9059cbb60e01b8484604051602401610a4b9291906118a8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061077a565b505050565b6060610ac18484600085610aca565b90509392505050565b606082471015610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0690611943565b60405180910390fd5b610b1885610bde565b610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e906119af565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b809190611a0b565b60006040518083038185875af1925050503d8060008114610bbd576040519150601f19603f3d011682016040523d82523d6000602084013e610bc2565b606091505b5091509150610bd2828286610c01565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610c1157829050610c61565b600083511115610c245782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c589190611a66565b60405180910390fd5b9392505050565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d1e82610cd5565b810181811067ffffffffffffffff82111715610d3d57610d3c610ce6565b5b80604052505050565b6000610d50610cbc565b9050610d5c8282610d15565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610d8657610d85610ce6565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dc782610d9c565b9050919050565b6000610dd982610dbc565b9050919050565b610de981610dce565b8114610df457600080fd5b50565b600081359050610e0681610de0565b92915050565b6000610e1f610e1a84610d6b565b610d46565b90508083825260208201905060208402830185811115610e4257610e41610d97565b5b835b81811015610e6b5780610e578882610df7565b845260208401935050602081019050610e44565b5050509392505050565b600082601f830112610e8a57610e89610d66565b5b8135610e9a848260208601610e0c565b91505092915050565b6000819050919050565b610eb681610ea3565b8114610ec157600080fd5b50565b600081359050610ed381610ead565b92915050565b6000819050919050565b610eec81610ed9565b8114610ef757600080fd5b50565b600081359050610f0981610ee3565b92915050565b610f1881610dbc565b8114610f2357600080fd5b50565b600081359050610f3581610f0f565b92915050565b600060c08284031215610f5157610f50610cd0565b5b610f5b60c0610d46565b9050600082013567ffffffffffffffff811115610f7b57610f7a610d61565b5b610f8784828501610e75565b6000830152506020610f9b84828501610ec4565b6020830152506040610faf84828501610efa565b6040830152506060610fc384828501610f26565b6060830152506080610fd784828501610f26565b60808301525060a0610feb84828501610f26565b60a08301525092915050565b6000806040838503121561100e5761100d610cc6565b5b600083013567ffffffffffffffff81111561102c5761102b610ccb565b5b61103885828601610f3b565b925050602061104985828601610ec4565b9150509250929050565b61105c81610dbc565b82525050565b60006020820190506110776000830184611053565b92915050565b60008060006060848603121561109657611095610cc6565b5b60006110a486828701610f26565b935050602084013567ffffffffffffffff8111156110c5576110c4610ccb565b5b6110d186828701610f3b565b92505060406110e286828701610ec4565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61112481610ea3565b82525050565b600060608201905061113f6000830186611053565b61114c6020830185611053565b611159604083018461111b565b949350505050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061119d61119861119384611161565b611178565b61116b565b9050919050565b6111ad81611182565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111e881610ea3565b82525050565b60006111fa83836111df565b60208301905092915050565b6000602082019050919050565b600061121e826111b3565b61122881856111be565b9350611233836111cf565b8060005b8381101561126457815161124b88826111ee565b975061125683611206565b925050600181019050611237565b5085935050505092915050565b600060608201905061128660008301866111a4565b81810360208301526112988185611213565b90506112a7604083018461111b565b949350505050565b6112b881610ed9565b82525050565b60006112c982610d9c565b9050919050565b6112d9816112be565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061132661132161131c84610d9c565b611178565b610d9c565b9050919050565b60006113388261130b565b9050919050565b600061134a8261132d565b9050919050565b61135a8161133f565b82525050565b600061136c8383611351565b60208301905092915050565b6000602082019050919050565b6000611390826112df565b61139a81856112ea565b93506113a5836112fb565b8060005b838110156113d65781516113bd8882611360565b97506113c883611378565b9250506001810190506113a9565b5085935050505092915050565b600082825260208201905092915050565b60006113ff826111b3565b61140981856113e3565b9350611414836111cf565b8060005b8381101561144557815161142c88826111ee565b975061143783611206565b925050600181019050611418565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561148c578082015181840152602081019050611471565b8381111561149b576000848401525b50505050565b60006114ac82611452565b6114b6818561145d565b93506114c681856020860161146e565b6114cf81610cd5565b840191505092915050565b60008115159050919050565b6114ef816114da565b82525050565b600060808301600083015184820360008601526115128282611385565b9150506020830151848203602086015261152c82826113f4565b9150506040830151848203604086015261154682826114a1565b915050606083015161155b60608601826114e6565b508091505092915050565b600060808201905061157b60008301876112af565b6115886020830186611053565b61159560408301856112d0565b81810360608301526115a781846114f5565b905095945050505050565b6115bb8161116b565b82525050565b60006060820190506115d660008301866115b2565b81810360208301526115e88185611213565b90506115f7604083018461111b565b949350505050565b6000608083016000830151848203600086015261161c8282611385565b9150506020830151848203602086015261163682826113f4565b9150506040830151848203604086015261165082826114a1565b915050606083015161166560608601826114e6565b508091505092915050565b600060808201905061168560008301876112af565b6116926020830186611053565b61169f6040830185611053565b81810360608301526116b181846115ff565b905095945050505050565b6000815190506116cb81610ead565b92915050565b6000602082840312156116e7576116e6610cc6565b5b60006116f5848285016116bc565b91505092915050565b611707816114da565b811461171257600080fd5b50565b600081519050611724816116fe565b92915050565b6000602082840312156117405761173f610cc6565b5b600061174e84828501611715565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006117c4602a83611757565b91506117cf82611768565b604082019050919050565b600060208201905081810360008301526117f3816117b7565b9050919050565b600060408201905061180f6000830185611053565b61181c6020830184611053565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185d82610ea3565b915061186883610ea3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561189d5761189c611823565b5b828201905092915050565b60006040820190506118bd6000830185611053565b6118ca602083018461111b565b9392505050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061192d602683611757565b9150611938826118d1565b604082019050919050565b6000602082019050818103600083015261195c81611920565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611999601d83611757565b91506119a482611963565b602082019050919050565b600060208201905081810360008301526119c88161198c565b9050919050565b600081905092915050565b60006119e582611452565b6119ef81856119cf565b93506119ff81856020860161146e565b80840191505092915050565b6000611a1782846119da565b915081905092915050565b600081519050919050565b6000611a3882611a22565b611a428185611757565b9350611a5281856020860161146e565b611a5b81610cd5565b840191505092915050565b60006020820190508181036000830152611a808184611a2d565b90509291505056fea26469706673582212204a84b23eb5c3b925ef107490915a93d32f6b7de56f7a8dedb6fbb2f33286a0aa64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE6335E6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x77ABA213 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x9CBCF4C7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBFBD3808 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x19E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH2 0xF9 CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x853828B6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x175 DUP4 PUSH1 0x0 ADD MLOAD DUP4 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x31F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1BB JUMPI PUSH2 0x1BA PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x207 JUMPI PUSH2 0x202 DUP4 DUP4 PUSH2 0x20E JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x22B JUMPI PUSH2 0x22A PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x262 CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27A DUP4 PUSH1 0x0 ADD MLOAD DUP4 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x291 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD PUSH2 0x661 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x319 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33C JUMPI PUSH2 0x33B PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x3C3 PUSH2 0xC68 JUMP JUMPDEST DUP8 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8BDB3913 DUP7 ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4DB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x534 PUSH2 0xC92 JUMP JUMPDEST DUP9 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP2 PUSH1 0x60 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x5C5 PUSH32 0x0 DUP10 DUP12 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x10EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB95CAC28 DUP8 ADDRESS ADDRESS DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x66B DUP3 DUP5 PUSH2 0x953 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDE5F6268 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP3 SWAP1 POP PUSH2 0x774 DUP3 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA2C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x83C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x832 SWAP1 PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP1 POP PUSH2 0x94D DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8EB SWAP3 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D6 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST SUB PUSH2 0xA27 JUMPI PUSH2 0xA26 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAAD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA4B SWAP3 SWAP2 SWAP1 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xACA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB18 DUP6 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBD2 DUP3 DUP3 DUP7 PUSH2 0xC01 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xC11 JUMPI DUP3 SWAP1 POP PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xC24 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD1E DUP3 PUSH2 0xCD5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD3D JUMPI PUSH2 0xD3C PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0xCBC JUMP JUMPDEST SWAP1 POP PUSH2 0xD5C DUP3 DUP3 PUSH2 0xD15 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD86 JUMPI PUSH2 0xD85 PUSH2 0xCE6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC7 DUP3 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD9 DUP3 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE9 DUP2 PUSH2 0xDCE JUMP JUMPDEST DUP2 EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE06 DUP2 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F PUSH2 0xE1A DUP5 PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xD97 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE6B JUMPI DUP1 PUSH2 0xE57 DUP9 DUP3 PUSH2 0xDF7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE44 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE8A JUMPI PUSH2 0xE89 PUSH2 0xD66 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB6 DUP2 PUSH2 0xEA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xED3 DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xED9 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF09 DUP2 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP2 EQ PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF35 DUP2 PUSH2 0xF0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF51 JUMPI PUSH2 0xF50 PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST PUSH2 0xF5B PUSH1 0xC0 PUSH2 0xD46 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7A PUSH2 0xD61 JUMP JUMPDEST JUMPDEST PUSH2 0xF87 DUP5 DUP3 DUP6 ADD PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xF9B DUP5 DUP3 DUP6 ADD PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xFAF DUP5 DUP3 DUP6 ADD PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xFC3 DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xFD7 DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0xFEB DUP5 DUP3 DUP6 ADD PUSH2 0xF26 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x100E JUMPI PUSH2 0x100D PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102B PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH2 0x1038 DUP6 DUP3 DUP7 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1049 DUP6 DUP3 DUP7 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x105C DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1077 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1095 PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10A4 DUP7 DUP3 DUP8 ADD PUSH2 0xF26 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0xCCB JUMP JUMPDEST JUMPDEST PUSH2 0x10D1 DUP7 DUP3 DUP8 ADD PUSH2 0xF3B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10E2 DUP7 DUP3 DUP8 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0xEA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x113F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x114C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x1159 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119D PUSH2 0x1198 PUSH2 0x1193 DUP5 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x116B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AD DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E8 DUP2 PUSH2 0xEA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FA DUP4 DUP4 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP6 PUSH2 0x11BE JUMP JUMPDEST SWAP4 POP PUSH2 0x1233 DUP4 PUSH2 0x11CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1264 JUMPI DUP2 MLOAD PUSH2 0x124B DUP9 DUP3 PUSH2 0x11EE JUMP JUMPDEST SWAP8 POP PUSH2 0x1256 DUP4 PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1237 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1298 DUP2 DUP6 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP PUSH2 0x12A7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x12B8 DUP2 PUSH2 0xED9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C9 DUP3 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D9 DUP2 PUSH2 0x12BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1326 PUSH2 0x1321 PUSH2 0x131C DUP5 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1338 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP3 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135A DUP2 PUSH2 0x133F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136C DUP4 DUP4 PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1390 DUP3 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x139A DUP2 DUP6 PUSH2 0x12EA JUMP JUMPDEST SWAP4 POP PUSH2 0x13A5 DUP4 PUSH2 0x12FB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D6 JUMPI DUP2 MLOAD PUSH2 0x13BD DUP9 DUP3 PUSH2 0x1360 JUMP JUMPDEST SWAP8 POP PUSH2 0x13C8 DUP4 PUSH2 0x1378 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13A9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP3 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x1409 DUP2 DUP6 PUSH2 0x13E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1414 DUP4 PUSH2 0x11CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1445 JUMPI DUP2 MLOAD PUSH2 0x142C DUP9 DUP3 PUSH2 0x11EE JUMP JUMPDEST SWAP8 POP PUSH2 0x1437 DUP4 PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1418 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x148C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1471 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP3 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x14B6 DUP2 DUP6 PUSH2 0x145D JUMP JUMPDEST SWAP4 POP PUSH2 0x14C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST PUSH2 0x14CF DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EF DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x1512 DUP3 DUP3 PUSH2 0x1385 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x152C DUP3 DUP3 PUSH2 0x13F4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1546 DUP3 DUP3 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x155B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x14E6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x157B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x1588 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x1595 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12D0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15A7 DUP2 DUP5 PUSH2 0x14F5 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15BB DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15B2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x15E8 DUP2 DUP6 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP PUSH2 0x15F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x161C DUP3 DUP3 PUSH2 0x1385 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1636 DUP3 DUP3 PUSH2 0x13F4 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1650 DUP3 DUP3 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1665 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x14E6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1685 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x1692 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x169F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16B1 DUP2 DUP5 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16CB DUP2 PUSH2 0xEAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F5 DUP5 DUP3 DUP6 ADD PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1724 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0xCC6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP5 DUP3 DUP6 ADD PUSH2 0x1715 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C4 PUSH1 0x2A DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x17CF DUP3 PUSH2 0x1768 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F3 DUP2 PUSH2 0x17B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x181C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP3 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1868 DUP4 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x1823 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x18CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192D PUSH1 0x26 DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x1938 DUP3 PUSH2 0x18D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x195C DUP2 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1999 PUSH1 0x1D DUP4 PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A4 DUP3 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19C8 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E5 DUP3 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x19EF DUP2 DUP6 PUSH2 0x19CF JUMP JUMPDEST SWAP4 POP PUSH2 0x19FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP3 DUP5 PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A38 DUP3 PUSH2 0x1A22 JUMP JUMPDEST PUSH2 0x1A42 DUP2 DUP6 PUSH2 0x1757 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST PUSH2 0x1A5B DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A80 DUP2 DUP5 PUSH2 0x1A2D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP5 0xB2 RETURNDATACOPY 0xB5 0xC3 0xB9 0x25 0xEF LT PUSH21 0x90915A93D32F6B7DE56F7A8DEDB6FBB2F33286A0AA PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "289:4731:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1961:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;376:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;988:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1489:464;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1961:371;2052:28;2101:7;:13;;;2052:63;;2126:62;2154:10;2174:4;2181:6;2126:10;:27;;;;:62;;;;;;:::i;:::-;2206:7;:13;;;2199:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:79;2255:7;:19;;;2276:6;2284:7;:18;;;2304:7;:19;;;2245:9;:79::i;:::-;2041:291;1961:371;;:::o;376:33::-;;;:::o;988:493::-;1216:20;1247:7;:19;;;1267:7;:18;;;1247:39;;;;;;;;:::i;:::-;;;;;;;;1216:71;;1312:12;1301:23;;:7;:23;;;1298:166;;1340:35;1359:7;1368:6;1340:18;:35::i;:::-;1298:166;;;;1078:403;988:493;;;:::o;1489:464::-;1579:28;1636:7;:19;;;1656:7;:18;;;1636:39;;;;;;;;:::i;:::-;;;;;;;;1579:98;;1688:62;1716:10;1736:4;1743:6;1688:10;:27;;;;:62;;;;;;:::i;:::-;1761:79;1771:7;:19;;;1792:6;1800:7;:18;;;1820:7;:19;;;1761:9;:79::i;:::-;1877:68;1895:7;:15;;;1912:7;:13;;;1927:7;:17;;;1877;:68::i;:::-;1568:385;1489:464;;:::o;967:252:4:-;1116:96;1136:5;1166:27;;;1195:4;1201:2;1205:5;1143:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;:::-;967:252;;;;:::o;4075:940:7:-;4281:30;4328:11;:18;4314:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4281:66;;4386:6;4358:13;4372:10;4358:25;;;;;;;;:::i;:::-;;;;;;;:34;;;;;4405:20;4428:1;4405:24;;4481:21;4516:1;4518:13;4533:12;4505:41;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4481:65;;4559:41;;:::i;:::-;4628:11;4611:7;:14;;:28;;;;4674:13;4650:7;:21;;:37;;;;4717:8;4698:7;:16;;:27;;;;4764:5;4736:7;:25;;:33;;;;;;;;;;;4896:8;4885:29;;;4915:11;4936:4;4951:10;4964:7;4885:87;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4189:826;;;;4075:940;;;;:::o;3149:918::-;3273:14;3290:1;3273:18;;3384:26;3427:11;:18;3413:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3384:62;;3481:5;3457:9;3467:10;3457:21;;;;;;;;:::i;:::-;;;;;;;:29;;;;;3499:20;3522:1;3499:24;;3575:21;3610:8;3620:9;3631:12;3599:45;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3575:69;;3657:41;;:::i;:::-;3726:11;3709:7;:14;;:28;;;;3771:9;3748:7;:20;;:32;;;;3810:8;3791:7;:16;;:27;;;;3859:5;3829:7;:27;;:35;;;;;;;;;;;3877:90;3951:8;3961:5;3903:11;3915:10;3903:23;;;;;;;;:::i;:::-;;;;;;;;3877:73;;;;:90;;;;;:::i;:::-;3989:8;3978:29;;;4008:11;4029:4;4044;4051:7;3978:81;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3262:805;;;;;3149:918;;;;:::o;2344:407::-;2462:27;2479:5;2486:2;2462:16;:27::i;:::-;2557:5;2550:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2618:24;2663:5;2618:51;;2680:63;2700:9;2711:6;:16;;;2736:4;2711:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2680:6;:19;;;;:63;;;;;:::i;:::-;2426:325;2344:407;;;:::o;3306:717:4:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;3762:27;;;;:69;;;;;:::i;:::-;3736:95;;3865:1;3845:10;:17;:21;3841:176;;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3841:176;3387:636;3306:717;;:::o;2099:321::-;2236:20;2301:5;2259;:15;;;2283:4;2290:7;2259:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2236:70;;2316:97;2336:5;2366:22;;;2390:7;2399:12;2343:69;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:19;:97::i;:::-;2226:194;2099:321;;;:::o;2759:290:7:-;2837:24;2882:5;2837:51;;2955:1;2903:6;:16;;;2928:4;2935:7;2903:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;2899:143;;2974:56;3003:7;3012:17;2974:6;:28;;;;:56;;;;;:::i;:::-;2899:143;2826:223;2759:290;;:::o;745:216:4:-;868:86;888:5;918:23;;;943:2;947:5;895:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:19;:86::i;:::-;745:216;;;:::o;3872:223:5:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;:::o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5247:18;5258:6;5247:10;:18::i;:::-;5239:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5311:12;5325:23;5352:6;:11;;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;;;;4959:499;;;;;;:::o;1186:320::-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;6622:692::-;6768:12;6796:7;6792:516;;;6826:10;6819:17;;;;6792:516;6957:1;6937:10;:17;:21;6933:365;;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;;;;;;;;;;:::i;:::-;;;;;;;;6622:692;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:117::-;1282:1;1279;1272:12;1296:117;1405:1;1402;1395:12;1419:326;1511:4;1601:18;1593:6;1590:30;1587:56;;;1623:18;;:::i;:::-;1587:56;1673:4;1665:6;1661:17;1653:25;;1733:4;1727;1723:15;1715:23;;1419:326;;;:::o;1751:117::-;1860:1;1857;1850:12;1874:126;1911:7;1951:42;1944:5;1940:54;1929:65;;1874:126;;;:::o;2006:96::-;2043:7;2072:24;2090:5;2072:24;:::i;:::-;2061:35;;2006:96;;;:::o;2108:111::-;2160:7;2189:24;2207:5;2189:24;:::i;:::-;2178:35;;2108:111;;;:::o;2225:152::-;2313:39;2346:5;2313:39;:::i;:::-;2306:5;2303:50;2293:78;;2367:1;2364;2357:12;2293:78;2225:152;:::o;2383:169::-;2444:5;2482:6;2469:20;2460:29;;2498:48;2540:5;2498:48;:::i;:::-;2383:169;;;;:::o;2583:755::-;2694:5;2719:96;2735:79;2807:6;2735:79;:::i;:::-;2719:96;:::i;:::-;2710:105;;2835:5;2864:6;2857:5;2850:21;2898:4;2891:5;2887:16;2880:23;;2951:4;2943:6;2939:17;2931:6;2927:30;2980:3;2972:6;2969:15;2966:122;;;2999:79;;:::i;:::-;2966:122;3114:6;3097:235;3131:6;3126:3;3123:15;3097:235;;;3206:3;3235:52;3283:3;3271:10;3235:52;:::i;:::-;3230:3;3223:65;3317:4;3312:3;3308:14;3301:21;;3173:159;3157:4;3152:3;3148:14;3141:21;;3097:235;;;3101:21;2700:638;;2583:755;;;;;:::o;3369:400::-;3455:5;3504:3;3497:4;3489:6;3485:17;3481:27;3471:122;;3512:79;;:::i;:::-;3471:122;3629:6;3616:20;3654:109;3759:3;3751:6;3744:4;3736:6;3732:17;3654:109;:::i;:::-;3645:118;;3461:308;3369:400;;;;:::o;3775:77::-;3812:7;3841:5;3830:16;;3775:77;;;:::o;3858:122::-;3931:24;3949:5;3931:24;:::i;:::-;3924:5;3921:35;3911:63;;3970:1;3967;3960:12;3911:63;3858:122;:::o;3986:139::-;4032:5;4070:6;4057:20;4048:29;;4086:33;4113:5;4086:33;:::i;:::-;3986:139;;;;:::o;4131:77::-;4168:7;4197:5;4186:16;;4131:77;;;:::o;4214:122::-;4287:24;4305:5;4287:24;:::i;:::-;4280:5;4277:35;4267:63;;4326:1;4323;4316:12;4267:63;4214:122;:::o;4342:139::-;4388:5;4426:6;4413:20;4404:29;;4442:33;4469:5;4442:33;:::i;:::-;4342:139;;;;:::o;4487:122::-;4560:24;4578:5;4560:24;:::i;:::-;4553:5;4550:35;4540:63;;4599:1;4596;4589:12;4540:63;4487:122;:::o;4615:139::-;4661:5;4699:6;4686:20;4677:29;;4715:33;4742:5;4715:33;:::i;:::-;4615:139;;;;:::o;4798:1453::-;4876:5;4920:4;4908:9;4903:3;4899:19;4895:30;4892:117;;;4928:79;;:::i;:::-;4892:117;5027:21;5043:4;5027:21;:::i;:::-;5018:30;;5142:1;5131:9;5127:17;5114:31;5172:18;5164:6;5161:30;5158:117;;;5194:79;;:::i;:::-;5158:117;5314:89;5399:3;5390:6;5379:9;5375:22;5314:89;:::i;:::-;5307:4;5300:5;5296:16;5289:115;5058:357;5480:2;5521:49;5566:3;5557:6;5546:9;5542:22;5521:49;:::i;:::-;5514:4;5507:5;5503:16;5496:75;5425:157;5648:2;5689:49;5734:3;5725:6;5714:9;5710:22;5689:49;:::i;:::-;5682:4;5675:5;5671:16;5664:75;5592:158;5812:2;5853:49;5898:3;5889:6;5878:9;5874:22;5853:49;:::i;:::-;5846:4;5839:5;5835:16;5828:75;5760:154;5974:3;6016:49;6061:3;6052:6;6041:9;6037:22;6016:49;:::i;:::-;6009:4;6002:5;5998:16;5991:75;5924:153;6141:3;6183:49;6228:3;6219:6;6208:9;6204:22;6183:49;:::i;:::-;6176:4;6169:5;6165:16;6158:75;6087:157;4798:1453;;;;:::o;6257:692::-;6354:6;6362;6411:2;6399:9;6390:7;6386:23;6382:32;6379:119;;;6417:79;;:::i;:::-;6379:119;6565:1;6554:9;6550:17;6537:31;6595:18;6587:6;6584:30;6581:117;;;6617:79;;:::i;:::-;6581:117;6722:82;6796:7;6787:6;6776:9;6772:22;6722:82;:::i;:::-;6712:92;;6508:306;6853:2;6879:53;6924:7;6915:6;6904:9;6900:22;6879:53;:::i;:::-;6869:63;;6824:118;6257:692;;;;;:::o;6955:118::-;7042:24;7060:5;7042:24;:::i;:::-;7037:3;7030:37;6955:118;;:::o;7079:222::-;7172:4;7210:2;7199:9;7195:18;7187:26;;7223:71;7291:1;7280:9;7276:17;7267:6;7223:71;:::i;:::-;7079:222;;;;:::o;7307:837::-;7413:6;7421;7429;7478:2;7466:9;7457:7;7453:23;7449:32;7446:119;;;7484:79;;:::i;:::-;7446:119;7604:1;7629:53;7674:7;7665:6;7654:9;7650:22;7629:53;:::i;:::-;7619:63;;7575:117;7759:2;7748:9;7744:18;7731:32;7790:18;7782:6;7779:30;7776:117;;;7812:79;;:::i;:::-;7776:117;7917:82;7991:7;7982:6;7971:9;7967:22;7917:82;:::i;:::-;7907:92;;7702:307;8048:2;8074:53;8119:7;8110:6;8099:9;8095:22;8074:53;:::i;:::-;8064:63;;8019:118;7307:837;;;;;:::o;8150:180::-;8198:77;8195:1;8188:88;8295:4;8292:1;8285:15;8319:4;8316:1;8309:15;8336:118;8423:24;8441:5;8423:24;:::i;:::-;8418:3;8411:37;8336:118;;:::o;8460:442::-;8609:4;8647:2;8636:9;8632:18;8624:26;;8660:71;8728:1;8717:9;8713:17;8704:6;8660:71;:::i;:::-;8741:72;8809:2;8798:9;8794:18;8785:6;8741:72;:::i;:::-;8823;8891:2;8880:9;8876:18;8867:6;8823:72;:::i;:::-;8460:442;;;;;;:::o;8908:85::-;8953:7;8982:5;8971:16;;8908:85;;;:::o;8999:86::-;9034:7;9074:4;9067:5;9063:16;9052:27;;8999:86;;;:::o;9091:60::-;9119:3;9140:5;9133:12;;9091:60;;;:::o;9157:154::-;9213:9;9246:59;9262:42;9271:32;9297:5;9271:32;:::i;:::-;9262:42;:::i;:::-;9246:59;:::i;:::-;9233:72;;9157:154;;;:::o;9317:143::-;9410:43;9447:5;9410:43;:::i;:::-;9405:3;9398:56;9317:143;;:::o;9466:114::-;9533:6;9567:5;9561:12;9551:22;;9466:114;;;:::o;9586:184::-;9685:11;9719:6;9714:3;9707:19;9759:4;9754:3;9750:14;9735:29;;9586:184;;;;:::o;9776:132::-;9843:4;9866:3;9858:11;;9896:4;9891:3;9887:14;9879:22;;9776:132;;;:::o;9914:108::-;9991:24;10009:5;9991:24;:::i;:::-;9986:3;9979:37;9914:108;;:::o;10028:179::-;10097:10;10118:46;10160:3;10152:6;10118:46;:::i;:::-;10196:4;10191:3;10187:14;10173:28;;10028:179;;;;:::o;10213:113::-;10283:4;10315;10310:3;10306:14;10298:22;;10213:113;;;:::o;10362:732::-;10481:3;10510:54;10558:5;10510:54;:::i;:::-;10580:86;10659:6;10654:3;10580:86;:::i;:::-;10573:93;;10690:56;10740:5;10690:56;:::i;:::-;10769:7;10800:1;10785:284;10810:6;10807:1;10804:13;10785:284;;;10886:6;10880:13;10913:63;10972:3;10957:13;10913:63;:::i;:::-;10906:70;;10999:60;11052:6;10999:60;:::i;:::-;10989:70;;10845:224;10832:1;10829;10825:9;10820:14;;10785:284;;;10789:14;11085:3;11078:10;;10486:608;;;10362:732;;;;:::o;11100:605::-;11305:4;11343:2;11332:9;11328:18;11320:26;;11356:77;11430:1;11419:9;11415:17;11406:6;11356:77;:::i;:::-;11480:9;11474:4;11470:20;11465:2;11454:9;11450:18;11443:48;11508:108;11611:4;11602:6;11508:108;:::i;:::-;11500:116;;11626:72;11694:2;11683:9;11679:18;11670:6;11626:72;:::i;:::-;11100:605;;;;;;:::o;11711:118::-;11798:24;11816:5;11798:24;:::i;:::-;11793:3;11786:37;11711:118;;:::o;11835:104::-;11880:7;11909:24;11927:5;11909:24;:::i;:::-;11898:35;;11835:104;;;:::o;11945:142::-;12048:32;12074:5;12048:32;:::i;:::-;12043:3;12036:45;11945:142;;:::o;12093:129::-;12175:6;12209:5;12203:12;12193:22;;12093:129;;;:::o;12228:174::-;12317:11;12351:6;12346:3;12339:19;12391:4;12386:3;12382:14;12367:29;;12228:174;;;;:::o;12408:147::-;12490:4;12513:3;12505:11;;12543:4;12538:3;12534:14;12526:22;;12408:147;;;:::o;12561:142::-;12611:9;12644:53;12662:34;12671:24;12689:5;12671:24;:::i;:::-;12662:34;:::i;:::-;12644:53;:::i;:::-;12631:66;;12561:142;;;:::o;12709:126::-;12759:9;12792:37;12823:5;12792:37;:::i;:::-;12779:50;;12709:126;;;:::o;12841:141::-;12906:9;12939:37;12970:5;12939:37;:::i;:::-;12926:50;;12841:141;;;:::o;12988:151::-;13080:52;13126:5;13080:52;:::i;:::-;13075:3;13068:65;12988:151;;:::o;13145:209::-;13229:10;13250:61;13307:3;13299:6;13250:61;:::i;:::-;13343:4;13338:3;13334:14;13320:28;;13145:209;;;;:::o;13360:128::-;13445:4;13477;13472:3;13468:14;13460:22;;13360:128;;;:::o;13532:787::-;13656:3;13685:69;13748:5;13685:69;:::i;:::-;13770:76;13839:6;13834:3;13770:76;:::i;:::-;13763:83;;13870:71;13935:5;13870:71;:::i;:::-;13964:7;13995:1;13980:314;14005:6;14002:1;13999:13;13980:314;;;14081:6;14075:13;14108:78;14182:3;14167:13;14108:78;:::i;:::-;14101:85;;14209:75;14277:6;14209:75;:::i;:::-;14199:85;;14040:254;14027:1;14024;14020:9;14015:14;;13980:314;;;13984:14;14310:3;14303:10;;13661:658;;;13532:787;;;;:::o;14325:174::-;14414:11;14448:6;14443:3;14436:19;14488:4;14483:3;14479:14;14464:29;;14325:174;;;;:::o;14535:712::-;14644:3;14673:54;14721:5;14673:54;:::i;:::-;14743:76;14812:6;14807:3;14743:76;:::i;:::-;14736:83;;14843:56;14893:5;14843:56;:::i;:::-;14922:7;14953:1;14938:284;14963:6;14960:1;14957:13;14938:284;;;15039:6;15033:13;15066:63;15125:3;15110:13;15066:63;:::i;:::-;15059:70;;15152:60;15205:6;15152:60;:::i;:::-;15142:70;;14998:224;14985:1;14982;14978:9;14973:14;;14938:284;;;14942:14;15238:3;15231:10;;14649:598;;;14535:712;;;;:::o;15253:98::-;15304:6;15338:5;15332:12;15322:22;;15253:98;;;:::o;15357:158::-;15430:11;15464:6;15459:3;15452:19;15504:4;15499:3;15495:14;15480:29;;15357:158;;;;:::o;15521:307::-;15589:1;15599:113;15613:6;15610:1;15607:13;15599:113;;;15698:1;15693:3;15689:11;15683:18;15679:1;15674:3;15670:11;15663:39;15635:2;15632:1;15628:10;15623:15;;15599:113;;;15730:6;15727:1;15724:13;15721:101;;;15810:1;15801:6;15796:3;15792:16;15785:27;15721:101;15570:258;15521:307;;;:::o;15834:340::-;15910:3;15938:38;15970:5;15938:38;:::i;:::-;15992:60;16045:6;16040:3;15992:60;:::i;:::-;15985:67;;16061:52;16106:6;16101:3;16094:4;16087:5;16083:16;16061:52;:::i;:::-;16138:29;16160:6;16138:29;:::i;:::-;16133:3;16129:39;16122:46;;15914:260;15834:340;;;;:::o;16180:90::-;16214:7;16257:5;16250:13;16243:21;16232:32;;16180:90;;;:::o;16276:99::-;16347:21;16362:5;16347:21;:::i;:::-;16342:3;16335:34;16276:99;;:::o;16459:1207::-;16594:3;16630:4;16625:3;16621:14;16719:4;16712:5;16708:16;16702:23;16772:3;16766:4;16762:14;16755:4;16750:3;16746:14;16739:38;16798:118;16911:4;16897:12;16798:118;:::i;:::-;16790:126;;16645:282;17018:4;17011:5;17007:16;17001:23;17071:3;17065:4;17061:14;17054:4;17049:3;17045:14;17038:38;17097:103;17195:4;17181:12;17097:103;:::i;:::-;17089:111;;16937:274;17297:4;17290:5;17286:16;17280:23;17350:3;17344:4;17340:14;17333:4;17328:3;17324:14;17317:38;17376:71;17442:4;17428:12;17376:71;:::i;:::-;17368:79;;17221:237;17553:4;17546:5;17542:16;17536:23;17572:57;17623:4;17618:3;17614:14;17600:12;17572:57;:::i;:::-;17468:171;17656:4;17649:11;;16599:1067;16459:1207;;;;:::o;17672:768::-;17931:4;17969:3;17958:9;17954:19;17946:27;;17983:71;18051:1;18040:9;18036:17;18027:6;17983:71;:::i;:::-;18064:72;18132:2;18121:9;18117:18;18108:6;18064:72;:::i;:::-;18146:88;18230:2;18219:9;18215:18;18206:6;18146:88;:::i;:::-;18281:9;18275:4;18271:20;18266:2;18255:9;18251:18;18244:48;18309:124;18428:4;18419:6;18309:124;:::i;:::-;18301:132;;17672:768;;;;;;;:::o;18446:112::-;18529:22;18545:5;18529:22;:::i;:::-;18524:3;18517:35;18446:112;;:::o;18564:585::-;18759:4;18797:2;18786:9;18782:18;18774:26;;18810:67;18874:1;18863:9;18859:17;18850:6;18810:67;:::i;:::-;18924:9;18918:4;18914:20;18909:2;18898:9;18894:18;18887:48;18952:108;19055:4;19046:6;18952:108;:::i;:::-;18944:116;;19070:72;19138:2;19127:9;19123:18;19114:6;19070:72;:::i;:::-;18564:585;;;;;;:::o;19233:1208::-;19368:3;19404:4;19399:3;19395:14;19493:4;19486:5;19482:16;19476:23;19546:3;19540:4;19536:14;19529:4;19524:3;19520:14;19513:38;19572:118;19685:4;19671:12;19572:118;:::i;:::-;19564:126;;19419:282;19791:4;19784:5;19780:16;19774:23;19844:3;19838:4;19834:14;19827:4;19822:3;19818:14;19811:38;19870:103;19968:4;19954:12;19870:103;:::i;:::-;19862:111;;19711:273;20070:4;20063:5;20059:16;20053:23;20123:3;20117:4;20113:14;20106:4;20101:3;20097:14;20090:38;20149:71;20215:4;20201:12;20149:71;:::i;:::-;20141:79;;19994:237;20328:4;20321:5;20317:16;20311:23;20347:57;20398:4;20393:3;20389:14;20375:12;20347:57;:::i;:::-;20241:173;20431:4;20424:11;;19373:1068;19233:1208;;;;:::o;20447:736::-;20690:4;20728:3;20717:9;20713:19;20705:27;;20742:71;20810:1;20799:9;20795:17;20786:6;20742:71;:::i;:::-;20823:72;20891:2;20880:9;20876:18;20867:6;20823:72;:::i;:::-;20905;20973:2;20962:9;20958:18;20949:6;20905:72;:::i;:::-;21024:9;21018:4;21014:20;21009:2;20998:9;20994:18;20987:48;21052:124;21171:4;21162:6;21052:124;:::i;:::-;21044:132;;20447:736;;;;;;;:::o;21189:143::-;21246:5;21277:6;21271:13;21262:22;;21293:33;21320:5;21293:33;:::i;:::-;21189:143;;;;:::o;21338:351::-;21408:6;21457:2;21445:9;21436:7;21432:23;21428:32;21425:119;;;21463:79;;:::i;:::-;21425:119;21583:1;21608:64;21664:7;21655:6;21644:9;21640:22;21608:64;:::i;:::-;21598:74;;21554:128;21338:351;;;;:::o;21695:116::-;21765:21;21780:5;21765:21;:::i;:::-;21758:5;21755:32;21745:60;;21801:1;21798;21791:12;21745:60;21695:116;:::o;21817:137::-;21871:5;21902:6;21896:13;21887:22;;21918:30;21942:5;21918:30;:::i;:::-;21817:137;;;;:::o;21960:345::-;22027:6;22076:2;22064:9;22055:7;22051:23;22047:32;22044:119;;;22082:79;;:::i;:::-;22044:119;22202:1;22227:61;22280:7;22271:6;22260:9;22256:22;22227:61;:::i;:::-;22217:71;;22173:125;21960:345;;;;:::o;22311:169::-;22395:11;22429:6;22424:3;22417:19;22469:4;22464:3;22460:14;22445:29;;22311:169;;;;:::o;22486:229::-;22626:34;22622:1;22614:6;22610:14;22603:58;22695:12;22690:2;22682:6;22678:15;22671:37;22486:229;:::o;22721:366::-;22863:3;22884:67;22948:2;22943:3;22884:67;:::i;:::-;22877:74;;22960:93;23049:3;22960:93;:::i;:::-;23078:2;23073:3;23069:12;23062:19;;22721:366;;;:::o;23093:419::-;23259:4;23297:2;23286:9;23282:18;23274:26;;23346:9;23340:4;23336:20;23332:1;23321:9;23317:17;23310:47;23374:131;23500:4;23374:131;:::i;:::-;23366:139;;23093:419;;;:::o;23518:332::-;23639:4;23677:2;23666:9;23662:18;23654:26;;23690:71;23758:1;23747:9;23743:17;23734:6;23690:71;:::i;:::-;23771:72;23839:2;23828:9;23824:18;23815:6;23771:72;:::i;:::-;23518:332;;;;;:::o;23856:180::-;23904:77;23901:1;23894:88;24001:4;23998:1;23991:15;24025:4;24022:1;24015:15;24042:305;24082:3;24101:20;24119:1;24101:20;:::i;:::-;24096:25;;24135:20;24153:1;24135:20;:::i;:::-;24130:25;;24289:1;24221:66;24217:74;24214:1;24211:81;24208:107;;;24295:18;;:::i;:::-;24208:107;24339:1;24336;24332:9;24325:16;;24042:305;;;;:::o;24353:332::-;24474:4;24512:2;24501:9;24497:18;24489:26;;24525:71;24593:1;24582:9;24578:17;24569:6;24525:71;:::i;:::-;24606:72;24674:2;24663:9;24659:18;24650:6;24606:72;:::i;:::-;24353:332;;;;;:::o;24691:225::-;24831:34;24827:1;24819:6;24815:14;24808:58;24900:8;24895:2;24887:6;24883:15;24876:33;24691:225;:::o;24922:366::-;25064:3;25085:67;25149:2;25144:3;25085:67;:::i;:::-;25078:74;;25161:93;25250:3;25161:93;:::i;:::-;25279:2;25274:3;25270:12;25263:19;;24922:366;;;:::o;25294:419::-;25460:4;25498:2;25487:9;25483:18;25475:26;;25547:9;25541:4;25537:20;25533:1;25522:9;25518:17;25511:47;25575:131;25701:4;25575:131;:::i;:::-;25567:139;;25294:419;;;:::o;25719:179::-;25859:31;25855:1;25847:6;25843:14;25836:55;25719:179;:::o;25904:366::-;26046:3;26067:67;26131:2;26126:3;26067:67;:::i;:::-;26060:74;;26143:93;26232:3;26143:93;:::i;:::-;26261:2;26256:3;26252:12;26245:19;;25904:366;;;:::o;26276:419::-;26442:4;26480:2;26469:9;26465:18;26457:26;;26529:9;26523:4;26519:20;26515:1;26504:9;26500:17;26493:47;26557:131;26683:4;26557:131;:::i;:::-;26549:139;;26276:419;;;:::o;26701:147::-;26802:11;26839:3;26824:18;;26701:147;;;;:::o;26854:373::-;26958:3;26986:38;27018:5;26986:38;:::i;:::-;27040:88;27121:6;27116:3;27040:88;:::i;:::-;27033:95;;27137:52;27182:6;27177:3;27170:4;27163:5;27159:16;27137:52;:::i;:::-;27214:6;27209:3;27205:16;27198:23;;26962:265;26854:373;;;;:::o;27233:271::-;27363:3;27385:93;27474:3;27465:6;27385:93;:::i;:::-;27378:100;;27495:3;27488:10;;27233:271;;;;:::o;27510:99::-;27562:6;27596:5;27590:12;27580:22;;27510:99;;;:::o;27615:364::-;27703:3;27731:39;27764:5;27731:39;:::i;:::-;27786:71;27850:6;27845:3;27786:71;:::i;:::-;27779:78;;27866:52;27911:6;27906:3;27899:4;27892:5;27888:16;27866:52;:::i;:::-;27943:29;27965:6;27943:29;:::i;:::-;27938:3;27934:39;27927:46;;27707:272;27615:364;;;;:::o;27985:313::-;28098:4;28136:2;28125:9;28121:18;28113:26;;28185:9;28179:4;28175:20;28171:1;28160:9;28156:17;28149:47;28213:78;28286:4;28277:6;28213:78;:::i;:::-;28205:86;;27985:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1369200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_singleSideDeposit((address[],uint256,bytes32,address,address,address),uint256)": "infinite",
								"_singleSideWithdraw((address[],uint256,bytes32,address,address,address),uint256)": "infinite",
								"balVault()": "infinite",
								"routeDeposit(address,(address[],uint256,bytes32,address,address,address),uint256)": "infinite"
							},
							"internal": {
								"_approveIfNeeded(address,address)": "infinite",
								"_depositLPToVault(address,address,address)": "infinite",
								"_exitPool(contract IAsset[] memory,uint256,uint256,bytes32)": "infinite",
								"_joinPool(contract IAsset[] memory,uint256,uint256,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 910,
									"end": 980,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 963,
									"end": 972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 952,
									"end": 972,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 952,
									"end": 972,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 952,
									"end": 972,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 952,
									"end": 972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 952,
									"end": 972,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 952,
									"end": 972,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 952,
									"end": 972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 952,
									"end": 972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 952,
									"end": 972,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 952,
									"end": 972,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 910,
									"end": 980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1376"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 5020,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a84b23eb5c3b925ef107490915a93d32f6b7de56f7a8dedb6fbb2f33286a0aa64736f6c634300080d0033",
									".code": [
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "E6335E6"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "77ABA213"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "9CBCF4C7"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "BFBD3808"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 5020,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2052,
											"end": 2080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2114,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2101,
											"end": 2114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2052,
											"end": 2115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2052,
											"end": 2115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2136,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2153,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2153,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2126,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2232,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2199,
											"end": 2232,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2232,
											"name": "PUSH",
											"source": 7,
											"value": "853828B6"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2274,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2302,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2302,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2323,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2245,
											"end": 2324,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2324,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2245,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2332,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1376"
										},
										{
											"begin": 376,
											"end": 409,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 409,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1267,
											"end": 1285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1285,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1286,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1324,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1324,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1324,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1340,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1340,
											"end": 1375,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1340,
											"end": 1375,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1340,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1298,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1481,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1655,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1674,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1674,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1675,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1726,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1740,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1743,
											"end": 1749,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1698,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1771,
											"end": 1778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1790,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1807,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1839,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1839,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1895,
											"end": 1902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1934,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1944,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1927,
											"end": 1944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1877,
											"end": 1945,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1945,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1877,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1953,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1219,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 967,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1136,
											"end": 1141,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1193,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1166,
											"end": 1193,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1166,
											"end": 1193,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1199,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1203,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1116,
											"end": 1212,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1212,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1116,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1219,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4075,
											"end": 5015,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4075,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4382,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4405,
											"end": 4429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4518,
											"end": 4531,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4559,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4559,
											"end": 4600,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4559,
											"end": 4600,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4559,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4639,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4687,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4650,
											"end": 4671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4714,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4764,
											"end": 4769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4761,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4736,
											"end": 4761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4904,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1376"
										},
										{
											"begin": 4885,
											"end": 4914,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4914,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4914,
											"name": "PUSH",
											"source": 7,
											"value": "8BDB3913"
										},
										{
											"begin": 4915,
											"end": 4926,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4940,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4961,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4971,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 5015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 5015,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3149,
											"end": 4067,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3149,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3273,
											"end": 3291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3438,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3477,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3499,
											"end": 3519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3523,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3499,
											"end": 3523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3499,
											"end": 3523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3657,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3657,
											"end": 3698,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3698,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3657,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3737,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3748,
											"end": 3768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3780,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3856,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3829,
											"end": 3856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3951,
											"end": 3959,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1376"
										},
										{
											"begin": 3961,
											"end": 3966,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3914,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3925,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3926,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3950,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3950,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 3877,
											"end": 3950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3877,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 3997,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1376"
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "PUSH",
											"source": 7,
											"value": "B95CAC28"
										},
										{
											"begin": 4008,
											"end": 4019,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4033,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4048,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4051,
											"end": 4058,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 4067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3149,
											"end": 4067,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2344,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2344,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2479,
											"end": 2484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2488,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2462,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2574,
											"name": "PUSH",
											"source": 7,
											"value": "DE5F6268"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2711,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2680,
											"end": 2699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2680,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2751,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 3950,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 4023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2099,
											"end": 2420,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2099,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2264,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 2283,
											"end": 2287,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2297,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 2366,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2366,
											"end": 2388,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2411,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2316,
											"end": 2413,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2316,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2316,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2420,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2759,
											"end": 3049,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2759,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2837,
											"end": 2861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2837,
											"end": 2888,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2837,
											"end": 2888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2903,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 2957,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2899,
											"end": 3042,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3003,
											"end": 3010,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3002,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2974,
											"end": 3002,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2974,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2974,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 3042,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2899,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 3049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 3049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 3049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 3049,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 868,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 943,
											"end": 945,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 868,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4017,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4036,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4072,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4087,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4036,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4036,
											"end": 4088,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4036,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4036,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 4095,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5124,
											"end": 5136,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5181,
											"end": 5186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5177,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5186,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5186,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5148,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5239,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5348,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5358,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5363,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5352,
											"end": 5363,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5371,
											"end": 5376,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5382,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5417,
											"end": 5424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5400,
											"end": 5451,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5400,
											"end": 5451,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5400,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5451,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 5458,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1483,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6768,
											"end": 6780,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6796,
											"end": 6803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 7308,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6792,
											"end": 7308,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6836,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 7308,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6792,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6937,
											"end": 6947,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6937,
											"end": 6954,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6937,
											"end": 6958,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7298,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6933,
											"end": 7298,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7131,
											"end": 7141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7125,
											"end": 7142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7178,
											"end": 7188,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7174,
											"end": 7176,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7170,
											"end": 7189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7207,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7298,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6933,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7283,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 7314,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 457,
											"end": 559,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 552,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 529,
											"end": 543,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 457,
											"end": 559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 856,
											"end": 860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 822,
											"end": 862,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 952,
											"end": 962,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 949,
											"end": 971,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 913,
											"end": 947,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 910,
											"end": 972,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 907,
											"end": 995,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 907,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 907,
											"end": 995,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 794,
											"end": 1032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1272,
											"end": 1284,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1296,
											"end": 1413,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 1296,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1745,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 1419,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1511,
											"end": 1515,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1590,
											"end": 1620,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1587,
											"end": 1643,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1587,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 1587,
											"end": 1643,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1587,
											"end": 1643,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 1587,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1673,
											"end": 1677,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1653,
											"end": 1678,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1737,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1738,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1745,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1745,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1745,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1745,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1751,
											"end": 1868,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 1751,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1850,
											"end": 1862,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1993,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1940,
											"end": 1994,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 2072,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2061,
											"end": 2096,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2061,
											"end": 2096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2102,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2108,
											"end": 2219,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 2108,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2189,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 2189,
											"end": 2213,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2189,
											"end": 2213,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2189,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2219,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2219,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2219,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2225,
											"end": 2377,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 2225,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2313,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 2346,
											"end": 2351,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2313,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 2313,
											"end": 2352,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2313,
											"end": 2352,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 2313,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2353,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 2293,
											"end": 2371,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2371,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 2293,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2225,
											"end": 2377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2225,
											"end": 2377,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2383,
											"end": 2552,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 2383,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2489,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 2540,
											"end": 2545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 2498,
											"end": 2546,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2498,
											"end": 2546,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 2498,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2552,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2552,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2552,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2694,
											"end": 2699,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 2735,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2807,
											"end": 2813,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 2735,
											"end": 2814,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2814,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2735,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 2719,
											"end": 2815,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2719,
											"end": 2815,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 2719,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2815,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2898,
											"end": 2902,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 2903,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2939,
											"end": 2956,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2927,
											"end": 2957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2980,
											"end": 2983,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2972,
											"end": 2978,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2969,
											"end": 2984,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2966,
											"end": 3088,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2966,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 2966,
											"end": 3088,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2999,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 2999,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 2999,
											"end": 3078,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3078,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 2999,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2966,
											"end": 3088,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 2966,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3114,
											"end": 3120,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3131,
											"end": 3137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3126,
											"end": 3129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3123,
											"end": 3138,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3271,
											"end": 3281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3223,
											"end": 3288,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3315,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3148,
											"end": 3162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 3097,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3101,
											"end": 3122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2700,
											"end": 3338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2700,
											"end": 3338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2583,
											"end": 3338,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3369,
											"end": 3769,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 3369,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3455,
											"end": 3460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3507,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3485,
											"end": 3502,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3481,
											"end": 3508,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 3471,
											"end": 3593,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3593,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 3471,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 3636,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3654,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 3759,
											"end": 3762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3744,
											"end": 3748,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3732,
											"end": 3749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3654,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 3654,
											"end": 3763,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3763,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 3654,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3645,
											"end": 3763,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3645,
											"end": 3763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3461,
											"end": 3769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3769,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3769,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3769,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 3852,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 3775,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3846,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3830,
											"end": 3846,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3830,
											"end": 3846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3852,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3852,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3852,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3858,
											"end": 3980,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 3858,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3931,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 3949,
											"end": 3954,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3931,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 3931,
											"end": 3955,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3931,
											"end": 3955,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 3931,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3956,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 3911,
											"end": 3974,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3968,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3960,
											"end": 3972,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3974,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 3911,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3858,
											"end": 3980,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3858,
											"end": 3980,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3986,
											"end": 4125,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 3986,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4032,
											"end": 4037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4057,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4048,
											"end": 4077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4048,
											"end": 4077,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4086,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 4113,
											"end": 4118,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4086,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 4086,
											"end": 4119,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4119,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 4086,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4125,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4125,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4125,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4131,
											"end": 4208,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 4131,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4186,
											"end": 4202,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4186,
											"end": 4202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4131,
											"end": 4208,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4131,
											"end": 4208,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4131,
											"end": 4208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4131,
											"end": 4208,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4214,
											"end": 4336,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 4214,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 4305,
											"end": 4310,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 4287,
											"end": 4311,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4287,
											"end": 4311,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 4287,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4280,
											"end": 4285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4277,
											"end": 4312,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4267,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 4267,
											"end": 4330,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4326,
											"end": 4327,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4324,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4328,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4267,
											"end": 4330,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 4267,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4214,
											"end": 4336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4214,
											"end": 4336,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4342,
											"end": 4481,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 4342,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4388,
											"end": 4393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4413,
											"end": 4433,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4404,
											"end": 4433,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4404,
											"end": 4433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 4469,
											"end": 4474,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 4442,
											"end": 4475,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4442,
											"end": 4475,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 4442,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4342,
											"end": 4481,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4342,
											"end": 4481,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4342,
											"end": 4481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4342,
											"end": 4481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4342,
											"end": 4481,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4487,
											"end": 4609,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 4487,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4560,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 4578,
											"end": 4583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4560,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 4560,
											"end": 4584,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4584,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 4560,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4553,
											"end": 4558,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4550,
											"end": 4585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4540,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 4540,
											"end": 4603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4599,
											"end": 4600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4540,
											"end": 4603,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 4540,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4487,
											"end": 4609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4487,
											"end": 4609,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4615,
											"end": 4754,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 4615,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4661,
											"end": 4666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4699,
											"end": 4705,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4706,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4677,
											"end": 4706,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4677,
											"end": 4706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 4742,
											"end": 4747,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4754,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4754,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4754,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4798,
											"end": 6251,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 4798,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 4908,
											"end": 4917,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 4906,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4899,
											"end": 4918,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4895,
											"end": 4925,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5009,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 4892,
											"end": 5009,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 4928,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 5009,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 4892,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5027,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 5043,
											"end": 5047,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 5027,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 5027,
											"end": 5048,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5048,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 5027,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5018,
											"end": 5048,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5018,
											"end": 5048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5140,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5127,
											"end": 5144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5114,
											"end": 5145,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5164,
											"end": 5170,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5161,
											"end": 5191,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5158,
											"end": 5275,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5158,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 5158,
											"end": 5275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5194,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 5194,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 5194,
											"end": 5273,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5194,
											"end": 5273,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 5194,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5158,
											"end": 5275,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 5158,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5314,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 5399,
											"end": 5402,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5390,
											"end": 5396,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5379,
											"end": 5388,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5375,
											"end": 5397,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5314,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 5314,
											"end": 5403,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5314,
											"end": 5403,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 5314,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5307,
											"end": 5311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5305,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5296,
											"end": 5312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5289,
											"end": 5404,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5415,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5521,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 5566,
											"end": 5569,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5557,
											"end": 5563,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5542,
											"end": 5564,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5521,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 5521,
											"end": 5570,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5521,
											"end": 5570,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 5521,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5518,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5519,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5496,
											"end": 5571,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5425,
											"end": 5582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 5734,
											"end": 5737,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5714,
											"end": 5723,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5710,
											"end": 5732,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 5689,
											"end": 5738,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5689,
											"end": 5738,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 5689,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5686,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5664,
											"end": 5739,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5592,
											"end": 5750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5812,
											"end": 5814,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5853,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 5898,
											"end": 5901,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5889,
											"end": 5895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5887,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5853,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 5853,
											"end": 5902,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5853,
											"end": 5902,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 5853,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5850,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5839,
											"end": 5844,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5828,
											"end": 5903,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5760,
											"end": 5914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6016,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 6061,
											"end": 6064,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6041,
											"end": 6050,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6037,
											"end": 6059,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6016,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 6016,
											"end": 6065,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6065,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 6016,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6009,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6002,
											"end": 6007,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5998,
											"end": 6014,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5991,
											"end": 6066,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5924,
											"end": 6077,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6141,
											"end": 6144,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 6183,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 6228,
											"end": 6231,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6219,
											"end": 6225,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6208,
											"end": 6217,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6183,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 6183,
											"end": 6232,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6183,
											"end": 6232,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 6183,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 6169,
											"end": 6174,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6165,
											"end": 6181,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6087,
											"end": 6244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 6251,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 6251,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 6251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 6251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4798,
											"end": 6251,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6354,
											"end": 6360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6368,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6399,
											"end": 6408,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6390,
											"end": 6397,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6386,
											"end": 6409,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6414,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6379,
											"end": 6498,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6379,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 6379,
											"end": 6498,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6417,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 6417,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 6417,
											"end": 6496,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6417,
											"end": 6496,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 6417,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6379,
											"end": 6498,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 6379,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6563,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6550,
											"end": 6567,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6537,
											"end": 6568,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6595,
											"end": 6613,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6587,
											"end": 6593,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6584,
											"end": 6614,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6722,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 6796,
											"end": 6803,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6776,
											"end": 6785,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6772,
											"end": 6794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6722,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 6722,
											"end": 6804,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6722,
											"end": 6804,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 6722,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6712,
											"end": 6804,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6712,
											"end": 6804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6508,
											"end": 6814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 6924,
											"end": 6931,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6915,
											"end": 6921,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6904,
											"end": 6913,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6900,
											"end": 6922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6879,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 6879,
											"end": 6932,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6879,
											"end": 6932,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 6879,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6869,
											"end": 6932,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6869,
											"end": 6932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6824,
											"end": 6942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6257,
											"end": 6949,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6955,
											"end": 7073,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 6955,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7042,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7060,
											"end": 7065,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7042,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 7042,
											"end": 7066,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7042,
											"end": 7066,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7042,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7037,
											"end": 7040,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 7073,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 7073,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6955,
											"end": 7073,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7079,
											"end": 7301,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 7079,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7212,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7195,
											"end": 7213,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7187,
											"end": 7213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7187,
											"end": 7213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7223,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 7291,
											"end": 7292,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7276,
											"end": 7293,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7267,
											"end": 7273,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7223,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 7223,
											"end": 7294,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7223,
											"end": 7294,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 7223,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7079,
											"end": 7301,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7079,
											"end": 7301,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7079,
											"end": 7301,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7079,
											"end": 7301,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7079,
											"end": 7301,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7413,
											"end": 7419,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7480,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 7466,
											"end": 7475,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7464,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7449,
											"end": 7481,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7446,
											"end": 7565,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7446,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 7446,
											"end": 7565,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7484,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 7484,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 7484,
											"end": 7563,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7484,
											"end": 7563,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 7484,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7446,
											"end": 7565,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 7446,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7604,
											"end": 7605,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7665,
											"end": 7671,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7654,
											"end": 7663,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 7650,
											"end": 7672,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7629,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 7629,
											"end": 7682,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7629,
											"end": 7682,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7629,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7619,
											"end": 7682,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7619,
											"end": 7682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7575,
											"end": 7692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7759,
											"end": 7761,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 7757,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7744,
											"end": 7762,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7763,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7790,
											"end": 7808,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7782,
											"end": 7788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7779,
											"end": 7809,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7776,
											"end": 7893,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7776,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7776,
											"end": 7893,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7812,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7776,
											"end": 7893,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7776,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7917,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 7991,
											"end": 7998,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7971,
											"end": 7980,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 7967,
											"end": 7989,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7917,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 7917,
											"end": 7999,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7917,
											"end": 7999,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 7917,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7907,
											"end": 7999,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7907,
											"end": 7999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7702,
											"end": 8009,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8048,
											"end": 8050,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8074,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 8119,
											"end": 8126,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8110,
											"end": 8116,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8099,
											"end": 8108,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8095,
											"end": 8117,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8074,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 8074,
											"end": 8127,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8074,
											"end": 8127,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 8074,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8064,
											"end": 8127,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8064,
											"end": 8127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8019,
											"end": 8137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 8144,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8150,
											"end": 8330,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 8150,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8198,
											"end": 8275,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8276,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8295,
											"end": 8299,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 8292,
											"end": 8293,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8319,
											"end": 8323,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8309,
											"end": 8324,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8336,
											"end": 8454,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 8336,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8423,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 8441,
											"end": 8446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8423,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 8423,
											"end": 8447,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8423,
											"end": 8447,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 8423,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8418,
											"end": 8421,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8411,
											"end": 8448,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8336,
											"end": 8454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8336,
											"end": 8454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8336,
											"end": 8454,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8609,
											"end": 8613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8647,
											"end": 8649,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8636,
											"end": 8645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8632,
											"end": 8650,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8624,
											"end": 8650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8624,
											"end": 8650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8660,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 8728,
											"end": 8729,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8717,
											"end": 8726,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8713,
											"end": 8730,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8704,
											"end": 8710,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8660,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 8660,
											"end": 8731,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8660,
											"end": 8731,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 8660,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8741,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 8809,
											"end": 8811,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8798,
											"end": 8807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8785,
											"end": 8791,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8741,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 8741,
											"end": 8813,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8741,
											"end": 8813,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 8741,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8823,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 8891,
											"end": 8893,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8880,
											"end": 8889,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8867,
											"end": 8873,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8823,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 8823,
											"end": 8895,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8895,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 8823,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8460,
											"end": 8902,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8908,
											"end": 8993,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 8908,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8953,
											"end": 8960,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 8987,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8971,
											"end": 8987,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8971,
											"end": 8987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8993,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8993,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8999,
											"end": 9085,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 8999,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9034,
											"end": 9041,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9078,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 9067,
											"end": 9072,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9063,
											"end": 9079,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9052,
											"end": 9079,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9052,
											"end": 9079,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9085,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9085,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9091,
											"end": 9151,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 9091,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9119,
											"end": 9122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9145,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9133,
											"end": 9145,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9133,
											"end": 9145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9091,
											"end": 9151,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9091,
											"end": 9151,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9091,
											"end": 9151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9091,
											"end": 9151,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9157,
											"end": 9311,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 9157,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9213,
											"end": 9222,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9246,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 9262,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 9271,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 9297,
											"end": 9302,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9271,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 9271,
											"end": 9303,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9271,
											"end": 9303,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 9271,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9262,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 9262,
											"end": 9304,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9262,
											"end": 9304,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 9262,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9246,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 9246,
											"end": 9305,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9246,
											"end": 9305,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 9246,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9233,
											"end": 9305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9233,
											"end": 9305,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9157,
											"end": 9311,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9157,
											"end": 9311,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9157,
											"end": 9311,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9157,
											"end": 9311,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9317,
											"end": 9460,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 9317,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9410,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 9447,
											"end": 9452,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9410,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 9410,
											"end": 9453,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 9453,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 9410,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9405,
											"end": 9408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9398,
											"end": 9454,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9460,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9466,
											"end": 9580,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 9466,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9533,
											"end": 9539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9561,
											"end": 9573,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9551,
											"end": 9573,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9551,
											"end": 9573,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9466,
											"end": 9580,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9466,
											"end": 9580,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9466,
											"end": 9580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9466,
											"end": 9580,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9586,
											"end": 9770,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 9586,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9685,
											"end": 9696,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9725,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9707,
											"end": 9726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9754,
											"end": 9757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9750,
											"end": 9764,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9764,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9764,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9770,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9770,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9770,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9776,
											"end": 9908,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 9776,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9843,
											"end": 9847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9869,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9858,
											"end": 9869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9858,
											"end": 9869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9894,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9887,
											"end": 9901,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9879,
											"end": 9901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9879,
											"end": 9901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9776,
											"end": 9908,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9776,
											"end": 9908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9776,
											"end": 9908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9776,
											"end": 9908,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9914,
											"end": 10022,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 9914,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9991,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 10009,
											"end": 10014,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9991,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 9991,
											"end": 10015,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9991,
											"end": 10015,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 9991,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 9989,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9979,
											"end": 10016,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9914,
											"end": 10022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9914,
											"end": 10022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9914,
											"end": 10022,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10028,
											"end": 10207,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 10028,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10097,
											"end": 10107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10152,
											"end": 10158,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10194,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10187,
											"end": 10201,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10173,
											"end": 10201,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10173,
											"end": 10201,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10207,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10207,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10213,
											"end": 10326,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 10213,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10283,
											"end": 10287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10310,
											"end": 10313,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10298,
											"end": 10320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10298,
											"end": 10320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10213,
											"end": 10326,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10213,
											"end": 10326,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10213,
											"end": 10326,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10213,
											"end": 10326,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10362,
											"end": 11094,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 10362,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10481,
											"end": 10484,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10510,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 10558,
											"end": 10563,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10510,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 10510,
											"end": 10564,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10510,
											"end": 10564,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 10510,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10580,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 10659,
											"end": 10665,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10654,
											"end": 10657,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10580,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 10580,
											"end": 10666,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10666,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 10580,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10573,
											"end": 10666,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10573,
											"end": 10666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10690,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10690,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 10690,
											"end": 10746,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10690,
											"end": 10746,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 10690,
											"end": 10746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10769,
											"end": 10776,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10800,
											"end": 10801,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10810,
											"end": 10816,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10807,
											"end": 10808,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10804,
											"end": 10817,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10880,
											"end": 10893,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10913,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 10972,
											"end": 10975,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10957,
											"end": 10970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10913,
											"end": 10976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 10913,
											"end": 10976,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10913,
											"end": 10976,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 10913,
											"end": 10976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10976,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 10906,
											"end": 10976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 11052,
											"end": 11058,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 10999,
											"end": 11059,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10999,
											"end": 11059,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 10999,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10989,
											"end": 11059,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10989,
											"end": 11059,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10845,
											"end": 11069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10829,
											"end": 10830,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10825,
											"end": 10834,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10820,
											"end": 10834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10820,
											"end": 10834,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 10785,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10789,
											"end": 10803,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11085,
											"end": 11088,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11088,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 11094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 11094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 11094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 11094,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 11094,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 11094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 11094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 11094,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11305,
											"end": 11309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11343,
											"end": 11345,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11332,
											"end": 11341,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11346,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11320,
											"end": 11346,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11320,
											"end": 11346,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11356,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 11430,
											"end": 11431,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11419,
											"end": 11428,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11415,
											"end": 11432,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11406,
											"end": 11412,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11356,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 11356,
											"end": 11433,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11356,
											"end": 11433,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 11356,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11480,
											"end": 11489,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11470,
											"end": 11490,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11465,
											"end": 11467,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11454,
											"end": 11463,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11443,
											"end": 11491,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11508,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 11611,
											"end": 11615,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11602,
											"end": 11608,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11508,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 11508,
											"end": 11616,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11508,
											"end": 11616,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 11508,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11500,
											"end": 11616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11500,
											"end": 11616,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11626,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 11694,
											"end": 11696,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11692,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11679,
											"end": 11697,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11670,
											"end": 11676,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11626,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 11626,
											"end": 11698,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11626,
											"end": 11698,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 11626,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11100,
											"end": 11705,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11711,
											"end": 11829,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 11711,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11798,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 11816,
											"end": 11821,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11798,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 11798,
											"end": 11822,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11798,
											"end": 11822,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 11798,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11793,
											"end": 11796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11786,
											"end": 11823,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11829,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11835,
											"end": 11939,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 11835,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11880,
											"end": 11887,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11909,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 11927,
											"end": 11932,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11909,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 11909,
											"end": 11933,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11909,
											"end": 11933,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 11909,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11898,
											"end": 11933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11835,
											"end": 11939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11835,
											"end": 11939,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11835,
											"end": 11939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11835,
											"end": 11939,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11945,
											"end": 12087,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 11945,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12048,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 12074,
											"end": 12079,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12048,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 12048,
											"end": 12080,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12048,
											"end": 12080,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 12048,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12043,
											"end": 12046,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12036,
											"end": 12081,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11945,
											"end": 12087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11945,
											"end": 12087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11945,
											"end": 12087,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12093,
											"end": 12222,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 12093,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12175,
											"end": 12181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12209,
											"end": 12214,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12203,
											"end": 12215,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12215,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12193,
											"end": 12215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12222,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12222,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12222,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12228,
											"end": 12402,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 12228,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12317,
											"end": 12328,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12357,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12346,
											"end": 12349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12339,
											"end": 12358,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12391,
											"end": 12395,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12386,
											"end": 12389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12382,
											"end": 12396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12367,
											"end": 12396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12367,
											"end": 12396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12228,
											"end": 12402,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12228,
											"end": 12402,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12228,
											"end": 12402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12228,
											"end": 12402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12228,
											"end": 12402,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12408,
											"end": 12555,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 12408,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12490,
											"end": 12494,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12513,
											"end": 12516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12505,
											"end": 12516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12505,
											"end": 12516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12547,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12541,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12526,
											"end": 12548,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12526,
											"end": 12548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12408,
											"end": 12555,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12408,
											"end": 12555,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12408,
											"end": 12555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12408,
											"end": 12555,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12561,
											"end": 12703,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 12561,
											"end": 12703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12620,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12644,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 12662,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 12689,
											"end": 12694,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12662,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 12662,
											"end": 12696,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12662,
											"end": 12696,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 12662,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12644,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 12644,
											"end": 12697,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12644,
											"end": 12697,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 12644,
											"end": 12697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12631,
											"end": 12697,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12631,
											"end": 12697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12561,
											"end": 12703,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12561,
											"end": 12703,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12561,
											"end": 12703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12561,
											"end": 12703,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12709,
											"end": 12835,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 12709,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12768,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 12823,
											"end": 12828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12792,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 12792,
											"end": 12829,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12792,
											"end": 12829,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 12792,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12779,
											"end": 12829,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12779,
											"end": 12829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12709,
											"end": 12835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12709,
											"end": 12835,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12709,
											"end": 12835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12709,
											"end": 12835,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12841,
											"end": 12982,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 12841,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12906,
											"end": 12915,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12939,
											"end": 12976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 12970,
											"end": 12975,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12939,
											"end": 12976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 12939,
											"end": 12976,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12939,
											"end": 12976,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 12939,
											"end": 12976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12926,
											"end": 12976,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12926,
											"end": 12976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 12982,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 12982,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 12982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12841,
											"end": 12982,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12988,
											"end": 13139,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 12988,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13080,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 13126,
											"end": 13131,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13080,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 13080,
											"end": 13132,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13080,
											"end": 13132,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 13080,
											"end": 13132,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13075,
											"end": 13078,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13068,
											"end": 13133,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12988,
											"end": 13139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12988,
											"end": 13139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12988,
											"end": 13139,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13145,
											"end": 13354,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 13145,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13229,
											"end": 13239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13250,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 13307,
											"end": 13310,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13299,
											"end": 13305,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13250,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 13250,
											"end": 13311,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13250,
											"end": 13311,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 13250,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13343,
											"end": 13347,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13145,
											"end": 13354,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13145,
											"end": 13354,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13145,
											"end": 13354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13145,
											"end": 13354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13145,
											"end": 13354,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13360,
											"end": 13488,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 13360,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13445,
											"end": 13449,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13475,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13468,
											"end": 13482,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13482,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13460,
											"end": 13482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13360,
											"end": 13488,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13360,
											"end": 13488,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13360,
											"end": 13488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13360,
											"end": 13488,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13532,
											"end": 14319,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 13532,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13656,
											"end": 13659,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13685,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 13748,
											"end": 13753,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13685,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 13685,
											"end": 13754,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13685,
											"end": 13754,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 13685,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13770,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 13839,
											"end": 13845,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13834,
											"end": 13837,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13770,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 13770,
											"end": 13846,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13770,
											"end": 13846,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 13770,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13763,
											"end": 13846,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13763,
											"end": 13846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13870,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 13935,
											"end": 13940,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13870,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 13870,
											"end": 13941,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13870,
											"end": 13941,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 13870,
											"end": 13941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13964,
											"end": 13971,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13995,
											"end": 13996,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14005,
											"end": 14011,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14002,
											"end": 14003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13999,
											"end": 14012,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14081,
											"end": 14087,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14075,
											"end": 14088,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14108,
											"end": 14186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 14182,
											"end": 14185,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 14167,
											"end": 14180,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14108,
											"end": 14186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 14108,
											"end": 14186,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14108,
											"end": 14186,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 14108,
											"end": 14186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14101,
											"end": 14186,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 14101,
											"end": 14186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14209,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 14277,
											"end": 14283,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14209,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 14209,
											"end": 14284,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14209,
											"end": 14284,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 14209,
											"end": 14284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14199,
											"end": 14284,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14199,
											"end": 14284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14040,
											"end": 14294,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14027,
											"end": 14028,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14024,
											"end": 14025,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14020,
											"end": 14029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14015,
											"end": 14029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14015,
											"end": 14029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 13980,
											"end": 14294,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13984,
											"end": 13998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14313,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14303,
											"end": 14313,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14303,
											"end": 14313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13661,
											"end": 14319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13661,
											"end": 14319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13661,
											"end": 14319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13532,
											"end": 14319,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13532,
											"end": 14319,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13532,
											"end": 14319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13532,
											"end": 14319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13532,
											"end": 14319,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14325,
											"end": 14499,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 14325,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14414,
											"end": 14425,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14448,
											"end": 14454,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14443,
											"end": 14446,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14436,
											"end": 14455,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14488,
											"end": 14492,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14483,
											"end": 14486,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14479,
											"end": 14493,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14464,
											"end": 14493,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14464,
											"end": 14493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14325,
											"end": 14499,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14325,
											"end": 14499,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14325,
											"end": 14499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14325,
											"end": 14499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14325,
											"end": 14499,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14535,
											"end": 15247,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 14535,
											"end": 15247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14644,
											"end": 14647,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14673,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 14721,
											"end": 14726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14673,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 14673,
											"end": 14727,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14673,
											"end": 14727,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 14673,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14743,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 14812,
											"end": 14818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14807,
											"end": 14810,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14743,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 14743,
											"end": 14819,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14743,
											"end": 14819,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 14743,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14736,
											"end": 14819,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14736,
											"end": 14819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14843,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 14893,
											"end": 14898,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14843,
											"end": 14899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 14843,
											"end": 14899,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14843,
											"end": 14899,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 14843,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14922,
											"end": 14929,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14953,
											"end": 14954,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14963,
											"end": 14969,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14960,
											"end": 14961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14957,
											"end": 14970,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15039,
											"end": 15045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15033,
											"end": 15046,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 15125,
											"end": 15128,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 15110,
											"end": 15123,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 15066,
											"end": 15129,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15066,
											"end": 15129,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 15066,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15059,
											"end": 15129,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 15059,
											"end": 15129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15152,
											"end": 15212,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 15205,
											"end": 15211,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15152,
											"end": 15212,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 15152,
											"end": 15212,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15152,
											"end": 15212,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 15152,
											"end": 15212,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15142,
											"end": 15212,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15142,
											"end": 15212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14998,
											"end": 15222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14985,
											"end": 14986,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14982,
											"end": 14983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14978,
											"end": 14987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14973,
											"end": 14987,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14973,
											"end": 14987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 14938,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14942,
											"end": 14956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15238,
											"end": 15241,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15231,
											"end": 15241,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15231,
											"end": 15241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14649,
											"end": 15247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14649,
											"end": 15247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14649,
											"end": 15247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 15247,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 15247,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 15247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 15247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 15247,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15253,
											"end": 15351,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 15253,
											"end": 15351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15304,
											"end": 15310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15338,
											"end": 15343,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15332,
											"end": 15344,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15322,
											"end": 15344,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15322,
											"end": 15344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15253,
											"end": 15351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15253,
											"end": 15351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15253,
											"end": 15351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15253,
											"end": 15351,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15357,
											"end": 15515,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 15357,
											"end": 15515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15430,
											"end": 15441,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15464,
											"end": 15470,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15459,
											"end": 15462,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15452,
											"end": 15471,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15504,
											"end": 15508,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15499,
											"end": 15502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15495,
											"end": 15509,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15515,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15515,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15515,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15521,
											"end": 15828,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 15521,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15589,
											"end": 15590,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15613,
											"end": 15619,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15610,
											"end": 15611,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15607,
											"end": 15620,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15698,
											"end": 15699,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15693,
											"end": 15696,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15689,
											"end": 15700,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15683,
											"end": 15701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15680,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15674,
											"end": 15677,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15670,
											"end": 15681,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15663,
											"end": 15702,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15635,
											"end": 15637,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15632,
											"end": 15633,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15628,
											"end": 15638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15623,
											"end": 15638,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15623,
											"end": 15638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 15599,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15730,
											"end": 15736,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15727,
											"end": 15728,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15724,
											"end": 15737,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15822,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 15721,
											"end": 15822,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15810,
											"end": 15811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15801,
											"end": 15807,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15796,
											"end": 15799,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15792,
											"end": 15808,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15785,
											"end": 15812,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15822,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 15721,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15570,
											"end": 15828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15521,
											"end": 15828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15521,
											"end": 15828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15521,
											"end": 15828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15521,
											"end": 15828,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15834,
											"end": 16174,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 15834,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15910,
											"end": 15913,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 15970,
											"end": 15975,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15992,
											"end": 16052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 16045,
											"end": 16051,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16040,
											"end": 16043,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15992,
											"end": 16052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 15992,
											"end": 16052,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15992,
											"end": 16052,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 15992,
											"end": 16052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15985,
											"end": 16052,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15985,
											"end": 16052,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 16106,
											"end": 16112,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16101,
											"end": 16104,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16094,
											"end": 16098,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16087,
											"end": 16092,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16083,
											"end": 16099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 16061,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16138,
											"end": 16167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 16160,
											"end": 16166,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16138,
											"end": 16167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 16138,
											"end": 16167,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16138,
											"end": 16167,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 16138,
											"end": 16167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16133,
											"end": 16136,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16129,
											"end": 16168,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16122,
											"end": 16168,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16122,
											"end": 16168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15914,
											"end": 16174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16174,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16174,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16174,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16180,
											"end": 16270,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 16180,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16214,
											"end": 16221,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16257,
											"end": 16262,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16250,
											"end": 16263,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16243,
											"end": 16264,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16232,
											"end": 16264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16232,
											"end": 16264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16180,
											"end": 16270,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16180,
											"end": 16270,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16180,
											"end": 16270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16180,
											"end": 16270,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16276,
											"end": 16375,
											"name": "tag",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 16276,
											"end": 16375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16347,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 16362,
											"end": 16367,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16347,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 16347,
											"end": 16368,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16347,
											"end": 16368,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 16347,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16342,
											"end": 16345,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16335,
											"end": 16369,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16276,
											"end": 16375,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16276,
											"end": 16375,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16276,
											"end": 16375,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16459,
											"end": 17666,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 16459,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16594,
											"end": 16597,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16630,
											"end": 16634,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 16625,
											"end": 16628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16621,
											"end": 16635,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16719,
											"end": 16723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16712,
											"end": 16717,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16708,
											"end": 16724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16702,
											"end": 16725,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16772,
											"end": 16775,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16766,
											"end": 16770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16762,
											"end": 16776,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16755,
											"end": 16759,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16750,
											"end": 16753,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16746,
											"end": 16760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16739,
											"end": 16777,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16798,
											"end": 16916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 16911,
											"end": 16915,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16897,
											"end": 16909,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16798,
											"end": 16916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 16798,
											"end": 16916,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16798,
											"end": 16916,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 16798,
											"end": 16916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16790,
											"end": 16916,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16790,
											"end": 16916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16645,
											"end": 16927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17018,
											"end": 17022,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17011,
											"end": 17016,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17007,
											"end": 17023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17001,
											"end": 17024,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17071,
											"end": 17074,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17065,
											"end": 17069,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17061,
											"end": 17075,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17054,
											"end": 17058,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17049,
											"end": 17052,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17045,
											"end": 17059,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17038,
											"end": 17076,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17097,
											"end": 17200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 17195,
											"end": 17199,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17181,
											"end": 17193,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17097,
											"end": 17200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 17097,
											"end": 17200,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17097,
											"end": 17200,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 17097,
											"end": 17200,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17089,
											"end": 17200,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17089,
											"end": 17200,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16937,
											"end": 17211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17297,
											"end": 17301,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17290,
											"end": 17295,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17286,
											"end": 17302,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17280,
											"end": 17303,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17350,
											"end": 17353,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17344,
											"end": 17348,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17340,
											"end": 17354,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17333,
											"end": 17337,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17328,
											"end": 17331,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17324,
											"end": 17338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17317,
											"end": 17355,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17376,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 17442,
											"end": 17446,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17428,
											"end": 17440,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17376,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 17376,
											"end": 17447,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17376,
											"end": 17447,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 17376,
											"end": 17447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17368,
											"end": 17447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17368,
											"end": 17447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17553,
											"end": 17557,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 17546,
											"end": 17551,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17542,
											"end": 17558,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17536,
											"end": 17559,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17572,
											"end": 17629,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 17623,
											"end": 17627,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 17618,
											"end": 17621,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17614,
											"end": 17628,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17600,
											"end": 17612,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17572,
											"end": 17629,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 17572,
											"end": 17629,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17572,
											"end": 17629,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 17572,
											"end": 17629,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17468,
											"end": 17639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17656,
											"end": 17660,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17649,
											"end": 17660,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17649,
											"end": 17660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16599,
											"end": 17666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 17666,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 17666,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 17666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 17666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 17666,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17931,
											"end": 17935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17969,
											"end": 17972,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 17958,
											"end": 17967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17954,
											"end": 17973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17946,
											"end": 17973,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17946,
											"end": 17973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17983,
											"end": 18054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 18051,
											"end": 18052,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18040,
											"end": 18049,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18036,
											"end": 18053,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18027,
											"end": 18033,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17983,
											"end": 18054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 17983,
											"end": 18054,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17983,
											"end": 18054,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 17983,
											"end": 18054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18064,
											"end": 18136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 18132,
											"end": 18134,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18121,
											"end": 18130,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18117,
											"end": 18135,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18108,
											"end": 18114,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18064,
											"end": 18136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 18064,
											"end": 18136,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18064,
											"end": 18136,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 18064,
											"end": 18136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18146,
											"end": 18234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 18230,
											"end": 18232,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18219,
											"end": 18228,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18215,
											"end": 18233,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18206,
											"end": 18212,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18146,
											"end": 18234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 18146,
											"end": 18234,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18146,
											"end": 18234,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 18146,
											"end": 18234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18281,
											"end": 18290,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18275,
											"end": 18279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18271,
											"end": 18291,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18266,
											"end": 18268,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 18255,
											"end": 18264,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18251,
											"end": 18269,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18244,
											"end": 18292,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18309,
											"end": 18433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 18428,
											"end": 18432,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18419,
											"end": 18425,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18309,
											"end": 18433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 18309,
											"end": 18433,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18309,
											"end": 18433,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 18309,
											"end": 18433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18301,
											"end": 18433,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18301,
											"end": 18433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 18440,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18446,
											"end": 18558,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 18446,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18529,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 18545,
											"end": 18550,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18529,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 18529,
											"end": 18551,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18529,
											"end": 18551,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 18529,
											"end": 18551,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18524,
											"end": 18527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18517,
											"end": 18552,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18446,
											"end": 18558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18446,
											"end": 18558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18446,
											"end": 18558,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18759,
											"end": 18763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18797,
											"end": 18799,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 18786,
											"end": 18795,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18782,
											"end": 18800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18774,
											"end": 18800,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18774,
											"end": 18800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 18874,
											"end": 18875,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18863,
											"end": 18872,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18859,
											"end": 18876,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18850,
											"end": 18856,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 18810,
											"end": 18877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18924,
											"end": 18933,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18918,
											"end": 18922,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18914,
											"end": 18934,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18909,
											"end": 18911,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18898,
											"end": 18907,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18894,
											"end": 18912,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18887,
											"end": 18935,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18952,
											"end": 19060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 19055,
											"end": 19059,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19046,
											"end": 19052,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18952,
											"end": 19060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 18952,
											"end": 19060,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18952,
											"end": 19060,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 18952,
											"end": 19060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18944,
											"end": 19060,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18944,
											"end": 19060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19070,
											"end": 19142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 19138,
											"end": 19140,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19127,
											"end": 19136,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19123,
											"end": 19141,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19114,
											"end": 19120,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19070,
											"end": 19142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 19070,
											"end": 19142,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19070,
											"end": 19142,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 19070,
											"end": 19142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18564,
											"end": 19149,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19233,
											"end": 20441,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 19233,
											"end": 20441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19368,
											"end": 19371,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19404,
											"end": 19408,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 19399,
											"end": 19402,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19395,
											"end": 19409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19493,
											"end": 19497,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19486,
											"end": 19491,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19482,
											"end": 19498,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19476,
											"end": 19499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 19546,
											"end": 19549,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 19544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19536,
											"end": 19550,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19529,
											"end": 19533,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19524,
											"end": 19527,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19520,
											"end": 19534,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19513,
											"end": 19551,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 19685,
											"end": 19689,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19671,
											"end": 19683,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 19572,
											"end": 19690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19564,
											"end": 19690,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19564,
											"end": 19690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19419,
											"end": 19701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19791,
											"end": 19795,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19784,
											"end": 19789,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19780,
											"end": 19796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19774,
											"end": 19797,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 19844,
											"end": 19847,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19838,
											"end": 19842,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19834,
											"end": 19848,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19827,
											"end": 19831,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19822,
											"end": 19825,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19818,
											"end": 19832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19811,
											"end": 19849,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19870,
											"end": 19973,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 19968,
											"end": 19972,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19954,
											"end": 19966,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19870,
											"end": 19973,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 19870,
											"end": 19973,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19870,
											"end": 19973,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 19870,
											"end": 19973,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19862,
											"end": 19973,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19862,
											"end": 19973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19711,
											"end": 19984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20070,
											"end": 20074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20063,
											"end": 20068,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20059,
											"end": 20075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20053,
											"end": 20076,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20123,
											"end": 20126,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20117,
											"end": 20121,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20113,
											"end": 20127,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20106,
											"end": 20110,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20101,
											"end": 20104,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20097,
											"end": 20111,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20090,
											"end": 20128,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20149,
											"end": 20220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 20215,
											"end": 20219,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20201,
											"end": 20213,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20149,
											"end": 20220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 20149,
											"end": 20220,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20149,
											"end": 20220,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 20149,
											"end": 20220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20141,
											"end": 20220,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20141,
											"end": 20220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19994,
											"end": 20231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20328,
											"end": 20332,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 20321,
											"end": 20326,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20317,
											"end": 20333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20311,
											"end": 20334,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20347,
											"end": 20404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 20398,
											"end": 20402,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 20393,
											"end": 20396,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20389,
											"end": 20403,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20375,
											"end": 20387,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20347,
											"end": 20404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 20347,
											"end": 20404,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20347,
											"end": 20404,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 20347,
											"end": 20404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20241,
											"end": 20414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20431,
											"end": 20435,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 20424,
											"end": 20435,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20424,
											"end": 20435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19373,
											"end": 20441,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19233,
											"end": 20441,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19233,
											"end": 20441,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19233,
											"end": 20441,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19233,
											"end": 20441,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19233,
											"end": 20441,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20690,
											"end": 20694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20728,
											"end": 20731,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 20717,
											"end": 20726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20705,
											"end": 20732,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20705,
											"end": 20732,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20742,
											"end": 20813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 20810,
											"end": 20811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20799,
											"end": 20808,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 20812,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20786,
											"end": 20792,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20742,
											"end": 20813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 20742,
											"end": 20813,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20742,
											"end": 20813,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 20742,
											"end": 20813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20823,
											"end": 20895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 20891,
											"end": 20893,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20880,
											"end": 20889,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20876,
											"end": 20894,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20867,
											"end": 20873,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20823,
											"end": 20895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 20823,
											"end": 20895,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20823,
											"end": 20895,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 20823,
											"end": 20895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20905,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 20973,
											"end": 20975,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20962,
											"end": 20971,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20958,
											"end": 20976,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20949,
											"end": 20955,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20905,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 20905,
											"end": 20977,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20905,
											"end": 20977,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 20905,
											"end": 20977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21024,
											"end": 21033,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21018,
											"end": 21022,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21014,
											"end": 21034,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21009,
											"end": 21011,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 20998,
											"end": 21007,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20994,
											"end": 21012,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20987,
											"end": 21035,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21052,
											"end": 21176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 21171,
											"end": 21175,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21162,
											"end": 21168,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21052,
											"end": 21176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 21052,
											"end": 21176,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21052,
											"end": 21176,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 21052,
											"end": 21176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21044,
											"end": 21176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21044,
											"end": 21176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20447,
											"end": 21183,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21189,
											"end": 21332,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 21189,
											"end": 21332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21246,
											"end": 21251,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21277,
											"end": 21283,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21271,
											"end": 21284,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 21262,
											"end": 21284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21262,
											"end": 21284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21293,
											"end": 21326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 21320,
											"end": 21325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21293,
											"end": 21326,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 21293,
											"end": 21326,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21293,
											"end": 21326,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 21293,
											"end": 21326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21189,
											"end": 21332,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21189,
											"end": 21332,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21189,
											"end": 21332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21189,
											"end": 21332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21189,
											"end": 21332,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21338,
											"end": 21689,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 21338,
											"end": 21689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21408,
											"end": 21414,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21457,
											"end": 21459,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21445,
											"end": 21454,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21436,
											"end": 21443,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21432,
											"end": 21455,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21428,
											"end": 21460,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 21425,
											"end": 21544,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21425,
											"end": 21544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 21425,
											"end": 21544,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21463,
											"end": 21542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 21463,
											"end": 21542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 21463,
											"end": 21542,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21463,
											"end": 21542,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 21463,
											"end": 21542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21425,
											"end": 21544,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 21425,
											"end": 21544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21583,
											"end": 21584,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21608,
											"end": 21672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 21664,
											"end": 21671,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21655,
											"end": 21661,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21644,
											"end": 21653,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21640,
											"end": 21662,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21608,
											"end": 21672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 21608,
											"end": 21672,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21608,
											"end": 21672,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 21608,
											"end": 21672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21598,
											"end": 21672,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21598,
											"end": 21672,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21554,
											"end": 21682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21338,
											"end": 21689,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21338,
											"end": 21689,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21338,
											"end": 21689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21338,
											"end": 21689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21338,
											"end": 21689,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21695,
											"end": 21811,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 21695,
											"end": 21811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21765,
											"end": 21786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 21780,
											"end": 21785,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21765,
											"end": 21786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 21765,
											"end": 21786,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21765,
											"end": 21786,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 21765,
											"end": 21786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21758,
											"end": 21763,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21755,
											"end": 21787,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 21745,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 21745,
											"end": 21805,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21801,
											"end": 21802,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21798,
											"end": 21799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21791,
											"end": 21803,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21745,
											"end": 21805,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 21745,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21695,
											"end": 21811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21695,
											"end": 21811,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21817,
											"end": 21954,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 21817,
											"end": 21954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21871,
											"end": 21876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21902,
											"end": 21908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21896,
											"end": 21909,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 21887,
											"end": 21909,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21887,
											"end": 21909,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21918,
											"end": 21948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 21942,
											"end": 21947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21918,
											"end": 21948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 21918,
											"end": 21948,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21918,
											"end": 21948,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 21918,
											"end": 21948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21817,
											"end": 21954,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21817,
											"end": 21954,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21817,
											"end": 21954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21817,
											"end": 21954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21817,
											"end": 21954,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21960,
											"end": 22305,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 21960,
											"end": 22305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22027,
											"end": 22033,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22076,
											"end": 22078,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22064,
											"end": 22073,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22055,
											"end": 22062,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22051,
											"end": 22074,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22047,
											"end": 22079,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22044,
											"end": 22163,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 22044,
											"end": 22163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 22044,
											"end": 22163,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22082,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 22082,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 22082,
											"end": 22161,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22082,
											"end": 22161,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 22082,
											"end": 22161,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22044,
											"end": 22163,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 22044,
											"end": 22163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22202,
											"end": 22203,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22227,
											"end": 22288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 22280,
											"end": 22287,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22271,
											"end": 22277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22260,
											"end": 22269,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22256,
											"end": 22278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22227,
											"end": 22288,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 22227,
											"end": 22288,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22227,
											"end": 22288,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 22227,
											"end": 22288,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22217,
											"end": 22288,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22217,
											"end": 22288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22173,
											"end": 22298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21960,
											"end": 22305,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21960,
											"end": 22305,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21960,
											"end": 22305,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21960,
											"end": 22305,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21960,
											"end": 22305,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22311,
											"end": 22480,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 22311,
											"end": 22480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22395,
											"end": 22406,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22429,
											"end": 22435,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22424,
											"end": 22427,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22417,
											"end": 22436,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22469,
											"end": 22473,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22464,
											"end": 22467,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22460,
											"end": 22474,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22445,
											"end": 22474,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22445,
											"end": 22474,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22311,
											"end": 22480,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22311,
											"end": 22480,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22311,
											"end": 22480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22311,
											"end": 22480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22311,
											"end": 22480,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22486,
											"end": 22715,
											"name": "tag",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 22486,
											"end": 22715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22626,
											"end": 22660,
											"name": "PUSH",
											"source": 14,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 22622,
											"end": 22623,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22614,
											"end": 22620,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22610,
											"end": 22624,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22603,
											"end": 22661,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22695,
											"end": 22707,
											"name": "PUSH",
											"source": 14,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 22690,
											"end": 22692,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22682,
											"end": 22688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22678,
											"end": 22693,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22671,
											"end": 22708,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22486,
											"end": 22715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22486,
											"end": 22715,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22721,
											"end": 23087,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 22721,
											"end": 23087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22863,
											"end": 22866,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22884,
											"end": 22951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 22948,
											"end": 22950,
											"name": "PUSH",
											"source": 14,
											"value": "2A"
										},
										{
											"begin": 22943,
											"end": 22946,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22884,
											"end": 22951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 22884,
											"end": 22951,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22884,
											"end": 22951,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 22884,
											"end": 22951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 22951,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 22951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22960,
											"end": 23053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 23049,
											"end": 23052,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22960,
											"end": 23053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 22960,
											"end": 23053,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22960,
											"end": 23053,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 22960,
											"end": 23053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23078,
											"end": 23080,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23073,
											"end": 23076,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23069,
											"end": 23081,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23062,
											"end": 23081,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23062,
											"end": 23081,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22721,
											"end": 23087,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22721,
											"end": 23087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22721,
											"end": 23087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22721,
											"end": 23087,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23093,
											"end": 23512,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 23093,
											"end": 23512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23259,
											"end": 23263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23297,
											"end": 23299,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23286,
											"end": 23295,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23282,
											"end": 23300,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23300,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23300,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23346,
											"end": 23355,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23340,
											"end": 23344,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23336,
											"end": 23356,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23332,
											"end": 23333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23321,
											"end": 23330,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23317,
											"end": 23334,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23310,
											"end": 23357,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23374,
											"end": 23505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 23500,
											"end": 23504,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23374,
											"end": 23505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 23374,
											"end": 23505,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23374,
											"end": 23505,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 23374,
											"end": 23505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23366,
											"end": 23505,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23366,
											"end": 23505,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23093,
											"end": 23512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23093,
											"end": 23512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23093,
											"end": 23512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23093,
											"end": 23512,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23639,
											"end": 23643,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23677,
											"end": 23679,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23666,
											"end": 23675,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23662,
											"end": 23680,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23654,
											"end": 23680,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23654,
											"end": 23680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23690,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 23758,
											"end": 23759,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23747,
											"end": 23756,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23743,
											"end": 23760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23734,
											"end": 23740,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23690,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 23690,
											"end": 23761,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23690,
											"end": 23761,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 23690,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23771,
											"end": 23843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 23839,
											"end": 23841,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23828,
											"end": 23837,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23824,
											"end": 23842,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23815,
											"end": 23821,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23771,
											"end": 23843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 23771,
											"end": 23843,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23771,
											"end": 23843,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 23771,
											"end": 23843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23518,
											"end": 23850,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23856,
											"end": 24036,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 23856,
											"end": 24036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23904,
											"end": 23981,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23901,
											"end": 23902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23894,
											"end": 23982,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24001,
											"end": 24005,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 23998,
											"end": 23999,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 23991,
											"end": 24006,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24025,
											"end": 24029,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 24022,
											"end": 24023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24015,
											"end": 24030,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 24042,
											"end": 24347,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 24042,
											"end": 24347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24082,
											"end": 24085,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 24119,
											"end": 24120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 24101,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24096,
											"end": 24121,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24096,
											"end": 24121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24135,
											"end": 24155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 24153,
											"end": 24154,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24135,
											"end": 24155,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 24135,
											"end": 24155,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24135,
											"end": 24155,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 24135,
											"end": 24155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24130,
											"end": 24155,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24130,
											"end": 24155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24289,
											"end": 24290,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24221,
											"end": 24287,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24217,
											"end": 24291,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24214,
											"end": 24215,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24211,
											"end": 24292,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 24208,
											"end": 24315,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 24208,
											"end": 24315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 24208,
											"end": 24315,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 24295,
											"end": 24313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 24295,
											"end": 24313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 24295,
											"end": 24313,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24295,
											"end": 24313,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 24295,
											"end": 24313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24208,
											"end": 24315,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 24208,
											"end": 24315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24339,
											"end": 24340,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24336,
											"end": 24337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24332,
											"end": 24341,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24325,
											"end": 24341,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24325,
											"end": 24341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24042,
											"end": 24347,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24042,
											"end": 24347,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24042,
											"end": 24347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24042,
											"end": 24347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24042,
											"end": 24347,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24474,
											"end": 24478,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24512,
											"end": 24514,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 24501,
											"end": 24510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24497,
											"end": 24515,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24489,
											"end": 24515,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24489,
											"end": 24515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24525,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 24593,
											"end": 24594,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24582,
											"end": 24591,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24578,
											"end": 24595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24569,
											"end": 24575,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24525,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 24525,
											"end": 24596,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24525,
											"end": 24596,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 24525,
											"end": 24596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24606,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 24674,
											"end": 24676,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24663,
											"end": 24672,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24659,
											"end": 24677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24650,
											"end": 24656,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24606,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 24606,
											"end": 24678,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24606,
											"end": 24678,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 24606,
											"end": 24678,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24353,
											"end": 24685,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 24691,
											"end": 24916,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 24691,
											"end": 24916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24831,
											"end": 24865,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 24827,
											"end": 24828,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24819,
											"end": 24825,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24815,
											"end": 24829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24808,
											"end": 24866,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24900,
											"end": 24908,
											"name": "PUSH",
											"source": 14,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24895,
											"end": 24897,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24887,
											"end": 24893,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24883,
											"end": 24898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24876,
											"end": 24909,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24691,
											"end": 24916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24691,
											"end": 24916,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25064,
											"end": 25067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 25149,
											"end": 25151,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 25144,
											"end": 25147,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25078,
											"end": 25152,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25078,
											"end": 25152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 25250,
											"end": 25253,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25279,
											"end": 25281,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 25274,
											"end": 25277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25270,
											"end": 25282,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25263,
											"end": 25282,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25263,
											"end": 25282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25460,
											"end": 25464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25498,
											"end": 25500,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25487,
											"end": 25496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25483,
											"end": 25501,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25475,
											"end": 25501,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25475,
											"end": 25501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25547,
											"end": 25556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25541,
											"end": 25545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25537,
											"end": 25557,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25533,
											"end": 25534,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25522,
											"end": 25531,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25518,
											"end": 25535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25511,
											"end": 25558,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 25701,
											"end": 25705,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25567,
											"end": 25706,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25567,
											"end": 25706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 25719,
											"end": 25898,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 25719,
											"end": 25898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25859,
											"end": 25890,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 25855,
											"end": 25856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25847,
											"end": 25853,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25843,
											"end": 25857,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25836,
											"end": 25891,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25719,
											"end": 25898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25719,
											"end": 25898,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 25904,
											"end": 26270,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 25904,
											"end": 26270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26046,
											"end": 26049,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26067,
											"end": 26134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 26131,
											"end": 26133,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 26126,
											"end": 26129,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26067,
											"end": 26134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 26067,
											"end": 26134,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 26067,
											"end": 26134,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 26067,
											"end": 26134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26060,
											"end": 26134,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26060,
											"end": 26134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26143,
											"end": 26236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 26232,
											"end": 26235,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26143,
											"end": 26236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 26143,
											"end": 26236,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 26143,
											"end": 26236,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 26143,
											"end": 26236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26261,
											"end": 26263,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26256,
											"end": 26259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26252,
											"end": 26264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26245,
											"end": 26264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26245,
											"end": 26264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25904,
											"end": 26270,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25904,
											"end": 26270,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25904,
											"end": 26270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25904,
											"end": 26270,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 26276,
											"end": 26695,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 26276,
											"end": 26695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26442,
											"end": 26446,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26480,
											"end": 26482,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26469,
											"end": 26478,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26465,
											"end": 26483,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26457,
											"end": 26483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26457,
											"end": 26483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26529,
											"end": 26538,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26523,
											"end": 26527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26519,
											"end": 26539,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26515,
											"end": 26516,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26504,
											"end": 26513,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26500,
											"end": 26517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26493,
											"end": 26540,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26557,
											"end": 26688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 26683,
											"end": 26687,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26557,
											"end": 26688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 26557,
											"end": 26688,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 26557,
											"end": 26688,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 26557,
											"end": 26688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26549,
											"end": 26688,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26549,
											"end": 26688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26276,
											"end": 26695,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26276,
											"end": 26695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26276,
											"end": 26695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26276,
											"end": 26695,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 26701,
											"end": 26848,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 26701,
											"end": 26848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26802,
											"end": 26813,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26839,
											"end": 26842,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26824,
											"end": 26842,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26824,
											"end": 26842,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26701,
											"end": 26848,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26701,
											"end": 26848,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26701,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26701,
											"end": 26848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26701,
											"end": 26848,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 26854,
											"end": 27227,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 26854,
											"end": 27227,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26958,
											"end": 26961,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26986,
											"end": 27024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 27018,
											"end": 27023,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26986,
											"end": 27024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 26986,
											"end": 27024,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 26986,
											"end": 27024,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 26986,
											"end": 27024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27040,
											"end": 27128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 27121,
											"end": 27127,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27116,
											"end": 27119,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27040,
											"end": 27128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 27040,
											"end": 27128,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 27040,
											"end": 27128,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 27040,
											"end": 27128,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27033,
											"end": 27128,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 27033,
											"end": 27128,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27137,
											"end": 27189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 27182,
											"end": 27188,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27177,
											"end": 27180,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27170,
											"end": 27174,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27163,
											"end": 27168,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27159,
											"end": 27175,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27137,
											"end": 27189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 27137,
											"end": 27189,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 27137,
											"end": 27189,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 27137,
											"end": 27189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27214,
											"end": 27220,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 27209,
											"end": 27212,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27205,
											"end": 27221,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27198,
											"end": 27221,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27198,
											"end": 27221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26962,
											"end": 27227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26854,
											"end": 27227,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26854,
											"end": 27227,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26854,
											"end": 27227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26854,
											"end": 27227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26854,
											"end": 27227,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 27233,
											"end": 27504,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 27233,
											"end": 27504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27363,
											"end": 27366,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27385,
											"end": 27478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 27474,
											"end": 27477,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27465,
											"end": 27471,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27385,
											"end": 27478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 27385,
											"end": 27478,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 27385,
											"end": 27478,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 27385,
											"end": 27478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27378,
											"end": 27478,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27378,
											"end": 27478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27495,
											"end": 27498,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27488,
											"end": 27498,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27488,
											"end": 27498,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27233,
											"end": 27504,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27233,
											"end": 27504,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27233,
											"end": 27504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27233,
											"end": 27504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27233,
											"end": 27504,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 27510,
											"end": 27609,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 27510,
											"end": 27609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27562,
											"end": 27568,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27596,
											"end": 27601,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27590,
											"end": 27602,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 27580,
											"end": 27602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27580,
											"end": 27602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27510,
											"end": 27609,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27510,
											"end": 27609,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27510,
											"end": 27609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27510,
											"end": 27609,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 27615,
											"end": 27979,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 27615,
											"end": 27979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27703,
											"end": 27706,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27731,
											"end": 27770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 27764,
											"end": 27769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27731,
											"end": 27770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 27731,
											"end": 27770,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 27731,
											"end": 27770,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 27731,
											"end": 27770,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27786,
											"end": 27857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 27850,
											"end": 27856,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27845,
											"end": 27848,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27786,
											"end": 27857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 27786,
											"end": 27857,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 27786,
											"end": 27857,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 27786,
											"end": 27857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27779,
											"end": 27857,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 27779,
											"end": 27857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27866,
											"end": 27918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 27911,
											"end": 27917,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27906,
											"end": 27909,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27899,
											"end": 27903,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27892,
											"end": 27897,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27888,
											"end": 27904,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27866,
											"end": 27918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 27866,
											"end": 27918,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 27866,
											"end": 27918,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 27866,
											"end": 27918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27943,
											"end": 27972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 27965,
											"end": 27971,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27943,
											"end": 27972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 27943,
											"end": 27972,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 27943,
											"end": 27972,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 27943,
											"end": 27972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27938,
											"end": 27941,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27934,
											"end": 27973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27927,
											"end": 27973,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27927,
											"end": 27973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27707,
											"end": 27979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 27979,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 27979,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 27979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 27979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 27979,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 27985,
											"end": 28298,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 27985,
											"end": 28298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28098,
											"end": 28102,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28136,
											"end": 28138,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28125,
											"end": 28134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28113,
											"end": 28139,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28113,
											"end": 28139,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28185,
											"end": 28194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28179,
											"end": 28183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28175,
											"end": 28195,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 28171,
											"end": 28172,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28160,
											"end": 28169,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28156,
											"end": 28173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28149,
											"end": 28196,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28213,
											"end": 28291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 28286,
											"end": 28290,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28277,
											"end": 28283,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28213,
											"end": 28291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 28213,
											"end": 28291,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 28213,
											"end": 28291,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 28213,
											"end": 28291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28205,
											"end": 28291,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28205,
											"end": 28291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27985,
											"end": 28298,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27985,
											"end": 28298,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27985,
											"end": 28298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27985,
											"end": 28298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27985,
											"end": 28298,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_singleSideDeposit((address[],uint256,bytes32,address,address,address),uint256)": "bfbd3808",
							"_singleSideWithdraw((address[],uint256,bytes32,address,address,address),uint256)": "0e6335e6",
							"balVault()": "77aba213",
							"routeDeposit(address,(address[],uint256,bytes32,address,address,address),uint256)": "9cbcf4c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_balVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"underlyings\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"beetsPoolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BeetsHelper.VaultParams\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_singleSideDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"underlyings\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"beetsPoolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BeetsHelper.VaultParams\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_singleSideWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"underlyings\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"beetsPoolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BeetsHelper.VaultParams\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"routeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"z80 and Eidolon\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BeetsHelper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SuperDepositor.sol\":\"BeetsHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb71b875e7f1b8ad082eb6ff83bca4bfa7d050476cc98fd39295826b654edfb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcec0617473fa22a0866d7daf25bf4d664a62902e49c4a158aef54c1e4348e8a\",\"dweb:/ipfs/QmPQetTKnLJBAQQrLKUWGVZwfp3VGmBhnqqJvmJTycM1jR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"SuperDepositor.sol\":{\"keccak256\":\"0xd1f0b3d1688fc325a050d888c5ba82b1424cbc790c7c60e79ccc90c64e8c10bb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://853f1ca9cdb25719a7bbeeff797e070e6c4c8c308490bb3f5eb6326baee50fc2\",\"dweb:/ipfs/QmRoEbcCSuhoNwoG6XngKGDNjboV5cqpr71gqxmP1KiyPm\"]},\"interfaces/IAsset.sol\":{\"keccak256\":\"0xff48319da762af24416ccb39a5aca47b4d6ee06e9e1007d209560f55cb21f50a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://815c8e0c66866fc425f2ca676800a3a18d67b74bb4815811f1500a122ba4ded8\",\"dweb:/ipfs/QmVVCvxqEkAb9CFGq6ZqZxQgWTqkgX47Eg3M4VViTUHaX8\"]},\"interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x517f3d9de85082dd40555d393ffbbee53a29335cfd33ae813c91165ef4d52ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df2f08d9b38124f41fd351c4cb6755219cd9ae0176488dd61a1b9280e032e41a\",\"dweb:/ipfs/QmUL5Fdsp4RviMYN6ZtfTfBMJKPh6suVpxfE9yDMv5aAmK\"]},\"interfaces/IBeetVault.sol\":{\"keccak256\":\"0x246b4ad8090c35fcd7b0ffbc966356795b28bb4b4a897c677a962bcfa729989d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1634823fa556e653cf83853fc7bcba57e4c719996e29d641f1d55a22d888d1a5\",\"dweb:/ipfs/QmVzs1cmnZpEMZDbP5SuxNoQNYrbQLpvELAGPGLHQYysgc\"]},\"interfaces/ISignaturesValidator.sol\":{\"keccak256\":\"0xbfab23cacf288d9575e136b16706e3289aed7898e9ac2d4fd854a1812bed4bb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://613443b184ac61b4dfbedc5402c90fa42b6aea838896890b345b4f5d6561b111\",\"dweb:/ipfs/QmRaVYaPPjp4La96XaRvXcmaTkkVQpYortNKyFGJicxGhF\"]},\"interfaces/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa97c7c41e0bf075552f83e02f7552c3903014107919039548474982b0434cde9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://600a808c3d7791ca8a605e46cc8c4a1b2ae7097b6ffeddeab191d73db0acfc1a\",\"dweb:/ipfs/QmRfLLMHWF1roGdconfHYEzGkCQfs5Y5ZmF6cudMes4rsk\"]},\"interfaces/IVault.sol\":{\"keccak256\":\"0x37e2e154014cdf1f4b157aecec29831116e0ded98113a31f4bb27ed3b955ea3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e20eecf8a1d052cdf10fc23ae788daa7e4931cad515e1a576fbfa7103180aaf\",\"dweb:/ipfs/QmVEShWxpyfLZiTRJ86DQgLdYrTbNkiEex5ehSFkUBBHqB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IAsset.sol": {
				"IAsset": {
					"abi": [],
					"devdoc": {
						"details": "This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IAsset.sol\":{\"keccak256\":\"0xff48319da762af24416ccb39a5aca47b4d6ee06e9e1007d209560f55cb21f50a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://815c8e0c66866fc425f2ca676800a3a18d67b74bb4815811f1500a122ba4ded8\",\"dweb:/ipfs/QmVVCvxqEkAb9CFGq6ZqZxQgWTqkgX47Eg3M4VViTUHaX8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IAuthorizer.sol": {
				"IAuthorizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "actionId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "where",
									"type": "address"
								}
							],
							"name": "canPerform",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"canPerform(bytes32,address,address)": {
								"details": "Returns true if `account` can perform the action described by `actionId` in the contract `where`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canPerform(bytes32,address,address)": "9be2a884"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x517f3d9de85082dd40555d393ffbbee53a29335cfd33ae813c91165ef4d52ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df2f08d9b38124f41fd351c4cb6755219cd9ae0176488dd61a1b9280e032e41a\",\"dweb:/ipfs/QmUL5Fdsp4RviMYN6ZtfTfBMJKPh6suVpxfE9yDMv5aAmK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IBeetVault.sol": {
				"IBeetVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IAuthorizer",
									"name": "newAuthorizer",
									"type": "address"
								}
							],
							"name": "AuthorizerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20Upgradeable",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ExternalBalanceTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20Upgradeable",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "delta",
									"type": "int256"
								}
							],
							"name": "InternalBalanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "PausedStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20Upgradeable[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "int256[]",
									"name": "deltas",
									"type": "int256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "protocolFeeAmounts",
									"type": "uint256[]"
								}
							],
							"name": "PoolBalanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "assetManager",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20Upgradeable",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "cashDelta",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "managedDelta",
									"type": "int256"
								}
							],
							"name": "PoolBalanceManaged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IBeetVault.PoolSpecialization",
									"name": "specialization",
									"type": "uint8"
								}
							],
							"name": "PoolRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "RelayerApprovalChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20Upgradeable",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20Upgradeable",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20Upgradeable[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "TokensDeregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20Upgradeable[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "assetManagers",
									"type": "address[]"
								}
							],
							"name": "TokensRegistered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "enum IBeetVault.SwapKind",
									"name": "kind",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "assetInIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "assetOutIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										}
									],
									"internalType": "struct IBeetVault.BatchSwapStep[]",
									"name": "swaps",
									"type": "tuple[]"
								},
								{
									"internalType": "contract IAsset[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IBeetVault.FundManagement",
									"name": "funds",
									"type": "tuple"
								},
								{
									"internalType": "int256[]",
									"name": "limits",
									"type": "int256[]"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "batchSwap",
							"outputs": [
								{
									"internalType": "int256[]",
									"name": "",
									"type": "int256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "contract IERC20Upgradeable[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "deregisterTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IAsset[]",
											"name": "assets",
											"type": "address[]"
										},
										{
											"internalType": "uint256[]",
											"name": "minAmountsOut",
											"type": "uint256[]"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IBeetVault.ExitPoolRequest",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "exitPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAuthorizer",
							"outputs": [
								{
									"internalType": "contract IAuthorizer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDomainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "getInternalBalance",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getNextNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPausedState",
							"outputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "pauseWindowEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bufferPeriodEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "enum IBeetVault.PoolSpecialization",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPoolTokenInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "managed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastChangeBlock",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "assetManager",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								}
							],
							"name": "getPoolTokens",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "balances",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "lastChangeBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								}
							],
							"name": "hasApprovedRelayer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IAsset[]",
											"name": "assets",
											"type": "address[]"
										},
										{
											"internalType": "uint256[]",
											"name": "maxAmountsIn",
											"type": "uint256[]"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IBeetVault.JoinPoolRequest",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "joinPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum IBeetVault.PoolBalanceOpKind",
											"name": "kind",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "contract IERC20Upgradeable",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IBeetVault.PoolBalanceOp[]",
									"name": "ops",
									"type": "tuple[]"
								}
							],
							"name": "managePoolBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum IBeetVault.UserBalanceOpKind",
											"name": "kind",
											"type": "uint8"
										},
										{
											"internalType": "contract IAsset",
											"name": "asset",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										}
									],
									"internalType": "struct IBeetVault.UserBalanceOp[]",
									"name": "ops",
									"type": "tuple[]"
								}
							],
							"name": "manageUserBalance",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum IBeetVault.SwapKind",
									"name": "kind",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "assetInIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "assetOutIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										}
									],
									"internalType": "struct IBeetVault.BatchSwapStep[]",
									"name": "swaps",
									"type": "tuple[]"
								},
								{
									"internalType": "contract IAsset[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IBeetVault.FundManagement",
									"name": "funds",
									"type": "tuple"
								}
							],
							"name": "queryBatchSwap",
							"outputs": [
								{
									"internalType": "int256[]",
									"name": "assetDeltas",
									"type": "int256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum IBeetVault.PoolSpecialization",
									"name": "specialization",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "poolId",
									"type": "bytes32"
								},
								{
									"internalType": "contract IERC20Upgradeable[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "assetManagers",
									"type": "address[]"
								}
							],
							"name": "registerTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IAuthorizer",
									"name": "newAuthorizer",
									"type": "address"
								}
							],
							"name": "setAuthorizer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setRelayerApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "poolId",
											"type": "bytes32"
										},
										{
											"internalType": "enum IBeetVault.SwapKind",
											"name": "kind",
											"type": "uint8"
										},
										{
											"internalType": "contract IAsset",
											"name": "assetIn",
											"type": "address"
										},
										{
											"internalType": "contract IAsset",
											"name": "assetOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "userData",
											"type": "bytes"
										}
									],
									"internalType": "struct IBeetVault.SingleSwap",
									"name": "singleSwap",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fromInternalBalance",
											"type": "bool"
										},
										{
											"internalType": "address payable",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "toInternalBalance",
											"type": "bool"
										}
									],
									"internalType": "struct IBeetVault.FundManagement",
									"name": "funds",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AuthorizerChanged(address)": {
								"details": "Emitted when a new authorizer is set by `setAuthorizer`."
							},
							"ExternalBalanceTransfer(address,address,address,uint256)": {
								"details": "Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."
							},
							"InternalBalanceChanged(address,address,int256)": {
								"details": "Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address."
							},
							"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])": {
								"details": "Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."
							},
							"PoolBalanceManaged(bytes32,address,address,int256,int256)": {
								"details": "Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."
							},
							"PoolRegistered(bytes32,address,uint8)": {
								"details": "Emitted when a Pool is registered by calling `registerPool`."
							},
							"RelayerApprovalChanged(address,address,bool)": {
								"details": "Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."
							},
							"Swap(bytes32,address,address,uint256,uint256)": {
								"details": "Emitted for each individual swap performed by `swap` or `batchSwap`."
							},
							"TokensDeregistered(bytes32,address[])": {
								"details": "Emitted when a Pool deregisters tokens by calling `deregisterTokens`."
							},
							"TokensRegistered(bytes32,address[],address[])": {
								"details": "Emitted when a Pool registers tokens by calling `registerTokens`."
							}
						},
						"kind": "dev",
						"methods": {
							"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
								"details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
							},
							"deregisterTokens(bytes32,address[])": {
								"details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
							},
							"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
								"details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
							},
							"getAuthorizer()": {
								"details": "Returns the Vault's Authorizer."
							},
							"getDomainSeparator()": {
								"details": "Returns the EIP712 domain separator."
							},
							"getInternalBalance(address,address[])": {
								"details": "Returns `user`'s Internal Balance for a set of tokens."
							},
							"getNextNonce(address)": {
								"details": "Returns the next nonce used by an address to sign messages."
							},
							"getPausedState()": {
								"details": "Returns the current paused state."
							},
							"getPool(bytes32)": {
								"details": "Returns a Pool's contract address and specialization setting."
							},
							"getPoolTokenInfo(bytes32,address)": {
								"details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
							},
							"getPoolTokens(bytes32)": {
								"details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
							},
							"hasApprovedRelayer(address,address)": {
								"details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
							},
							"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
								"details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
							},
							"managePoolBalance((uint8,bytes32,address,uint256)[])": {
								"details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
							},
							"manageUserBalance((uint8,address,uint256,address,address)[])": {
								"details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
							},
							"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
								"details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
							},
							"registerPool(uint8)": {
								"details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
							},
							"registerTokens(bytes32,address[],address[])": {
								"details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
							},
							"setAuthorizer(address)": {
								"details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
							},
							"setPaused(bool)": {
								"details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
							},
							"setRelayerApproval(address,address,bool)": {
								"details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
							},
							"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
								"details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
							"deregisterTokens(bytes32,address[])": "7d3aeb96",
							"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
							"getAuthorizer()": "aaabadc5",
							"getDomainSeparator()": "ed24911d",
							"getInternalBalance(address,address[])": "0f5a6efa",
							"getNextNonce(address)": "90193b7c",
							"getPausedState()": "1c0de051",
							"getPool(bytes32)": "f6c00927",
							"getPoolTokenInfo(bytes32,address)": "b05f8e48",
							"getPoolTokens(bytes32)": "f94d4668",
							"hasApprovedRelayer(address,address)": "fec90d72",
							"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
							"managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
							"manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
							"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
							"registerPool(uint8)": "09b2760f",
							"registerTokens(bytes32,address[],address[])": "66a9c7d2",
							"setAuthorizer(address)": "058a628f",
							"setPaused(bool)": "16c38b3c",
							"setRelayerApproval(address,address,bool)": "fa6e671d",
							"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IBeetVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum IBeetVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IBeetVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBeetVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20Upgradeable[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBeetVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IBeetVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBeetVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IBeetVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBeetVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IBeetVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IBeetVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IBeetVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IBeetVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBeetVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IBeetVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20Upgradeable[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IBeetVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IBeetVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBeetVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IBeetVault.sol\":\"IBeetVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb71b875e7f1b8ad082eb6ff83bca4bfa7d050476cc98fd39295826b654edfb46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcec0617473fa22a0866d7daf25bf4d664a62902e49c4a158aef54c1e4348e8a\",\"dweb:/ipfs/QmPQetTKnLJBAQQrLKUWGVZwfp3VGmBhnqqJvmJTycM1jR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"interfaces/IAsset.sol\":{\"keccak256\":\"0xff48319da762af24416ccb39a5aca47b4d6ee06e9e1007d209560f55cb21f50a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://815c8e0c66866fc425f2ca676800a3a18d67b74bb4815811f1500a122ba4ded8\",\"dweb:/ipfs/QmVVCvxqEkAb9CFGq6ZqZxQgWTqkgX47Eg3M4VViTUHaX8\"]},\"interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x517f3d9de85082dd40555d393ffbbee53a29335cfd33ae813c91165ef4d52ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df2f08d9b38124f41fd351c4cb6755219cd9ae0176488dd61a1b9280e032e41a\",\"dweb:/ipfs/QmUL5Fdsp4RviMYN6ZtfTfBMJKPh6suVpxfE9yDMv5aAmK\"]},\"interfaces/IBeetVault.sol\":{\"keccak256\":\"0x246b4ad8090c35fcd7b0ffbc966356795b28bb4b4a897c677a962bcfa729989d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1634823fa556e653cf83853fc7bcba57e4c719996e29d641f1d55a22d888d1a5\",\"dweb:/ipfs/QmVzs1cmnZpEMZDbP5SuxNoQNYrbQLpvELAGPGLHQYysgc\"]},\"interfaces/ISignaturesValidator.sol\":{\"keccak256\":\"0xbfab23cacf288d9575e136b16706e3289aed7898e9ac2d4fd854a1812bed4bb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://613443b184ac61b4dfbedc5402c90fa42b6aea838896890b345b4f5d6561b111\",\"dweb:/ipfs/QmRaVYaPPjp4La96XaRvXcmaTkkVQpYortNKyFGJicxGhF\"]},\"interfaces/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa97c7c41e0bf075552f83e02f7552c3903014107919039548474982b0434cde9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://600a808c3d7791ca8a605e46cc8c4a1b2ae7097b6ffeddeab191d73db0acfc1a\",\"dweb:/ipfs/QmRfLLMHWF1roGdconfHYEzGkCQfs5Y5ZmF6cudMes4rsk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/ISignaturesValidator.sol": {
				"ISignaturesValidator": {
					"abi": [
						{
							"inputs": [],
							"name": "getDomainSeparator",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getNextNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the SignatureValidator helper, used to support meta-transactions.",
						"kind": "dev",
						"methods": {
							"getDomainSeparator()": {
								"details": "Returns the EIP712 domain separator."
							},
							"getNextNonce(address)": {
								"details": "Returns the next nonce used by an address to sign messages."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getDomainSeparator()": "ed24911d",
							"getNextNonce(address)": "90193b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ISignaturesValidator.sol\":{\"keccak256\":\"0xbfab23cacf288d9575e136b16706e3289aed7898e9ac2d4fd854a1812bed4bb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://613443b184ac61b4dfbedc5402c90fa42b6aea838896890b345b4f5d6561b111\",\"dweb:/ipfs/QmRaVYaPPjp4La96XaRvXcmaTkkVQpYortNKyFGJicxGhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/ITemporarilyPausable.sol": {
				"ITemporarilyPausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "PausedStateChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getPausedState",
							"outputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "pauseWindowEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bufferPeriodEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"PausedStateChanged(bool)": {
								"details": "Emitted every time the pause state changes by `_setPaused`."
							}
						},
						"kind": "dev",
						"methods": {
							"getPausedState()": {
								"details": "Returns the current paused state."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPausedState()": "1c0de051"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ITemporarilyPausable.sol\":{\"keccak256\":\"0xa97c7c41e0bf075552f83e02f7552c3903014107919039548474982b0434cde9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://600a808c3d7791ca8a605e46cc8c4a1b2ae7097b6ffeddeab191d73db0acfc1a\",\"dweb:/ipfs/QmRfLLMHWF1roGdconfHYEzGkCQfs5Y5ZmF6cudMes4rsk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"inputs": [],
							"name": "depositAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPricePerFullShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositAll()": "de5f6268",
							"getPricePerFullShare()": "77c7b8fc",
							"withdrawAll()": "853828b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"depositAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IVault.sol\":{\"keccak256\":\"0x37e2e154014cdf1f4b157aecec29831116e0ded98113a31f4bb27ed3b955ea3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e20eecf8a1d052cdf10fc23ae788daa7e4931cad515e1a576fbfa7103180aaf\",\"dweb:/ipfs/QmVEShWxpyfLZiTRJ86DQgLdYrTbNkiEex5ehSFkUBBHqB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1322
						],
						"Initializable": [
							141
						]
					},
					"id": 142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 1323,
							"src": "138:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "Initializable",
							"nameLocation": "2401:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "2535:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "2664:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2798:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:0"
									},
									"src": "2792:33:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "3101:257:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "3111:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 19,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3133:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3133:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:47:0"
											},
											{
												"condition": {
													"id": 23,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3172:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 29,
												"nodeType": "IfStatement",
												"src": "3168:65:0",
												"trueBody": {
													"id": 28,
													"nodeType": "Block",
													"src": "3188:45:0",
													"statements": [
														{
															"expression": {
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 24,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3202:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3218:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3202:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 27,
															"nodeType": "ExpressionStatement",
															"src": "3202:20:0"
														}
													]
												}
											},
											{
												"id": 30,
												"nodeType": "PlaceholderStatement",
												"src": "3242:1:0"
											},
											{
												"condition": {
													"id": 31,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3257:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 41,
												"nodeType": "IfStatement",
												"src": "3253:99:0",
												"trueBody": {
													"id": 40,
													"nodeType": "Block",
													"src": "3273:79:0",
													"statements": [
														{
															"expression": {
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 32,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3287:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3303:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3287:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 35,
															"nodeType": "ExpressionStatement",
															"src": "3287:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3339:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 36,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3327:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3327:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 39,
															"nodeType": "EmitStatement",
															"src": "3322:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 43,
									"name": "initializer",
									"nameLocation": "3087:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:0"
									},
									"src": "3078:280:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "4173:269:0",
										"statements": [
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4188:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "4183:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 48,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4183:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"arguments": [
														{
															"id": 51,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "4228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 50,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "4205:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4205:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4183:53:0"
											},
											{
												"condition": {
													"id": 54,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "4250:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 60,
												"nodeType": "IfStatement",
												"src": "4246:65:0",
												"trueBody": {
													"id": 59,
													"nodeType": "Block",
													"src": "4266:45:0",
													"statements": [
														{
															"expression": {
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 55,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4280:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4296:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4280:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 58,
															"nodeType": "ExpressionStatement",
															"src": "4280:20:0"
														}
													]
												}
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "4320:1:0"
											},
											{
												"condition": {
													"id": 62,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "4335:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 72,
												"nodeType": "IfStatement",
												"src": "4331:105:0",
												"trueBody": {
													"id": 71,
													"nodeType": "Block",
													"src": "4351:85:0",
													"statements": [
														{
															"expression": {
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 63,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4365:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4381:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4365:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 66,
															"nodeType": "ExpressionStatement",
															"src": "4365:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 68,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "4417:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 67,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "4405:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4405:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 70,
															"nodeType": "EmitStatement",
															"src": "4400:25:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "3364:766:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 74,
									"name": "reinitializer",
									"nameLocation": "4144:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4164:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "4158:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 45,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4158:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4157:15:0"
									},
									"src": "4135:307:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "4680:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "4698:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4713:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4690:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4690:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "4690:69:0"
											},
											{
												"id": 82,
												"nodeType": "PlaceholderStatement",
												"src": "4769:1:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "4448:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 84,
									"name": "onlyInitializing",
									"nameLocation": "4661:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4677:2:0"
									},
									"src": "4652:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "5225:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5263:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 90,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "5263:5:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 89,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5258:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5258:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5258:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 88,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "5235:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5235:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "5235:39:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "4783:388:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5185:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5205:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5225:0:0"
									},
									"scope": 141,
									"src": "5176:105:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "5357:738:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "5684:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "5922:167:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 125,
																			"name": "_initialized",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "5944:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 126,
																			"name": "version",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 99,
																			"src": "5959:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5944:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5968:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 124,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5936:81:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 130,
															"nodeType": "ExpressionStatement",
															"src": "5936:81:0"
														},
														{
															"expression": {
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 131,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "6031:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 132,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "6046:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6031:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 134,
															"nodeType": "ExpressionStatement",
															"src": "6031:22:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6074:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 103,
															"id": 136,
															"nodeType": "Return",
															"src": "6067:11:0"
														}
													]
												},
												"id": 138,
												"nodeType": "IfStatement",
												"src": "5680:409:0",
												"trueBody": {
													"id": 123,
													"nodeType": "Block",
													"src": "5699:217:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 106,
																				"name": "version",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "5738:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5749:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5738:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"id": 116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "5754:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "5793:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$141",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$141",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5785:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 111,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "5785:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5785:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 109,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1322,
																						"src": "5755:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1322_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 110,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1097,
																					"src": "5755:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5755:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5738:61:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5817:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 105,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5713:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5713:166:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "5713:166:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5900:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 103,
															"id": 122,
															"nodeType": "Return",
															"src": "5893:12:0"
														}
													]
												}
											}
										]
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setInitializedVersion",
									"nameLocation": "5296:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5325:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5319:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 98,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:15:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5351:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:6:0"
									},
									"scope": 141,
									"src": "5287:808:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 142,
							"src": "2383:3714:0",
							"usedErrors": []
						}
					],
					"src": "113:5985:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1322
						],
						"ContextUpgradeable": [
							1364
						],
						"ERC20Upgradeable": [
							752
						],
						"IERC20MetadataUpgradeable": [
							855
						],
						"IERC20Upgradeable": [
							830
						],
						"Initializable": [
							141
						]
					},
					"id": 753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "./IERC20Upgradeable.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 753,
							"sourceUnit": 831,
							"src": "130:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
							"file": "./extensions/IERC20MetadataUpgradeable.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 753,
							"sourceUnit": 856,
							"src": "164:52:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 753,
							"sourceUnit": 1365,
							"src": "217:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 753,
							"sourceUnit": 142,
							"src": "262:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 149,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 141,
										"src": "1511:13:1"
									},
									"id": 150,
									"nodeType": "InheritanceSpecifier",
									"src": "1511:13:1"
								},
								{
									"baseName": {
										"id": 151,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1364,
										"src": "1526:18:1"
									},
									"id": 152,
									"nodeType": "InheritanceSpecifier",
									"src": "1526:18:1"
								},
								{
									"baseName": {
										"id": 153,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 830,
										"src": "1546:17:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "1546:17:1"
								},
								{
									"baseName": {
										"id": 155,
										"name": "IERC20MetadataUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 855,
										"src": "1565:25:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "1565:25:1"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 148,
								"nodeType": "StructuredDocumentation",
								"src": "309:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 752,
							"linearizedBaseContracts": [
								752,
								855,
								830,
								1364,
								141
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1491:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1633:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 752,
									"src": "1597:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 159,
										"keyType": {
											"id": 157,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1605:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1597:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 158,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1616:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 166,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1705:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 752,
									"src": "1649:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 165,
										"keyType": {
											"id": 161,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1657:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1649:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 164,
											"keyType": {
												"id": 162,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1676:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1668:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 163,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1687:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 168,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1739:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 752,
									"src": "1723:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 170,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1773:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 752,
									"src": "1758:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 169,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1758:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 172,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1799:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 752,
									"src": "1784:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 171,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1784:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2208:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 183,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2241:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 184,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2248:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2218:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2218:38:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "1813:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 179,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "2191:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2191:16:1"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2125:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2152:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2138:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2138:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2173:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2159:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2159:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:44:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:0:1"
									},
									"scope": 752,
									"src": "2116:147:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2371:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "2381:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2389:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2381:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2381:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "2404:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2404:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2404:17:1"
											}
										]
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 195,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 194,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "2354:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2354:16:1"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2278:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2315:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2301:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2301:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2336:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2322:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2322:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:1"
									},
									"scope": 752,
									"src": "2269:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2562:29:1",
										"statements": [
											{
												"expression": {
													"id": 213,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 170,
													"src": "2579:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 212,
												"id": 214,
												"nodeType": "Return",
												"src": "2572:12:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2434:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2502:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2529:8:1"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:2:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2547:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2547:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:15:1"
									},
									"scope": 752,
									"src": "2493:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										848
									],
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "2775:31:1",
										"statements": [
											{
												"expression": {
													"id": 223,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 172,
													"src": "2792:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 222,
												"id": 224,
												"nodeType": "Return",
												"src": "2785:14:1"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2597:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2713:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 219,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2742:8:1"
									},
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:2:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2760:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2760:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:15:1"
									},
									"scope": 752,
									"src": "2704:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3495:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3512:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 232,
												"id": 234,
												"nodeType": "Return",
												"src": "3505:9:1"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2812:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3439:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 229,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3470:8:1"
									},
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:2:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3488:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 230,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3488:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:7:1"
									},
									"scope": 752,
									"src": "3430:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "3651:36:1",
										"statements": [
											{
												"expression": {
													"id": 243,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "3668:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 244,
												"nodeType": "Return",
												"src": "3661:19:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3527:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3590:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3624:8:1"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3601:2:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3642:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3641:9:1"
									},
									"scope": 752,
									"src": "3581:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										787
									],
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3828:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 255,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "3845:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 257,
													"indexExpression": {
														"id": 256,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "3855:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3845:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 254,
												"id": 258,
												"nodeType": "Return",
												"src": "3838:25:1"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3693:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3754:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 251,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:1"
									},
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3772:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3764:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:17:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3819:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:9:1"
									},
									"scope": 752,
									"src": "3745:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										797
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "4151:104:1",
										"statements": [
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4169:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "4161:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 271,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4161:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 275,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 273,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "4177:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4161:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4209:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4216:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4220:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 276,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "4199:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4199:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "4199:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4244:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 270,
												"id": 283,
												"nodeType": "Return",
												"src": "4237:11:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3876:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4075:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4127:8:1"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4092:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4084:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4104:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4096:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4096:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4083:28:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:1"
									},
									"scope": 752,
									"src": "4066:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										807
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "4411:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 296,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "4428:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "4440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4428:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"id": 299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "4447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4428:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "4421:34:1"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "4261:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4322:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 292,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4384:8:1"
									},
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4340:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "4332:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4355:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "4347:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4347:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:32:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "4402:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4402:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4401:9:1"
									},
									"scope": 752,
									"src": "4313:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										817
									],
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "4859:108:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4877:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "4869:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4869:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "4885:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4885:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4869:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4923:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4932:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "4907:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4907:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4956:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 326,
												"nodeType": "Return",
												"src": "4949:11:1"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "4468:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4779:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:1"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4795:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "4787:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4812:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "4804:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:33:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "4853:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4853:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:6:1"
									},
									"scope": 752,
									"src": "4770:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "5662:153:1",
										"statements": [
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5680:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "5672:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 341,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5672:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 343,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "5690:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5690:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5672:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5728:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5734:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5743:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "5712:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5712:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "5712:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5780:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "5760:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5760:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "5760:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5804:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 340,
												"id": 359,
												"nodeType": "Return",
												"src": "5797:11:1"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "4973:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5538:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5638:8:1"
									},
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5568:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5560:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5590:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5582:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5610:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5602:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5550:72:1"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5656:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5656:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:6:1"
									},
									"scope": 752,
									"src": "5529:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "6304:140:1",
										"statements": [
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6322:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "6314:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 371,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6314:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 373,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "6330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6330:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6314:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "6361:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 380,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "6387:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 381,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "6394:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 379,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "6377:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6377:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 383,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6405:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6377:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "6352:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "6352:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 370,
												"id": 388,
												"nodeType": "Return",
												"src": "6426:11:1"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5821:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6219:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6245:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6237:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6262:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6254:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:37:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6298:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6298:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:6:1"
									},
									"scope": 752,
									"src": "6210:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "7030:328:1",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7048:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "7040:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7040:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "7056:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7056:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7040:28:1"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7086:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "7078:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7078:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [
														{
															"id": 408,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "7115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 407,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "7105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7105:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7078:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "7148:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 414,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "7168:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7148:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7185:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7140:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7140:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "7140:85:1"
											},
											{
												"id": 427,
												"nodeType": "UncheckedBlock",
												"src": "7235:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "7268:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 421,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "7275:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 422,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "7284:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 423,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "7303:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7284:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 419,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "7259:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7259:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 426,
														"nodeType": "ExpressionStatement",
														"src": "7259:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7347:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 429,
												"nodeType": "Return",
												"src": "7340:11:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "6450:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6940:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6966:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6958:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6983:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6975:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6975:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6957:42:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "7024:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7024:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7023:6:1"
									},
									"scope": 752,
									"src": "6931:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "7929:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "7947:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7963:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7955:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 443,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7955:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7955:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7947:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7967:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7939:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7939:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "7939:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "8025:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8039:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8031:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8031:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8031:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8025:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8043:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8017:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8017:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "8017:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "8113:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "8119:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "8123:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "8092:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8092:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "8092:38:1"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8149:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "8141:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"id": 469,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "8163:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "8173:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8163:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8141:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "8196:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 475,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "8211:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8196:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8219:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "8188:72:1"
											},
											{
												"id": 488,
												"nodeType": "UncheckedBlock",
												"src": "8270:73:1",
												"statements": [
													{
														"expression": {
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 480,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "8294:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 482,
																"indexExpression": {
																	"id": 481,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "8304:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8294:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 483,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "8312:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 484,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "8326:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8312:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8294:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 487,
														"nodeType": "ExpressionStatement",
														"src": "8294:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 489,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "8352:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 491,
														"indexExpression": {
															"id": 490,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "8362:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8352:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "8369:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8352:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "8352:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "8400:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "8406:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "8410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "8391:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8391:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "EmitStatement",
												"src": "8386:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "8448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "8454:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "8458:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 501,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "8428:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8428:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "8428:37:1"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "7364:452:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7830:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7857:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "7849:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7879:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "7871:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "7891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7891:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7839:72:1"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7929:0:1"
									},
									"scope": 752,
									"src": "7821:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "8813:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "8831:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8850:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8842:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 518,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8842:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8842:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8831:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8854:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8823:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8823:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "8823:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8928:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8920:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8920:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8920:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "8932:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "8941:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 526,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "8899:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "8899:49:1"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "8959:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 536,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "8975:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8959:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "8959:22:1"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 539,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "8991:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 541,
														"indexExpression": {
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "9001:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8991:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 542,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "9013:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8991:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "8991:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9051:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9043:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 546,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9043:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9043:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "9055:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9064:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "9034:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9034:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "EmitStatement",
												"src": "9029:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9102:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9102:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9102:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "9114:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9123:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "9082:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9082:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "9082:48:1"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "8478:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8757:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8771:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8788:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8780:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8762:33:1"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8813:0:1"
									},
									"scope": 752,
									"src": "8748:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "9522:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 573,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "9540:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9559:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9551:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 574,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9551:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9551:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9540:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9563:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9532:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9532:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "9532:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "9631:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9648:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9640:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 584,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9640:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9640:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "9652:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 582,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "9610:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9610:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "9610:49:1"
											},
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9678:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "9670:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9670:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"baseExpression": {
														"id": 593,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "9695:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 595,
													"indexExpression": {
														"id": 594,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "9705:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9695:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9670:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 598,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "9731:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 599,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "9749:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9731:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9757:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9723:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9723:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "9723:71:1"
											},
											{
												"id": 612,
												"nodeType": "UncheckedBlock",
												"src": "9804:79:1",
												"statements": [
													{
														"expression": {
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "9828:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "9838:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9828:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 607,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "9849:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 608,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "9866:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9849:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9828:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 611,
														"nodeType": "ExpressionStatement",
														"src": "9828:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 613,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "9892:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 614,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "9908:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9892:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "9892:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 618,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "9939:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9956:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9948:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 619,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9948:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9948:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "9960:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "9930:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9930:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "EmitStatement",
												"src": "9925:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "9998:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10015:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10007:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10007:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10007:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "10019:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "9978:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "9978:48:1"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "9143:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9466:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9480:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "9472:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9472:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9497:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "9489:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9471:33:1"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9522:0:1"
									},
									"scope": 752,
									"src": "9457:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "10569:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 647,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "10587:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10604:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10596:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10596:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10596:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10587:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10608:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10579:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10579:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "10579:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "10665:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10684:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10676:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10676:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10676:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10665:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10688:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10657:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "10657:68:1"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 666,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "10736:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 669,
															"indexExpression": {
																"id": 667,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "10748:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10736:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 670,
														"indexExpression": {
															"id": 668,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "10755:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10736:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 671,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "10766:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10736:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "10736:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 675,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "10796:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "10803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "10812:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10787:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10787:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "EmitStatement",
												"src": "10782:37:1"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "10039:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10465:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10491:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10483:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10483:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10514:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10506:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10539:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10531:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10473:78:1"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10569:0:1"
									},
									"scope": 752,
									"src": "10456:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "11227:321:1",
										"statements": [
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11245:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "11237:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11237:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"id": 694,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "11274:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "11281:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 693,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "11264:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11264:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11237:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 698,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "11303:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11328:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 700,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11328:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 699,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11323:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11323:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11323:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11303:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "IfStatement",
												"src": "11299:243:1",
												"trueBody": {
													"id": 721,
													"nodeType": "Block",
													"src": "11342:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 706,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 692,
																			"src": "11364:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 707,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "11384:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11364:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11392:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 705,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11356:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11356:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 711,
															"nodeType": "ExpressionStatement",
															"src": "11356:68:1"
														},
														{
															"id": 720,
															"nodeType": "UncheckedBlock",
															"src": "11438:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 713,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 684,
																				"src": "11475:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 714,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "11482:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 715,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "11491:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 716,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "11510:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11491:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 712,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "11466:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11466:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 719,
																	"nodeType": "ExpressionStatement",
																	"src": "11466:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "10832:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11116:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11149:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "11141:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11172:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "11164:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11164:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11197:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "11189:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11131:78:1"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11227:0:1"
									},
									"scope": 752,
									"src": "11107:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "12251:2:1",
										"statements": []
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "11554:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12141:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12179:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "12171:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12171:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12201:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "12193:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12193:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12221:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "12213:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12213:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12161:72:1"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12251:0:1"
									},
									"scope": 752,
									"src": "12132:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "12959:2:1",
										"statements": []
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "12259:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12850:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12887:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "12879:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12909:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "12901:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12901:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12929:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "12921:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12921:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12869:72:1"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12959:0:1"
									},
									"scope": 752,
									"src": "12841:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "12967:254:1",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 751,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "13246:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 752,
									"src": "13226:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 748,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13226:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 750,
										"length": {
											"hexValue": "3435",
											"id": 749,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "13234:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "13226:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 753,
							"src": "1482:11772:1",
							"usedErrors": []
						}
					],
					"src": "105:13150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							830
						]
					},
					"id": 831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 755,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 830,
							"linearizedBaseContracts": [
								830
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 764,
									"name": "Transfer",
									"nameLocation": "405:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "414:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "436:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "456:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:2"
									},
									"src": "399:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 773,
									"name": "Approval",
									"nameLocation": "636:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "645:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "668:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "693:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:2"
									},
									"src": "630:78:2"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:2"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "831:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:2"
									},
									"scope": 830,
									"src": "785:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "942:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:2"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "982:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:2"
									},
									"scope": 830,
									"src": "923:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1234:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:2"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 830,
									"src": "1204:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 830,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "2302:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "2319:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:2"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "2353:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:2"
									},
									"scope": 830,
									"src": "2285:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2688:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2730:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:2"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2769:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:2"
									},
									"scope": 830,
									"src": "2657:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 831,
							"src": "202:2575:2",
							"usedErrors": []
						}
					],
					"src": "106:2672:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC20MetadataUpgradeable": [
							855
						],
						"IERC20Upgradeable": [
							830
						]
					},
					"id": 856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 832,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 833,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 856,
							"sourceUnit": 831,
							"src": "135:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 835,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 830,
										"src": "327:17:3"
									},
									"id": 836,
									"nodeType": "InheritanceSpecifier",
									"src": "327:17:3"
								}
							],
							"canonicalName": "IERC20MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 834,
								"nodeType": "StructuredDocumentation",
								"src": "171:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 855,
							"linearizedBaseContracts": [
								855,
								830
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "298:25:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "351:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "419:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "449:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:15:3"
									},
									"scope": 855,
									"src": "410:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "470:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "540:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:3"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "572:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:15:3"
									},
									"scope": 855,
									"src": "531:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "593:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "672:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "706:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 851,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "706:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:7:3"
									},
									"scope": 855,
									"src": "663:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 856,
							"src": "288:427:3",
							"usedErrors": []
						}
					],
					"src": "110:606:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1322
						],
						"IERC20Upgradeable": [
							830
						],
						"SafeERC20Upgradeable": [
							1079
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 831,
							"src": "125:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1323,
							"src": "160:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 860,
								"nodeType": "StructuredDocumentation",
								"src": "209:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "675:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 863,
									"libraryName": {
										"id": 861,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1322,
										"src": "708:18:4"
									},
									"nodeType": "UsingForDirective",
									"src": "702:37:4",
									"typeName": {
										"id": 862,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "858:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "888:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 877,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "918:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 797,
																		"src": "918:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "918:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 880,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "943:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 881,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "947:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 875,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "895:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "895:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 873,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "868:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "868:86:4"
											}
										]
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "754:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "794:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "776:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 864,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "776:17:4"
													},
													"referencedDeclaration": 830,
													"src": "776:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "817:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "809:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "837:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "829:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:82:4"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:4"
									},
									"scope": 1079,
									"src": "745:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "1106:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "1136:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 902,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "1166:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 829,
																		"src": "1166:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1166:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 905,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "1195:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 906,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "1201:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 907,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "1205:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 900,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1143:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1143:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 898,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "1116:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "1116:96:4"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "976:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1020:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1002:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 887,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "1002:17:4"
													},
													"referencedDeclaration": 830,
													"src": "1002:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1043:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1035:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1065:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1057:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1085:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "1077:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:104:4"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:4"
									},
									"scope": 1079,
									"src": "967:252:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "1596:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "1845:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1854:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1845:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 927,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1844:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 932,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1885:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1079",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1079",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 931,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1877:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 930,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1877:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1877:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 934,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "1892:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 928,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "1861:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 807,
																				"src": "1861:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1861:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1904:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1861:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 938,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1860:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1823:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2016:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 947,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 916,
																			"src": "2046:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 817,
																		"src": "2046:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2046:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 950,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "2070:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 951,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "2079:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 945,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2023:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2023:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 943,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "1996:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "1996:90:4"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "1225:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1488:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1509:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 915,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 914,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "1509:17:4"
													},
													"referencedDeclaration": 830,
													"src": "1509:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1550:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1542:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:87:4"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:4"
									},
									"scope": 1079,
									"src": "1479:614:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "2226:194:4",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2244:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "2236:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 966,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2236:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 972,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2283:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1079",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1079",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2275:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 970,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2275:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 974,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2290:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 968,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2259:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 807,
															"src": "2259:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 976,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2301:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 980,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2336:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 983,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "2366:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 817,
																		"src": "2366:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2366:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 986,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "2390:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 987,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "2399:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 981,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2343:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2343:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2343:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 979,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "2316:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "2316:97:4"
											}
										]
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2108:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2157:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2139:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "2139:17:4"
													},
													"referencedDeclaration": 830,
													"src": "2139:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2180:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2172:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2205:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2197:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:87:4"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:4"
									},
									"scope": 1079,
									"src": "2099:321:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2553:370:4",
										"statements": [
											{
												"id": 1038,
												"nodeType": "UncheckedBlock",
												"src": "2563:354:4",
												"statements": [
													{
														"assignments": [
															1003
														],
														"declarations": [
															{
																"constant": false,
																"id": 1003,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2595:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1038,
																"src": "2587:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1002,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2587:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1012,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1008,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2634:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1079",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$1079",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2626:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1006,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2626:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1004,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2610:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 807,
																"src": "2610:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2587:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1014,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "2671:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1015,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "2687:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2671:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2694:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1013,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2663:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1019,
														"nodeType": "ExpressionStatement",
														"src": "2663:75:4"
													},
													{
														"assignments": [
															1021
														],
														"declarations": [
															{
																"constant": false,
																"id": 1021,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2760:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1038,
																"src": "2752:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1020,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2752:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1025,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "2775:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1023,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "2790:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2752:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1027,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2829:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1030,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "2859:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 817,
																				"src": "2859:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2859:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1033,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "2883:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1034,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "2892:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1028,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2836:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2836:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2836:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1026,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "2809:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2809:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1037,
														"nodeType": "ExpressionStatement",
														"src": "2809:97:4"
													}
												]
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2435:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2484:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2466:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 993,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "2466:17:4"
													},
													"referencedDeclaration": 830,
													"src": "2466:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2507:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2499:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2524:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:87:4"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:4"
									},
									"scope": 1079,
									"src": "2426:497:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "3387:636:4",
										"statements": [
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3749:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "3736:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1049,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3736:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"arguments": [
														{
															"id": 1056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "3790:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3796:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1053,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "3770:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3762:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3762:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1168,
														"src": "3762:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1060,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "3845:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3845:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3865:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3845:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "3841:176:4",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "3868:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1067,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "3940:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3953:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1068,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3953:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1070,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3952:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1065,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3929:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3929:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3961:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1064,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3921:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3921:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "ExpressionStatement",
															"src": "3921:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "2929:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3315:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3335:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1043,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1042,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "3335:17:4"
													},
													"referencedDeclaration": 830,
													"src": "3335:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3373:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3360:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3360:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:44:4"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:4"
									},
									"scope": 1079,
									"src": "3306:717:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1080,
							"src": "667:3358:4",
							"usedErrors": []
						}
					],
					"src": "100:3926:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1322
						]
					},
					"id": 1323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1322,
							"linearizedBaseContracts": [
								1322
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "1252:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1090,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "1476:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1095,
												"nodeType": "Return",
												"src": "1469:30:5"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:5"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1246:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:5"
									},
									"scope": 1322,
									"src": "1186:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "2494:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1108,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1322",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1322",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1106,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1111,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "2537:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:5"
											},
											{
												"assignments": [
													1117,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "2589:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1116,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1124,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1118,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "2607:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1120,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "2629:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1126,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "2658:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:5"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2442:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2469:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:5"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:5"
									},
									"scope": 1322,
									"src": "2423:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "3566:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "3596:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3604:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1141,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1148,
															1168
														],
														"referencedDeclaration": 1168,
														"src": "3583:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1146,
												"nodeType": "Return",
												"src": "3576:67:5"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3499:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3515:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:5"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3552:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:5"
									},
									"scope": 1322,
									"src": "3477:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "4019:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1161,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "4058:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "4066:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1164,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "4075:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1160,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1188,
															1238
														],
														"referencedDeclaration": 1238,
														"src": "4036:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1166,
												"nodeType": "Return",
												"src": "4029:59:5"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "3903:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "3927:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "3954:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4005:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:5"
									},
									"scope": 1322,
									"src": "3872:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "4600:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "4639:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "4647:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1180,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1188,
															1238
														],
														"referencedDeclaration": 1238,
														"src": "4617:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1179,
												"id": 1186,
												"nodeType": "Return",
												"src": "4610:94:5"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4497:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4521:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1172,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4548:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:5"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4586:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:5"
									},
									"scope": 1322,
									"src": "4457:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "5138:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1205,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1322",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1322",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1203,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1208,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "5181:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1215,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "5258:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1214,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "5247:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:5"
											},
											{
												"assignments": [
													1221,
													1223
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "5311:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "5325:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1222,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"arguments": [
														{
															"id": 1228,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "5378:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1224,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "5352:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1226,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "5371:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "5417:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1233,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "5426:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1234,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "5438:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1231,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "5400:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1201,
												"id": 1236,
												"nodeType": "Return",
												"src": "5393:58:5"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "4999:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "5023:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "5050:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "5073:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:5"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "5124:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:5"
									},
									"scope": 1322,
									"src": "4959:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "5735:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "5771:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "5779:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1248,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1255,
															1290
														],
														"referencedDeclaration": 1290,
														"src": "5752:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1247,
												"id": 1253,
												"nodeType": "Return",
												"src": "5745:80:5"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "5663:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "5679:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:5"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "5721:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:5"
									},
									"scope": 1322,
									"src": "5635:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "6174:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1269,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "6203:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1268,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "6192:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:5"
											},
											{
												"assignments": [
													1275,
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1289,
														"src": "6263:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1274,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1289,
														"src": "6277:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1276,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"arguments": [
														{
															"id": 1280,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "6322:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1278,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "6304:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "6361:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1285,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "6370:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1286,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "6382:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1283,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "6344:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1266,
												"id": 1288,
												"nodeType": "Return",
												"src": "6337:58:5"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6053:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6077:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6104:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1261,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6160:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:5"
									},
									"scope": 1322,
									"src": "6016:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "6782:532:5",
										"statements": [
											{
												"condition": {
													"id": 1302,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1293,
													"src": "6796:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "6853:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1306,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "6937:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1316,
																"nodeType": "Block",
																"src": "7245:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1313,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1297,
																					"src": "7270:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1312,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7263:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7263:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1315,
																		"nodeType": "ExpressionStatement",
																		"src": "7263:20:5"
																	}
																]
															},
															"id": 1317,
															"nodeType": "IfStatement",
															"src": "6933:365:5",
															"trueBody": {
																"id": 1311,
																"nodeType": "Block",
																"src": "6960:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7080:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7102:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7131:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7125:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7125:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7106:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7174:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7178:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7170:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7170:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7191:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7163:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7163:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7163:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1295,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7131:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1295,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7178:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1310,
																		"nodeType": "InlineAssembly",
																		"src": "7071:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "6792:516:5",
												"trueBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "6805:42:5",
													"statements": [
														{
															"expression": {
																"id": 1303,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "6826:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1301,
															"id": 1304,
															"nodeType": "Return",
															"src": "6819:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6657:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6679:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6712:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:5"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6768:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:5"
									},
									"scope": 1322,
									"src": "6622:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1323,
							"src": "194:7122:5",
							"usedErrors": []
						}
					],
					"src": "101:7216:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1322
						],
						"ContextUpgradeable": [
							1364
						],
						"Initializable": [
							141
						]
					},
					"id": 1365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1324,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1365,
							"sourceUnit": 142,
							"src": "110:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1327,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 141,
										"src": "691:13:6"
									},
									"id": 1328,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1326,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1364,
							"linearizedBaseContracts": [
								1364,
								141
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "763:7:6",
										"statements": []
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1331,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1330,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "746:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:6"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:6"
									},
									"scope": 1364,
									"src": "711:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "838:7:6",
										"statements": []
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1336,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 84,
												"src": "821:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:6"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:6"
									},
									"scope": 1364,
									"src": "776:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "912:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1345,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1344,
												"id": 1347,
												"nodeType": "Return",
												"src": "922:17:6"
											}
										]
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:6"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "903:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:6"
									},
									"scope": 1364,
									"src": "850:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "1019:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1354,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1353,
												"id": 1356,
												"nodeType": "Return",
												"src": "1029:15:6"
											}
										]
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:6"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "1003:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:6"
									},
									"scope": 1364,
									"src": "952:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1363,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1364,
									"src": "1316:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1362,
										"length": {
											"hexValue": "3530",
											"id": 1361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1365,
							"src": "651:693:6",
							"usedErrors": []
						}
					],
					"src": "86:1259:6"
				},
				"id": 6
			},
			"SuperDepositor.sol": {
				"ast": {
					"absolutePath": "SuperDepositor.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1322
						],
						"BeetsHelper": [
							1818
						],
						"ContextUpgradeable": [
							1364
						],
						"ERC20Upgradeable": [
							752
						],
						"IAsset": [
							1822
						],
						"IAuthorizer": [
							1837
						],
						"IBeetVault": [
							2299
						],
						"IERC20MetadataUpgradeable": [
							855
						],
						"IERC20Upgradeable": [
							830
						],
						"ISignaturesValidator": [
							2317
						],
						"ITemporarilyPausable": [
							2335
						],
						"IVault": [
							2349
						],
						"Initializable": [
							141
						],
						"SafeERC20Upgradeable": [
							1079
						]
					},
					"id": 1819,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1366,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "43:23:7"
						},
						{
							"absolutePath": "interfaces/IBeetVault.sol",
							"file": "./interfaces/IBeetVault.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1819,
							"sourceUnit": 2300,
							"src": "70:37:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IVault.sol",
							"file": "./interfaces/IVault.sol",
							"id": 1368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1819,
							"sourceUnit": 2350,
							"src": "109:33:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1819,
							"sourceUnit": 1080,
							"src": "144:88:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BeetsHelper",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1370,
								"nodeType": "StructuredDocumentation",
								"src": "236:53:7",
								"text": "@title BeetsHelper\n @author z80 and Eidolon"
							},
							"fullyImplemented": true,
							"id": 1818,
							"linearizedBaseContracts": [
								1818
							],
							"name": "BeetsHelper",
							"nameLocation": "298:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1374,
									"libraryName": {
										"id": 1371,
										"name": "SafeERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "325:20:7"
									},
									"nodeType": "UsingForDirective",
									"src": "319:49:7",
									"typeName": {
										"id": 1373,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1372,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 830,
											"src": "350:17:7"
										},
										"referencedDeclaration": 830,
										"src": "350:17:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "77aba213",
									"id": 1376,
									"mutability": "immutable",
									"name": "balVault",
									"nameLocation": "401:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1818,
									"src": "376:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1375,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "BeetsHelper.VaultParams",
									"id": 1391,
									"members": [
										{
											"constant": false,
											"id": 1380,
											"mutability": "mutable",
											"name": "underlyings",
											"nameLocation": "712:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "703:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
												"typeString": "contract IAsset[]"
											},
											"typeName": {
												"baseType": {
													"id": 1378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1377,
														"name": "IAsset",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1822,
														"src": "703:6:7"
													},
													"referencedDeclaration": 1822,
													"src": "703:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAsset_$1822",
														"typeString": "contract IAsset"
													}
												},
												"id": 1379,
												"nodeType": "ArrayTypeName",
												"src": "703:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
													"typeString": "contract IAsset[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1382,
											"mutability": "mutable",
											"name": "tokenIndex",
											"nameLocation": "742:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "734:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1381,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "734:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "beetsPoolId",
											"nameLocation": "771:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "763:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1383,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "763:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "801:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "793:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1385,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "793:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1388,
											"mutability": "mutable",
											"name": "vault",
											"nameLocation": "861:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "853:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1387,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "853:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1390,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "885:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "877:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1389,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "877:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VaultParams",
									"nameLocation": "680:11:7",
									"nodeType": "StructDefinition",
									"scope": 1818,
									"src": "673:229:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "941:39:7",
										"statements": [
											{
												"expression": {
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1396,
														"name": "balVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "952:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1397,
														"name": "_balVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "963:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "952:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "952:20:7"
											}
										]
									},
									"id": 1401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_balVault",
												"nameLocation": "930:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "922:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:19:7"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:0:7"
									},
									"scope": 1818,
									"src": "910:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "1078:403:7",
										"statements": [
											{
												"assignments": [
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "depositToken",
														"nameLocation": "1224:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "1216:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1411,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1216:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"id": 1415,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "1247:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																		"typeString": "struct BeetsHelper.VaultParams memory"
																	}
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "underlyings",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1380,
																"src": "1247:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																	"typeString": "contract IAsset[] memory"
																}
															},
															"id": 1419,
															"indexExpression": {
																"expression": {
																	"id": 1417,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "1267:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																		"typeString": "struct BeetsHelper.VaultParams memory"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenIndex",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1382,
																"src": "1267:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1247:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAsset_$1822",
																"typeString": "contract IAsset"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IAsset_$1822",
																"typeString": "contract IAsset"
															}
														],
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1239:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1413,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1239:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1216:71:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1422,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "1301:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1423,
														"name": "depositToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "1312:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1301:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1431,
													"nodeType": "Block",
													"src": "1393:71:7",
													"statements": []
												},
												"id": 1432,
												"nodeType": "IfStatement",
												"src": "1298:166:7",
												"trueBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "1325:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1426,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "1359:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																			"typeString": "struct BeetsHelper.VaultParams memory"
																		}
																	},
																	{
																		"id": 1427,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "1368:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																			"typeString": "struct BeetsHelper.VaultParams memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1425,
																	"name": "_singleSideDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "1340:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_VaultParams_$1391_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct BeetsHelper.VaultParams memory,uint256)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1340:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "1340:35:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9cbcf4c7",
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "routeDeposit",
									"nameLocation": "997:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1018:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1010:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "1046:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1027:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
													"typeString": "struct BeetsHelper.VaultParams"
												},
												"typeName": {
													"id": 1405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1404,
														"name": "VaultParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1391,
														"src": "1027:11:7"
													},
													"referencedDeclaration": 1391,
													"src": "1027:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultParams_$1391_storage_ptr",
														"typeString": "struct BeetsHelper.VaultParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1063:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1055:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:61:7"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:0:7"
									},
									"scope": 1818,
									"src": "988:493:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "1568:385:7",
										"statements": [
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "inputToken",
														"nameLocation": "1597:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "1579:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 1443,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1442,
																"name": "IERC20Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 830,
																"src": "1579:17:7"
															},
															"referencedDeclaration": 830,
															"src": "1579:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"baseExpression": {
																		"expression": {
																			"id": 1448,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1437,
																			"src": "1636:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																				"typeString": "struct BeetsHelper.VaultParams memory"
																			}
																		},
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "underlyings",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1380,
																		"src": "1636:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																			"typeString": "contract IAsset[] memory"
																		}
																	},
																	"id": 1452,
																	"indexExpression": {
																		"expression": {
																			"id": 1450,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1437,
																			"src": "1656:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																				"typeString": "struct BeetsHelper.VaultParams memory"
																			}
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenIndex",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1382,
																		"src": "1656:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1636:39:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAsset_$1822",
																		"typeString": "contract IAsset"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IAsset_$1822",
																		"typeString": "contract IAsset"
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1628:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1628:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1628:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1445,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1610:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1579:98:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1459,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1716:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1716:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1463,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1736:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																],
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1728:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1461,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1728:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1728:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1465,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "1743:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1456,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1688:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 912,
														"src": "1688:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1688:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "1688:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1469,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "1771:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlyings",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1380,
															"src": "1771:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																"typeString": "contract IAsset[] memory"
															}
														},
														{
															"id": 1471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "1792:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1472,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "1800:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1382,
															"src": "1800:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1474,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "1820:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "beetsPoolId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1384,
															"src": "1820:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																"typeString": "contract IAsset[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1468,
														"name": "_joinPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "1761:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (contract IAsset[] memory,uint256,uint256,bytes32)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "1761:79:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1479,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "1895:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1386,
															"src": "1895:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1481,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "1912:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "vault",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1388,
															"src": "1912:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1483,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "1927:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "recipient",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1390,
															"src": "1927:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1478,
														"name": "_depositLPToVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "1877:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "1877:68:7"
											}
										]
									},
									"functionSelector": "bfbd3808",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_singleSideDeposit",
									"nameLocation": "1498:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "1536:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1517:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
													"typeString": "struct BeetsHelper.VaultParams"
												},
												"typeName": {
													"id": 1436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1435,
														"name": "VaultParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1391,
														"src": "1517:11:7"
													},
													"referencedDeclaration": 1391,
													"src": "1517:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultParams_$1391_storage_ptr",
														"typeString": "struct BeetsHelper.VaultParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1553:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1545:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1516:44:7"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1568:0:7"
									},
									"scope": 1818,
									"src": "1489:464:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "2041:291:7",
										"statements": [
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "inputToken",
														"nameLocation": "2070:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1533,
														"src": "2052:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 1497,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1496,
																"name": "IERC20Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 830,
																"src": "2052:17:7"
															},
															"referencedDeclaration": 830,
															"src": "2052:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1500,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "2101:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "vault",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1388,
															"src": "2101:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1499,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2083:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2083:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1507,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2154:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2154:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1511,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2174:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2166:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2166:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2166:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "2181:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1504,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "2126:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 912,
														"src": "2126:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "2126:62:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1517,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "2206:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																			"typeString": "struct BeetsHelper.VaultParams memory"
																		}
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vault",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1388,
																	"src": "2206:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1516,
																"name": "IVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2349,
																"src": "2199:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IVault_$2349_$",
																	"typeString": "type(contract IVault)"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2199:21:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVault_$2349",
																"typeString": "contract IVault"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdrawAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2348,
														"src": "2199:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "2199:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1524,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "2255:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "underlyings",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1380,
															"src": "2255:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																"typeString": "contract IAsset[] memory"
															}
														},
														{
															"id": 1526,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "2276:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1527,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "2284:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1382,
															"src": "2284:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1529,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "2304:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
																	"typeString": "struct BeetsHelper.VaultParams memory"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "beetsPoolId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1384,
															"src": "2304:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																"typeString": "contract IAsset[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1523,
														"name": "_exitPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "2245:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (contract IAsset[] memory,uint256,uint256,bytes32)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "2245:79:7"
											}
										]
									},
									"functionSelector": "0e6335e6",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_singleSideWithdraw",
									"nameLocation": "1970:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "details",
												"nameLocation": "2009:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1990:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaultParams_$1391_memory_ptr",
													"typeString": "struct BeetsHelper.VaultParams"
												},
												"typeName": {
													"id": 1490,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1489,
														"name": "VaultParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1391,
														"src": "1990:11:7"
													},
													"referencedDeclaration": 1391,
													"src": "1990:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultParams_$1391_storage_ptr",
														"typeString": "struct BeetsHelper.VaultParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2026:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2018:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:7"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2041:0:7"
									},
									"scope": 1818,
									"src": "1961:371:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "2426:325:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "2479:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "lp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "2486:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1543,
														"name": "_approveIfNeeded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "2462:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2462:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "2462:27:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1549,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "2557:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1548,
																"name": "IVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2349,
																"src": "2550:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IVault_$2349_$",
																	"typeString": "type(contract IVault)"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2550:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVault_$2349",
																"typeString": "contract IVault"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "depositAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2345,
														"src": "2550:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2550:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "2550:26:7"
											},
											{
												"assignments": [
													1556
												],
												"declarations": [
													{
														"constant": false,
														"id": 1556,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "2636:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "2618:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 1555,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1554,
																"name": "IERC20Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 830,
																"src": "2618:17:7"
															},
															"referencedDeclaration": 830,
															"src": "2618:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": {
													"arguments": [
														{
															"id": 1558,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "2663:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1557,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2645:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2618:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1564,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "2700:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1569,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2736:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																				"typeString": "contract BeetsHelper"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																				"typeString": "contract BeetsHelper"
																			}
																		],
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2728:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2728:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2728:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1565,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "2711:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "2711:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2711:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1561,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "2680:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 886,
														"src": "2680:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "2680:63:7"
											}
										]
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositLPToVault",
									"nameLocation": "2353:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "lp",
												"nameLocation": "2379:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2371:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2391:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2383:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2406:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2398:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:46:7"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2426:0:7"
									},
									"scope": 1818,
									"src": "2344:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "2826:223:7",
										"statements": [
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "token_",
														"nameLocation": "2855:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "2837:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 1583,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1582,
																"name": "IERC20Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 830,
																"src": "2837:17:7"
															},
															"referencedDeclaration": 830,
															"src": "2837:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"id": 1586,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "2882:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1585,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2864:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2837:51:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1593,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2928:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																			"typeString": "contract BeetsHelper"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																			"typeString": "contract BeetsHelper"
																		}
																	],
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2920:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1591,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2920:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2920:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1595,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "2935:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1589,
																"name": "token_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "2903:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 807,
															"src": "2903:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2903:40:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2955:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2947:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1597,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2947:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2947:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2903:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "2899:143:7",
												"trueBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "2959:83:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1605,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "3003:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3017:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1607,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3017:7:7",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					}
																				],
																				"id": 1606,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "3012:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3012:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint256",
																				"typeString": "type(uint256)"
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "3012:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1602,
																		"name": "token_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "2974:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeIncreaseAllowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 992,
																	"src": "2974:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$830_$",
																		"typeString": "function (contract IERC20Upgradeable,address,uint256)"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2974:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1612,
															"nodeType": "ExpressionStatement",
															"src": "2974:56:7"
														}
													]
												}
											}
										]
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approveIfNeeded",
									"nameLocation": "2768:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2793:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "2785:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2810:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "2802:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2784:32:7"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:0:7"
									},
									"scope": 1818,
									"src": "2759:290:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "3262:805:7",
										"statements": [
											{
												"assignments": [
													1631
												],
												"declarations": [
													{
														"constant": false,
														"id": 1631,
														"mutability": "mutable",
														"name": "joinKind",
														"nameLocation": "3279:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "3273:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1630,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3273:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1633,
												"initialValue": {
													"hexValue": "31",
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3290:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3273:18:7"
											},
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "amountsIn",
														"nameLocation": "3401:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "3384:26:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1636,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3384:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1637,
															"nodeType": "ArrayTypeName",
															"src": "3384:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1642,
																"name": "underlyings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "3427:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																	"typeString": "contract IAsset[] memory"
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3427:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3413:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1639,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3417:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1640,
															"nodeType": "ArrayTypeName",
															"src": "3417:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3413:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3384:62:7"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1646,
															"name": "amountsIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "3457:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1648,
														"indexExpression": {
															"id": 1647,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "3467:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3457:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1649,
														"name": "amtIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "3481:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3457:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "3457:29:7"
											},
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "minAmountOut",
														"nameLocation": "3507:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "3499:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3499:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"hexValue": "31",
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3522:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3499:24:7"
											},
											{
												"assignments": [
													1657
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "3588:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "3575:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1656,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3575:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1664,
												"initialValue": {
													"arguments": [
														{
															"id": 1660,
															"name": "joinKind",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "3610:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1661,
															"name": "amountsIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "3620:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1662,
															"name": "minAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "3631:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1658,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3599:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "3599:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3599:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3575:69:7"
											},
											{
												"assignments": [
													1669
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "3691:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "3657:41:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
															"typeString": "struct IBeetVault.JoinPoolRequest"
														},
														"typeName": {
															"id": 1668,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1667,
																"name": "IBeetVault.JoinPoolRequest",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2093,
																"src": "3657:26:7"
															},
															"referencedDeclaration": 2093,
															"src": "3657:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_storage_ptr",
																"typeString": "struct IBeetVault.JoinPoolRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"nodeType": "VariableDeclarationStatement",
												"src": "3657:41:7"
											},
											{
												"expression": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1671,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "3709:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
																"typeString": "struct IBeetVault.JoinPoolRequest memory"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "assets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2085,
														"src": "3709:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
															"typeString": "contract IAsset[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1674,
														"name": "underlyings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "3726:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
															"typeString": "contract IAsset[] memory"
														}
													},
													"src": "3709:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
														"typeString": "contract IAsset[] memory"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "3709:28:7"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1677,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "3748:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
																"typeString": "struct IBeetVault.JoinPoolRequest memory"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxAmountsIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2088,
														"src": "3748:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1680,
														"name": "amountsIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "3771:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "3748:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3748:32:7"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1683,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "3791:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
																"typeString": "struct IBeetVault.JoinPoolRequest memory"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "3791:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1686,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "3810:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "3791:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "3791:27:7"
											},
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1689,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "3829:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
																"typeString": "struct IBeetVault.JoinPoolRequest memory"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "fromInternalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "3829:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3859:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3829:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "3829:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1704,
															"name": "balVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "3951:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1705,
															"name": "amtIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "3961:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1698,
																				"name": "underlyings",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "3903:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																					"typeString": "contract IAsset[] memory"
																				}
																			},
																			"id": 1700,
																			"indexExpression": {
																				"id": 1699,
																				"name": "tokenIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1625,
																				"src": "3915:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3903:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IAsset_$1822",
																				"typeString": "contract IAsset"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IAsset_$1822",
																				"typeString": "contract IAsset"
																			}
																		],
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3895:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1696,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3895:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3895:32:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1695,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "3877:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$830_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3877:51:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 992,
														"src": "3877:73:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$830_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$830_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "3877:90:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1712,
															"name": "beetsPoolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "4008:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 1715,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4029:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																],
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4021:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1713,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4021:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4021:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1719,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4044:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4036:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1717,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4036:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4036:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1721,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "4051:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
																"typeString": "struct IBeetVault.JoinPoolRequest memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
																"typeString": "struct IBeetVault.JoinPoolRequest memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1709,
																	"name": "balVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "3989:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1708,
																"name": "IBeetVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "3978:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeetVault_$2299_$",
																	"typeString": "type(contract IBeetVault)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3978:20:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeetVault_$2299",
																"typeString": "contract IBeetVault"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "joinPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "3978:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_address_$_t_address_$_t_struct$_JoinPoolRequest_$2093_memory_ptr_$returns$__$",
															"typeString": "function (bytes32,address,address,struct IBeetVault.JoinPoolRequest memory) payable external"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "3978:81:7"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "3057:86:7",
										"text": " @dev Joins {beetsPoolId} using {underlyings[tokenIndex]} balance;"
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_joinPool",
									"nameLocation": "3158:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "underlyings",
												"nameLocation": "3184:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "3168:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 1619,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1618,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1822,
															"src": "3168:6:7"
														},
														"referencedDeclaration": 1822,
														"src": "3168:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$1822",
															"typeString": "contract IAsset"
														}
													},
													"id": 1620,
													"nodeType": "ArrayTypeName",
													"src": "3168:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amtIn",
												"nameLocation": "3205:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "3197:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "tokenIndex",
												"nameLocation": "3220:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "3212:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "beetsPoolId",
												"nameLocation": "3240:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "3232:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3167:85:7"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:0:7"
									},
									"scope": 1818,
									"src": "3149:918:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "4189:826:7",
										"statements": [
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "minAmountsOut",
														"nameLocation": "4298:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "4281:30:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1740,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1741,
															"nodeType": "ArrayTypeName",
															"src": "4281:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1749,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1746,
																"name": "underlyings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "4328:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
																	"typeString": "contract IAsset[] memory"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4328:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4314:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1743,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4318:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1744,
															"nodeType": "ArrayTypeName",
															"src": "4318:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4314:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4281:66:7"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1750,
															"name": "minAmountsOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "4358:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1752,
														"indexExpression": {
															"id": 1751,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "4372:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4358:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1753,
														"name": "amtOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "4386:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4358:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "4358:34:7"
											},
											{
												"assignments": [
													1757
												],
												"declarations": [
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "minAmountOut",
														"nameLocation": "4413:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "4405:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4405:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"hexValue": "31",
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4428:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4405:24:7"
											},
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "4494:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "4481:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1760,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4481:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4516:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1765,
															"name": "minAmountsOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "4518:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1766,
															"name": "minAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "4533:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1762,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4505:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "4505:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4505:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4481:65:7"
											},
											{
												"assignments": [
													1773
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "4593:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "4559:41:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
															"typeString": "struct IBeetVault.ExitPoolRequest"
														},
														"typeName": {
															"id": 1772,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1771,
																"name": "IBeetVault.ExitPoolRequest",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "4559:26:7"
															},
															"referencedDeclaration": 2118,
															"src": "4559:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_storage_ptr",
																"typeString": "struct IBeetVault.ExitPoolRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"nodeType": "VariableDeclarationStatement",
												"src": "4559:41:7"
											},
											{
												"expression": {
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1775,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "4611:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
																"typeString": "struct IBeetVault.ExitPoolRequest memory"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "assets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2110,
														"src": "4611:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
															"typeString": "contract IAsset[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1778,
														"name": "underlyings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "4628:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
															"typeString": "contract IAsset[] memory"
														}
													},
													"src": "4611:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
														"typeString": "contract IAsset[] memory"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "4611:28:7"
											},
											{
												"expression": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1781,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "4650:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
																"typeString": "struct IBeetVault.ExitPoolRequest memory"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2113,
														"src": "4650:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1784,
														"name": "minAmountsOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "4674:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4650:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "4650:37:7"
											},
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1787,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "4698:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
																"typeString": "struct IBeetVault.ExitPoolRequest memory"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2115,
														"src": "4698:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1790,
														"name": "userData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "4717:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "4698:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "4698:27:7"
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1793,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "4736:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
																"typeString": "struct IBeetVault.ExitPoolRequest memory"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "toInternalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2117,
														"src": "4736:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4764:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4736:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "4736:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1803,
															"name": "beetsPoolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "4915:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 1806,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4936:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BeetsHelper_$1818",
																		"typeString": "contract BeetsHelper"
																	}
																],
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4928:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1804,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4928:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4928:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1810,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4951:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4951:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4943:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1808,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4943:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4943:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1813,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "4964:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
																"typeString": "struct IBeetVault.ExitPoolRequest memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
																"typeString": "struct IBeetVault.ExitPoolRequest memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1800,
																	"name": "balVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "4896:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1799,
																"name": "IBeetVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "4885:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeetVault_$2299_$",
																	"typeString": "type(contract IBeetVault)"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4885:20:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeetVault_$2299",
																"typeString": "contract IBeetVault"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "exitPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2106,
														"src": "4885:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_payable_$_t_struct$_ExitPoolRequest_$2118_memory_ptr_$returns$__$",
															"typeString": "function (bytes32,address,address payable,struct IBeetVault.ExitPoolRequest memory) external"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4885:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "4885:87:7"
											}
										]
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exitPool",
									"nameLocation": "4084:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "underlyings",
												"nameLocation": "4110:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "4094:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 1727,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1726,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1822,
															"src": "4094:6:7"
														},
														"referencedDeclaration": 1822,
														"src": "4094:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$1822",
															"typeString": "contract IAsset"
														}
													},
													"id": 1728,
													"nodeType": "ArrayTypeName",
													"src": "4094:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "amtOut",
												"nameLocation": "4131:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "4123:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "tokenIndex",
												"nameLocation": "4147:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "4139:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "beetsPoolId",
												"nameLocation": "4167:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "4159:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:86:7"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4189:0:7"
									},
									"scope": 1818,
									"src": "4075:940:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1819,
							"src": "289:4731:7",
							"usedErrors": []
						}
					],
					"src": "43:4979:7"
				},
				"id": 7
			},
			"interfaces/IAsset.sol": {
				"ast": {
					"absolutePath": "interfaces/IAsset.sol",
					"exportedSymbols": {
						"IAsset": [
							1822
						]
					},
					"id": 1823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1820,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAsset",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1821,
								"nodeType": "StructuredDocumentation",
								"src": "62:315:8",
								"text": " @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."
							},
							"fullyImplemented": true,
							"id": 1822,
							"linearizedBaseContracts": [
								1822
							],
							"name": "IAsset",
							"nameLocation": "389:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1823,
							"src": "379:75:8",
							"usedErrors": []
						}
					],
					"src": "35:421:8"
				},
				"id": 8
			},
			"interfaces/IAuthorizer.sol": {
				"ast": {
					"absolutePath": "interfaces/IAuthorizer.sol",
					"exportedSymbols": {
						"IAuthorizer": [
							1837
						]
					},
					"id": 1838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAuthorizer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1837,
							"linearizedBaseContracts": [
								1837
							],
							"name": "IAuthorizer",
							"nameLocation": "72:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "91:123:9",
										"text": " @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."
									},
									"functionSelector": "9be2a884",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canPerform",
									"nameLocation": "229:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "actionId",
												"nameLocation": "258:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "250:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1826,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "285:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "277:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "where",
												"nameLocation": "311:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "303:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:84:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "347:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "347:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:6:9"
									},
									"scope": 1837,
									"src": "220:133:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1838,
							"src": "62:294:9",
							"usedErrors": []
						}
					],
					"src": "35:323:9"
				},
				"id": 9
			},
			"interfaces/IBeetVault.sol": {
				"ast": {
					"absolutePath": "interfaces/IBeetVault.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1322
						],
						"ContextUpgradeable": [
							1364
						],
						"ERC20Upgradeable": [
							752
						],
						"IAsset": [
							1822
						],
						"IAuthorizer": [
							1837
						],
						"IBeetVault": [
							2299
						],
						"IERC20MetadataUpgradeable": [
							855
						],
						"IERC20Upgradeable": [
							830
						],
						"ISignaturesValidator": [
							2317
						],
						"ITemporarilyPausable": [
							2335
						],
						"Initializable": [
							141
						]
					},
					"id": 2300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1840,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2300,
							"sourceUnit": 753,
							"src": "62:78:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ISignaturesValidator.sol",
							"file": "./ISignaturesValidator.sol",
							"id": 1841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2300,
							"sourceUnit": 2318,
							"src": "142:36:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ITemporarilyPausable.sol",
							"file": "./ITemporarilyPausable.sol",
							"id": 1842,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2300,
							"sourceUnit": 2336,
							"src": "180:36:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IAuthorizer.sol",
							"file": "./IAuthorizer.sol",
							"id": 1843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2300,
							"sourceUnit": 1838,
							"src": "218:27:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IAsset.sol",
							"file": "./IAsset.sol",
							"id": 1844,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2300,
							"sourceUnit": 1823,
							"src": "247:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1845,
										"name": "ISignaturesValidator",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2317,
										"src": "297:20:10"
									},
									"id": 1846,
									"nodeType": "InheritanceSpecifier",
									"src": "297:20:10"
								},
								{
									"baseName": {
										"id": 1847,
										"name": "ITemporarilyPausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2335,
										"src": "319:20:10"
									},
									"id": 1848,
									"nodeType": "InheritanceSpecifier",
									"src": "319:20:10"
								}
							],
							"canonicalName": "IBeetVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2299,
							"linearizedBaseContracts": [
								2299,
								2335,
								2317
							],
							"name": "IBeetVault",
							"nameLocation": "283:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1859:57:10",
										"text": " @dev Returns the Vault's Authorizer."
									},
									"functionSelector": "aaabadc5",
									"id": 1855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAuthorizer",
									"nameLocation": "1931:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1944:2:10"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "1970:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAuthorizer_$1837",
													"typeString": "contract IAuthorizer"
												},
												"typeName": {
													"id": 1852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1851,
														"name": "IAuthorizer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "1970:11:10"
													},
													"referencedDeclaration": 1837,
													"src": "1970:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthorizer_$1837",
														"typeString": "contract IAuthorizer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:13:10"
									},
									"scope": 2299,
									"src": "1922:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "1991:179:10",
										"text": " @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."
									},
									"functionSelector": "058a628f",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAuthorizer",
									"nameLocation": "2185:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "newAuthorizer",
												"nameLocation": "2211:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2199:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAuthorizer_$1837",
													"typeString": "contract IAuthorizer"
												},
												"typeName": {
													"id": 1858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1857,
														"name": "IAuthorizer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "2199:11:10"
													},
													"referencedDeclaration": 1837,
													"src": "2199:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthorizer_$1837",
														"typeString": "contract IAuthorizer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:27:10"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2234:0:10"
									},
									"scope": 2299,
									"src": "2176:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "2243:82:10",
										"text": " @dev Emitted when a new authorizer is set by `setAuthorizer`."
									},
									"eventSelector": "94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef",
									"id": 1868,
									"name": "AuthorizerChanged",
									"nameLocation": "2337:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAuthorizer",
												"nameLocation": "2375:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2355:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAuthorizer_$1837",
													"typeString": "contract IAuthorizer"
												},
												"typeName": {
													"id": 1865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1864,
														"name": "IAuthorizer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "2355:11:10"
													},
													"referencedDeclaration": 1837,
													"src": "2355:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthorizer_$1837",
														"typeString": "contract IAuthorizer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:35:10"
									},
									"src": "2331:59:10"
								},
								{
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "3502:101:10",
										"text": " @dev Returns true if `user` has approved `relayer` to act as a relayer for them."
									},
									"functionSelector": "fec90d72",
									"id": 1878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasApprovedRelayer",
									"nameLocation": "3618:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3645:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "3637:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "relayer",
												"nameLocation": "3659:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "3651:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3651:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3636:31:10"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "3691:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3691:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3690:6:10"
									},
									"scope": 2299,
									"src": "3609:88:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "3705:182:10",
										"text": " @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."
									},
									"functionSelector": "fa6e671d",
									"id": 1888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRelayerApproval",
									"nameLocation": "3902:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3939:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3931:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "relayer",
												"nameLocation": "3964:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3956:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3987:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3982:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3982:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:82:10"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4011:0:10"
									},
									"scope": 2299,
									"src": "3893:119:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "4020:106:10",
										"text": " @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."
									},
									"eventSelector": "46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8",
									"id": 1897,
									"name": "RelayerApprovalChanged",
									"nameLocation": "4138:22:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"indexed": true,
												"mutability": "mutable",
												"name": "relayer",
												"nameLocation": "4177:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "4161:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4202:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "4186:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4186:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4215:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "4210:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4210:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:64:10"
									},
									"src": "4132:93:10"
								},
								{
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "4945:80:10",
										"text": " @dev Returns `user`'s Internal Balance for a set of tokens."
									},
									"functionSelector": "0f5a6efa",
									"id": 1910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInternalBalance",
									"nameLocation": "5040:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5067:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5059:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "5100:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5073:33:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_memory_ptr",
													"typeString": "contract IERC20Upgradeable[]"
												},
												"typeName": {
													"baseType": {
														"id": 1902,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1901,
															"name": "IERC20Upgradeable",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 830,
															"src": "5073:17:10"
														},
														"referencedDeclaration": 830,
														"src": "5073:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"id": 1903,
													"nodeType": "ArrayTypeName",
													"src": "5073:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_storage_ptr",
														"typeString": "contract IERC20Upgradeable[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5058:49:10"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5158:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1906,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5158:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1907,
													"nodeType": "ArrayTypeName",
													"src": "5158:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:18:10"
									},
									"scope": 2299,
									"src": "5031:145:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "5184:422:10",
										"text": " @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
									},
									"functionSelector": "0e8e3e84",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manageUserBalance",
									"nameLocation": "5621:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "ops",
												"nameLocation": "5662:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "5639:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$1931_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IBeetVault.UserBalanceOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 1913,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1912,
															"name": "UserBalanceOp",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1931,
															"src": "5639:13:10"
														},
														"referencedDeclaration": 1931,
														"src": "5639:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBalanceOp_$1931_storage_ptr",
															"typeString": "struct IBeetVault.UserBalanceOp"
														}
													},
													"id": 1914,
													"nodeType": "ArrayTypeName",
													"src": "5639:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserBalanceOp_$1931_storage_$dyn_storage_ptr",
														"typeString": "struct IBeetVault.UserBalanceOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5638:28:10"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5683:0:10"
									},
									"scope": 2299,
									"src": "5612:72:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IBeetVault.UserBalanceOp",
									"id": 1931,
									"members": [
										{
											"constant": false,
											"id": 1921,
											"mutability": "mutable",
											"name": "kind",
											"nameLocation": "5926:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "5908:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_UserBalanceOpKind_$1936",
												"typeString": "enum IBeetVault.UserBalanceOpKind"
											},
											"typeName": {
												"id": 1920,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1919,
													"name": "UserBalanceOpKind",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1936,
													"src": "5908:17:10"
												},
												"referencedDeclaration": 1936,
												"src": "5908:17:10",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_UserBalanceOpKind_$1936",
													"typeString": "enum IBeetVault.UserBalanceOpKind"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1924,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5948:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "5941:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAsset_$1822",
												"typeString": "contract IAsset"
											},
											"typeName": {
												"id": 1923,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1922,
													"name": "IAsset",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1822,
													"src": "5941:6:10"
												},
												"referencedDeclaration": 1822,
												"src": "5941:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAsset_$1822",
													"typeString": "contract IAsset"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1926,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5972:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "5964:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1925,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5964:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1928,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "5997:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "5989:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1927,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5989:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1930,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "6030:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "6014:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1929,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6014:15:10",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBalanceOp",
									"nameLocation": "5883:13:10",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "5876:171:10",
									"visibility": "public"
								},
								{
									"canonicalName": "IBeetVault.UserBalanceOpKind",
									"id": 1936,
									"members": [
										{
											"id": 1932,
											"name": "DEPOSIT_INTERNAL",
											"nameLocation": "7734:16:10",
											"nodeType": "EnumValue",
											"src": "7734:16:10"
										},
										{
											"id": 1933,
											"name": "WITHDRAW_INTERNAL",
											"nameLocation": "7761:17:10",
											"nodeType": "EnumValue",
											"src": "7761:17:10"
										},
										{
											"id": 1934,
											"name": "TRANSFER_INTERNAL",
											"nameLocation": "7789:17:10",
											"nodeType": "EnumValue",
											"src": "7789:17:10"
										},
										{
											"id": 1935,
											"name": "TRANSFER_EXTERNAL",
											"nameLocation": "7817:17:10",
											"nodeType": "EnumValue",
											"src": "7817:17:10"
										}
									],
									"name": "UserBalanceOpKind",
									"nameLocation": "7705:17:10",
									"nodeType": "EnumDefinition",
									"src": "7700:141:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "7849:323:10",
										"text": " @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."
									},
									"eventSelector": "18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c42",
									"id": 1946,
									"name": "InternalBalanceChanged",
									"nameLocation": "8184:22:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8223:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "8207:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8207:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8255:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "8229:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1941,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1940,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "8229:17:10"
													},
													"referencedDeclaration": 830,
													"src": "8229:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"indexed": false,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "8269:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "8262:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1943,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8262:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8206:69:10"
									},
									"src": "8178:98:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "8284:133:10",
										"text": " @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."
									},
									"eventSelector": "540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c",
									"id": 1958,
									"name": "ExternalBalanceTransfer",
									"nameLocation": "8429:23:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8489:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "8463:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1948,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "8463:17:10"
													},
													"referencedDeclaration": 830,
													"src": "8463:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8521:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "8505:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8505:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8546:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "8538:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8538:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8574:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "8566:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8566:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8452:135:10"
									},
									"src": "8423:165:10"
								},
								{
									"canonicalName": "IBeetVault.PoolSpecialization",
									"id": 1962,
									"members": [
										{
											"id": 1959,
											"name": "GENERAL",
											"nameLocation": "9722:7:10",
											"nodeType": "EnumValue",
											"src": "9722:7:10"
										},
										{
											"id": 1960,
											"name": "MINIMAL_SWAP_INFO",
											"nameLocation": "9740:17:10",
											"nodeType": "EnumValue",
											"src": "9740:17:10"
										},
										{
											"id": 1961,
											"name": "TWO_TOKEN",
											"nameLocation": "9768:9:10",
											"nodeType": "EnumValue",
											"src": "9768:9:10"
										}
									],
									"name": "PoolSpecialization",
									"nameLocation": "9692:18:10",
									"nodeType": "EnumDefinition",
									"src": "9687:97:10"
								},
								{
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "9792:714:10",
										"text": " @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."
									},
									"functionSelector": "09b2760f",
									"id": 1971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "10521:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "specialization",
												"nameLocation": "10553:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "10534:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolSpecialization_$1962",
													"typeString": "enum IBeetVault.PoolSpecialization"
												},
												"typeName": {
													"id": 1965,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1964,
														"name": "PoolSpecialization",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1962,
														"src": "10534:18:10"
													},
													"referencedDeclaration": 1962,
													"src": "10534:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolSpecialization_$1962",
														"typeString": "enum IBeetVault.PoolSpecialization"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10533:35:10"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "10587:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1968,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10587:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10586:9:10"
									},
									"scope": 2299,
									"src": "10512:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "10604:86:10",
										"text": " @dev Emitted when a Pool is registered by calling `registerPool`."
									},
									"eventSelector": "3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e",
									"id": 1981,
									"name": "PoolRegistered",
									"nameLocation": "10702:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "10733:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "10717:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1973,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10717:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "10757:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "10741:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10741:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"indexed": false,
												"mutability": "mutable",
												"name": "specialization",
												"nameLocation": "10789:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "10770:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolSpecialization_$1962",
													"typeString": "enum IBeetVault.PoolSpecialization"
												},
												"typeName": {
													"id": 1978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1977,
														"name": "PoolSpecialization",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1962,
														"src": "10770:18:10"
													},
													"referencedDeclaration": 1962,
													"src": "10770:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolSpecialization_$1962",
														"typeString": "enum IBeetVault.PoolSpecialization"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10716:88:10"
									},
									"src": "10696:109:10"
								},
								{
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "10813:87:10",
										"text": " @dev Returns a Pool's contract address and specialization setting."
									},
									"functionSelector": "f6c00927",
									"id": 1992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "10915:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "10931:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "10923:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1983,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10922:16:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "10962:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10962:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "10971:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolSpecialization_$1962",
													"typeString": "enum IBeetVault.PoolSpecialization"
												},
												"typeName": {
													"id": 1989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1988,
														"name": "PoolSpecialization",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1962,
														"src": "10971:18:10"
													},
													"referencedDeclaration": 1962,
													"src": "10971:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolSpecialization_$1962",
														"typeString": "enum IBeetVault.PoolSpecialization"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10961:29:10"
									},
									"scope": 2299,
									"src": "10906:85:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "10999:1443:10",
										"text": " @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."
									},
									"functionSelector": "66a9c7d2",
									"id": 2005,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerTokens",
									"nameLocation": "12457:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "12490:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "12482:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1994,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12482:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "12534:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "12507:33:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_memory_ptr",
													"typeString": "contract IERC20Upgradeable[]"
												},
												"typeName": {
													"baseType": {
														"id": 1997,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1996,
															"name": "IERC20Upgradeable",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 830,
															"src": "12507:17:10"
														},
														"referencedDeclaration": 830,
														"src": "12507:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"id": 1998,
													"nodeType": "ArrayTypeName",
													"src": "12507:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_storage_ptr",
														"typeString": "contract IERC20Upgradeable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "assetManagers",
												"nameLocation": "12568:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "12551:30:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2000,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12551:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2001,
													"nodeType": "ArrayTypeName",
													"src": "12551:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12471:117:10"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12597:0:10"
									},
									"scope": 2299,
									"src": "12448:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "12606:91:10",
										"text": " @dev Emitted when a Pool registers tokens by calling `registerTokens`."
									},
									"eventSelector": "f5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec4",
									"id": 2017,
									"name": "TokensRegistered",
									"nameLocation": "12709:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "12742:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "12726:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2007,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12726:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "12770:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "12750:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_memory_ptr",
													"typeString": "contract IERC20Upgradeable[]"
												},
												"typeName": {
													"baseType": {
														"id": 2010,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2009,
															"name": "IERC20Upgradeable",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 830,
															"src": "12750:17:10"
														},
														"referencedDeclaration": 830,
														"src": "12750:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"id": 2011,
													"nodeType": "ArrayTypeName",
													"src": "12750:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_storage_ptr",
														"typeString": "contract IERC20Upgradeable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"indexed": false,
												"mutability": "mutable",
												"name": "assetManagers",
												"nameLocation": "12788:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "12778:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2013,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12778:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2014,
													"nodeType": "ArrayTypeName",
													"src": "12778:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12725:77:10"
									},
									"src": "12703:100:10"
								},
								{
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "12811:577:10",
										"text": " @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."
									},
									"functionSelector": "7d3aeb96",
									"id": 2027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterTokens",
									"nameLocation": "13403:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "13428:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "13420:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2019,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13420:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "13463:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "13436:33:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_memory_ptr",
													"typeString": "contract IERC20Upgradeable[]"
												},
												"typeName": {
													"baseType": {
														"id": 2022,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2021,
															"name": "IERC20Upgradeable",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 830,
															"src": "13436:17:10"
														},
														"referencedDeclaration": 830,
														"src": "13436:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"id": 2023,
													"nodeType": "ArrayTypeName",
													"src": "13436:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_storage_ptr",
														"typeString": "contract IERC20Upgradeable[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13419:51:10"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13479:0:10"
									},
									"scope": 2299,
									"src": "13394:86:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "13488:95:10",
										"text": " @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."
									},
									"eventSelector": "7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610",
									"id": 2036,
									"name": "TokensDeregistered",
									"nameLocation": "13595:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "13630:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "13614:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2029,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13614:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "13658:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "13638:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_memory_ptr",
													"typeString": "contract IERC20Upgradeable[]"
												},
												"typeName": {
													"baseType": {
														"id": 2032,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2031,
															"name": "IERC20Upgradeable",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 830,
															"src": "13638:17:10"
														},
														"referencedDeclaration": 830,
														"src": "13638:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"id": 2033,
													"nodeType": "ArrayTypeName",
													"src": "13638:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_storage_ptr",
														"typeString": "contract IERC20Upgradeable[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13613:52:10"
									},
									"src": "13589:77:10"
								},
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "13674:1059:10",
										"text": " @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."
									},
									"functionSelector": "b05f8e48",
									"id": 2053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolTokenInfo",
									"nameLocation": "14748:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "14773:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "14765:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14765:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14799:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "14781:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2040,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "14781:17:10"
													},
													"referencedDeclaration": 830,
													"src": "14781:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14764:41:10"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "cash",
												"nameLocation": "14878:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "14870:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14870:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "managed",
												"nameLocation": "14905:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "14897:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14897:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "lastChangeBlock",
												"nameLocation": "14935:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "14927:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14927:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "assetManager",
												"nameLocation": "14973:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "14965:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14965:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14855:141:10"
									},
									"scope": 2299,
									"src": "14739:258:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "15005:841:10",
										"text": " @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."
									},
									"functionSelector": "f94d4668",
									"id": 2068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolTokens",
									"nameLocation": "15861:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "15883:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "15875:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15875:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15874:16:10"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "15982:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "15955:33:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_memory_ptr",
													"typeString": "contract IERC20Upgradeable[]"
												},
												"typeName": {
													"baseType": {
														"id": 2059,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2058,
															"name": "IERC20Upgradeable",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 830,
															"src": "15955:17:10"
														},
														"referencedDeclaration": 830,
														"src": "15955:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"id": 2060,
													"nodeType": "ArrayTypeName",
													"src": "15955:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_storage_ptr",
														"typeString": "contract IERC20Upgradeable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "balances",
												"nameLocation": "16020:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "16003:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2062,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16003:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2063,
													"nodeType": "ArrayTypeName",
													"src": "16003:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "lastChangeBlock",
												"nameLocation": "16051:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "16043:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16043:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15940:137:10"
									},
									"scope": 2299,
									"src": "15852:226:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "16086:2335:10",
										"text": " @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."
									},
									"functionSelector": "b95cac28",
									"id": 2081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "joinPool",
									"nameLocation": "18436:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "18463:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "18455:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2070,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "18488:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "18480:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18480:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18513:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "18505:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18505:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "18556:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "18533:30:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_memory_ptr",
													"typeString": "struct IBeetVault.JoinPoolRequest"
												},
												"typeName": {
													"id": 2077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2076,
														"name": "JoinPoolRequest",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2093,
														"src": "18533:15:10"
													},
													"referencedDeclaration": 2093,
													"src": "18533:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_JoinPoolRequest_$2093_storage_ptr",
														"typeString": "struct IBeetVault.JoinPoolRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18444:126:10"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18587:0:10"
									},
									"scope": 2299,
									"src": "18427:161:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IBeetVault.JoinPoolRequest",
									"id": 2093,
									"members": [
										{
											"constant": false,
											"id": 2085,
											"mutability": "mutable",
											"name": "assets",
											"nameLocation": "18639:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2093,
											"src": "18630:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
												"typeString": "contract IAsset[]"
											},
											"typeName": {
												"baseType": {
													"id": 2083,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2082,
														"name": "IAsset",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1822,
														"src": "18630:6:10"
													},
													"referencedDeclaration": 1822,
													"src": "18630:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAsset_$1822",
														"typeString": "contract IAsset"
													}
												},
												"id": 2084,
												"nodeType": "ArrayTypeName",
												"src": "18630:8:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
													"typeString": "contract IAsset[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2088,
											"mutability": "mutable",
											"name": "maxAmountsIn",
											"nameLocation": "18666:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2093,
											"src": "18656:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18656:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2087,
												"nodeType": "ArrayTypeName",
												"src": "18656:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2090,
											"mutability": "mutable",
											"name": "userData",
											"nameLocation": "18695:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2093,
											"src": "18689:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2089,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "18689:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2092,
											"mutability": "mutable",
											"name": "fromInternalBalance",
											"nameLocation": "18719:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 2093,
											"src": "18714:24:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2091,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "18714:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "JoinPoolRequest",
									"nameLocation": "18603:15:10",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "18596:150:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "18754:2523:10",
										"text": " @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."
									},
									"functionSelector": "8bdb3913",
									"id": 2106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exitPool",
									"nameLocation": "21292:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "21319:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "21311:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2095,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21311:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "21344:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "21336:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21336:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "21377:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "21361:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21361:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "21420:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "21397:30:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_memory_ptr",
													"typeString": "struct IBeetVault.ExitPoolRequest"
												},
												"typeName": {
													"id": 2102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2101,
														"name": "ExitPoolRequest",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "21397:15:10"
													},
													"referencedDeclaration": 2118,
													"src": "21397:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExitPoolRequest_$2118_storage_ptr",
														"typeString": "struct IBeetVault.ExitPoolRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21300:134:10"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21443:0:10"
									},
									"scope": 2299,
									"src": "21283:161:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IBeetVault.ExitPoolRequest",
									"id": 2118,
									"members": [
										{
											"constant": false,
											"id": 2110,
											"mutability": "mutable",
											"name": "assets",
											"nameLocation": "21495:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2118,
											"src": "21486:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
												"typeString": "contract IAsset[]"
											},
											"typeName": {
												"baseType": {
													"id": 2108,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2107,
														"name": "IAsset",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1822,
														"src": "21486:6:10"
													},
													"referencedDeclaration": 1822,
													"src": "21486:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAsset_$1822",
														"typeString": "contract IAsset"
													}
												},
												"id": 2109,
												"nodeType": "ArrayTypeName",
												"src": "21486:8:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
													"typeString": "contract IAsset[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2113,
											"mutability": "mutable",
											"name": "minAmountsOut",
											"nameLocation": "21522:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 2118,
											"src": "21512:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21512:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2112,
												"nodeType": "ArrayTypeName",
												"src": "21512:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2115,
											"mutability": "mutable",
											"name": "userData",
											"nameLocation": "21552:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2118,
											"src": "21546:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2114,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "21546:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2117,
											"mutability": "mutable",
											"name": "toInternalBalance",
											"nameLocation": "21576:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 2118,
											"src": "21571:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2116,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "21571:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExitPoolRequest",
									"nameLocation": "21459:15:10",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "21452:149:10",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "21609:118:10",
										"text": " @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."
									},
									"eventSelector": "e5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78",
									"id": 2135,
									"name": "PoolBalanceChanged",
									"nameLocation": "21739:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "21784:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "21768:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidityProvider",
												"nameLocation": "21817:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "21801:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21801:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "21865:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "21845:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_memory_ptr",
													"typeString": "contract IERC20Upgradeable[]"
												},
												"typeName": {
													"baseType": {
														"id": 2125,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2124,
															"name": "IERC20Upgradeable",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 830,
															"src": "21845:17:10"
														},
														"referencedDeclaration": 830,
														"src": "21845:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"id": 2126,
													"nodeType": "ArrayTypeName",
													"src": "21845:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20Upgradeable_$830_$dyn_storage_ptr",
														"typeString": "contract IERC20Upgradeable[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"indexed": false,
												"mutability": "mutable",
												"name": "deltas",
												"nameLocation": "21891:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "21882:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2128,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "21882:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2129,
													"nodeType": "ArrayTypeName",
													"src": "21882:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolFeeAmounts",
												"nameLocation": "21918:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "21908:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2131,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21908:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2132,
													"nodeType": "ArrayTypeName",
													"src": "21908:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21757:186:10"
									},
									"src": "21733:211:10"
								},
								{
									"canonicalName": "IBeetVault.PoolBalanceChangeKind",
									"id": 2138,
									"members": [
										{
											"id": 2136,
											"name": "JOIN",
											"nameLocation": "21990:4:10",
											"nodeType": "EnumValue",
											"src": "21990:4:10"
										},
										{
											"id": 2137,
											"name": "EXIT",
											"nameLocation": "22005:4:10",
											"nodeType": "EnumValue",
											"src": "22005:4:10"
										}
									],
									"name": "PoolBalanceChangeKind",
									"nameLocation": "21957:21:10",
									"nodeType": "EnumDefinition",
									"src": "21952:64:10"
								},
								{
									"canonicalName": "IBeetVault.SwapKind",
									"id": 2141,
									"members": [
										{
											"id": 2139,
											"name": "GIVEN_IN",
											"nameLocation": "25675:8:10",
											"nodeType": "EnumValue",
											"src": "25675:8:10"
										},
										{
											"id": 2140,
											"name": "GIVEN_OUT",
											"nameLocation": "25694:9:10",
											"nodeType": "EnumValue",
											"src": "25694:9:10"
										}
									],
									"name": "SwapKind",
									"nameLocation": "25655:8:10",
									"nodeType": "EnumDefinition",
									"src": "25650:60:10"
								},
								{
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "25718:599:10",
										"text": " @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."
									},
									"functionSelector": "52bbbe29",
									"id": 2157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "26332:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "singleSwap",
												"nameLocation": "26365:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "26347:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SingleSwap_$2173_memory_ptr",
													"typeString": "struct IBeetVault.SingleSwap"
												},
												"typeName": {
													"id": 2144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2143,
														"name": "SingleSwap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2173,
														"src": "26347:10:10"
													},
													"referencedDeclaration": 2173,
													"src": "26347:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SingleSwap_$2173_storage_ptr",
														"typeString": "struct IBeetVault.SingleSwap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "funds",
												"nameLocation": "26408:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "26386:27:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$2234_memory_ptr",
													"typeString": "struct IBeetVault.FundManagement"
												},
												"typeName": {
													"id": 2147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2146,
														"name": "FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "26386:14:10"
													},
													"referencedDeclaration": 2234,
													"src": "26386:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$2234_storage_ptr",
														"typeString": "struct IBeetVault.FundManagement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "26432:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "26424:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26424:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "26456:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "26448:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26448:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26336:135:10"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "26498:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26498:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26497:9:10"
									},
									"scope": 2299,
									"src": "26323:184:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IBeetVault.SingleSwap",
									"id": 2173,
									"members": [
										{
											"constant": false,
											"id": 2159,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "27112:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2173,
											"src": "27104:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2158,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "27104:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2162,
											"mutability": "mutable",
											"name": "kind",
											"nameLocation": "27138:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 2173,
											"src": "27129:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_SwapKind_$2141",
												"typeString": "enum IBeetVault.SwapKind"
											},
											"typeName": {
												"id": 2161,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2160,
													"name": "SwapKind",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2141,
													"src": "27129:8:10"
												},
												"referencedDeclaration": 2141,
												"src": "27129:8:10",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$2141",
													"typeString": "enum IBeetVault.SwapKind"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2165,
											"mutability": "mutable",
											"name": "assetIn",
											"nameLocation": "27160:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2173,
											"src": "27153:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAsset_$1822",
												"typeString": "contract IAsset"
											},
											"typeName": {
												"id": 2164,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2163,
													"name": "IAsset",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1822,
													"src": "27153:6:10"
												},
												"referencedDeclaration": 1822,
												"src": "27153:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAsset_$1822",
													"typeString": "contract IAsset"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2168,
											"mutability": "mutable",
											"name": "assetOut",
											"nameLocation": "27185:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2173,
											"src": "27178:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAsset_$1822",
												"typeString": "contract IAsset"
											},
											"typeName": {
												"id": 2167,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2166,
													"name": "IAsset",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1822,
													"src": "27178:6:10"
												},
												"referencedDeclaration": 1822,
												"src": "27178:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAsset_$1822",
													"typeString": "contract IAsset"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2170,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "27212:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2173,
											"src": "27204:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2169,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "27204:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2172,
											"mutability": "mutable",
											"name": "userData",
											"nameLocation": "27235:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2173,
											"src": "27229:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2171,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "27229:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SingleSwap",
									"nameLocation": "27082:10:10",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "27075:176:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "27259:2008:10",
										"text": " @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."
									},
									"functionSelector": "945bcec9",
									"id": 2199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchSwap",
									"nameLocation": "29282:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "kind",
												"nameLocation": "29311:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "29302:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$2141",
													"typeString": "enum IBeetVault.SwapKind"
												},
												"typeName": {
													"id": 2176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2175,
														"name": "SwapKind",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2141,
														"src": "29302:8:10"
													},
													"referencedDeclaration": 2141,
													"src": "29302:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SwapKind_$2141",
														"typeString": "enum IBeetVault.SwapKind"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "swaps",
												"nameLocation": "29349:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "29326:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$2210_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IBeetVault.BatchSwapStep[]"
												},
												"typeName": {
													"baseType": {
														"id": 2179,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2178,
															"name": "BatchSwapStep",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2210,
															"src": "29326:13:10"
														},
														"referencedDeclaration": 2210,
														"src": "29326:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchSwapStep_$2210_storage_ptr",
															"typeString": "struct IBeetVault.BatchSwapStep"
														}
													},
													"id": 2180,
													"nodeType": "ArrayTypeName",
													"src": "29326:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$2210_storage_$dyn_storage_ptr",
														"typeString": "struct IBeetVault.BatchSwapStep[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "29381:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "29365:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 2183,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2182,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1822,
															"src": "29365:6:10"
														},
														"referencedDeclaration": 1822,
														"src": "29365:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$1822",
															"typeString": "contract IAsset"
														}
													},
													"id": 2184,
													"nodeType": "ArrayTypeName",
													"src": "29365:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "funds",
												"nameLocation": "29420:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "29398:27:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$2234_memory_ptr",
													"typeString": "struct IBeetVault.FundManagement"
												},
												"typeName": {
													"id": 2187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2186,
														"name": "FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "29398:14:10"
													},
													"referencedDeclaration": 2234,
													"src": "29398:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$2234_storage_ptr",
														"typeString": "struct IBeetVault.FundManagement"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "limits",
												"nameLocation": "29452:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "29436:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2189,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "29436:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2190,
													"nodeType": "ArrayTypeName",
													"src": "29436:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "29477:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "29469:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29469:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29291:201:10"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "29519:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2195,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "29519:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2196,
													"nodeType": "ArrayTypeName",
													"src": "29519:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29518:17:10"
									},
									"scope": 2299,
									"src": "29273:263:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IBeetVault.BatchSwapStep",
									"id": 2210,
									"members": [
										{
											"constant": false,
											"id": 2201,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "30150:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2210,
											"src": "30142:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2200,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "30142:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2203,
											"mutability": "mutable",
											"name": "assetInIndex",
											"nameLocation": "30175:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2210,
											"src": "30167:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2202,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30167:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2205,
											"mutability": "mutable",
											"name": "assetOutIndex",
											"nameLocation": "30206:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 2210,
											"src": "30198:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30198:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2207,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "30238:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2210,
											"src": "30230:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30230:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2209,
											"mutability": "mutable",
											"name": "userData",
											"nameLocation": "30261:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2210,
											"src": "30255:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2208,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "30255:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BatchSwapStep",
									"nameLocation": "30117:13:10",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "30110:167:10",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "30285:94:10",
										"text": " @dev Emitted for each individual swap performed by `swap` or `batchSwap`."
									},
									"eventSelector": "2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b",
									"id": 2225,
									"name": "Swap",
									"nameLocation": "30391:4:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "30422:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "30406:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "30465:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "30439:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2214,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "30439:17:10"
													},
													"referencedDeclaration": 830,
													"src": "30439:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "30509:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "30483:34:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2217,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "30483:17:10"
													},
													"referencedDeclaration": 830,
													"src": "30483:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "30536:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "30528:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30528:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "30563:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "30555:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30555:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30395:184:10"
									},
									"src": "30385:195:10"
								},
								{
									"canonicalName": "IBeetVault.FundManagement",
									"id": 2234,
									"members": [
										{
											"constant": false,
											"id": 2227,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "31571:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "31563:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2226,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "31563:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2229,
											"mutability": "mutable",
											"name": "fromInternalBalance",
											"nameLocation": "31593:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "31588:24:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2228,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "31588:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2231,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "31639:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "31623:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 2230,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "31623:15:10",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2233,
											"mutability": "mutable",
											"name": "toInternalBalance",
											"nameLocation": "31664:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "31659:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2232,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "31659:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FundManagement",
									"nameLocation": "31537:14:10",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "31530:159:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "31697:1041:10",
										"text": " @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."
									},
									"functionSelector": "f84d066e",
									"id": 2255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "queryBatchSwap",
									"nameLocation": "32753:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "kind",
												"nameLocation": "32787:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "32778:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SwapKind_$2141",
													"typeString": "enum IBeetVault.SwapKind"
												},
												"typeName": {
													"id": 2237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2236,
														"name": "SwapKind",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2141,
														"src": "32778:8:10"
													},
													"referencedDeclaration": 2141,
													"src": "32778:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SwapKind_$2141",
														"typeString": "enum IBeetVault.SwapKind"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "swaps",
												"nameLocation": "32825:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "32802:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$2210_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IBeetVault.BatchSwapStep[]"
												},
												"typeName": {
													"baseType": {
														"id": 2240,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2239,
															"name": "BatchSwapStep",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2210,
															"src": "32802:13:10"
														},
														"referencedDeclaration": 2210,
														"src": "32802:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchSwapStep_$2210_storage_ptr",
															"typeString": "struct IBeetVault.BatchSwapStep"
														}
													},
													"id": 2241,
													"nodeType": "ArrayTypeName",
													"src": "32802:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$2210_storage_$dyn_storage_ptr",
														"typeString": "struct IBeetVault.BatchSwapStep[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "32857:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "32841:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_memory_ptr",
													"typeString": "contract IAsset[]"
												},
												"typeName": {
													"baseType": {
														"id": 2244,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2243,
															"name": "IAsset",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1822,
															"src": "32841:6:10"
														},
														"referencedDeclaration": 1822,
														"src": "32841:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAsset_$1822",
															"typeString": "contract IAsset"
														}
													},
													"id": 2245,
													"nodeType": "ArrayTypeName",
													"src": "32841:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IAsset_$1822_$dyn_storage_ptr",
														"typeString": "contract IAsset[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "funds",
												"nameLocation": "32896:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "32874:27:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FundManagement_$2234_memory_ptr",
													"typeString": "struct IBeetVault.FundManagement"
												},
												"typeName": {
													"id": 2248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2247,
														"name": "FundManagement",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "32874:14:10"
													},
													"referencedDeclaration": 2234,
													"src": "32874:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FundManagement_$2234_storage_ptr",
														"typeString": "struct IBeetVault.FundManagement"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32767:141:10"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "assetDeltas",
												"nameLocation": "32943:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "32927:27:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2251,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "32927:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2252,
													"nodeType": "ArrayTypeName",
													"src": "32927:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32926:29:10"
									},
									"scope": 2299,
									"src": "32744:212:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "33968:441:10",
										"text": " @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
									},
									"functionSelector": "e6c46092",
									"id": 2263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "managePoolBalance",
									"nameLocation": "34424:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "ops",
												"nameLocation": "34465:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "34442:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$2274_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IBeetVault.PoolBalanceOp[]"
												},
												"typeName": {
													"baseType": {
														"id": 2258,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2257,
															"name": "PoolBalanceOp",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2274,
															"src": "34442:13:10"
														},
														"referencedDeclaration": 2274,
														"src": "34442:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolBalanceOp_$2274_storage_ptr",
															"typeString": "struct IBeetVault.PoolBalanceOp"
														}
													},
													"id": 2259,
													"nodeType": "ArrayTypeName",
													"src": "34442:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolBalanceOp_$2274_storage_$dyn_storage_ptr",
														"typeString": "struct IBeetVault.PoolBalanceOp[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34441:28:10"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34478:0:10"
									},
									"scope": 2299,
									"src": "34415:64:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IBeetVault.PoolBalanceOp",
									"id": 2274,
									"members": [
										{
											"constant": false,
											"id": 2266,
											"mutability": "mutable",
											"name": "kind",
											"nameLocation": "34537:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 2274,
											"src": "34519:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PoolBalanceOpKind_$2278",
												"typeString": "enum IBeetVault.PoolBalanceOpKind"
											},
											"typeName": {
												"id": 2265,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2264,
													"name": "PoolBalanceOpKind",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2278,
													"src": "34519:17:10"
												},
												"referencedDeclaration": 2278,
												"src": "34519:17:10",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolBalanceOpKind_$2278",
													"typeString": "enum IBeetVault.PoolBalanceOpKind"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2268,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "34560:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2274,
											"src": "34552:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2267,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "34552:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2271,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "34595:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2274,
											"src": "34577:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
												"typeString": "contract IERC20Upgradeable"
											},
											"typeName": {
												"id": 2270,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2269,
													"name": "IERC20Upgradeable",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 830,
													"src": "34577:17:10"
												},
												"referencedDeclaration": 830,
												"src": "34577:17:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2273,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "34619:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2274,
											"src": "34611:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2272,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "34611:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolBalanceOp",
									"nameLocation": "34494:13:10",
									"nodeType": "StructDefinition",
									"scope": 2299,
									"src": "34487:146:10",
									"visibility": "public"
								},
								{
									"canonicalName": "IBeetVault.PoolBalanceOpKind",
									"id": 2278,
									"members": [
										{
											"id": 2275,
											"name": "WITHDRAW",
											"nameLocation": "35174:8:10",
											"nodeType": "EnumValue",
											"src": "35174:8:10"
										},
										{
											"id": 2276,
											"name": "DEPOSIT",
											"nameLocation": "35193:7:10",
											"nodeType": "EnumValue",
											"src": "35193:7:10"
										},
										{
											"id": 2277,
											"name": "UPDATE",
											"nameLocation": "35211:6:10",
											"nodeType": "EnumValue",
											"src": "35211:6:10"
										}
									],
									"name": "PoolBalanceOpKind",
									"nameLocation": "35145:17:10",
									"nodeType": "EnumDefinition",
									"src": "35140:84:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "35232:111:10",
										"text": " @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."
									},
									"eventSelector": "6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a",
									"id": 2292,
									"name": "PoolBalanceManaged",
									"nameLocation": "35355:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "35400:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "35384:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35384:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetManager",
												"nameLocation": "35433:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "35417:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35417:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "35482:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "35456:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2284,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 830,
														"src": "35456:17:10"
													},
													"referencedDeclaration": 830,
													"src": "35456:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$830",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"indexed": false,
												"mutability": "mutable",
												"name": "cashDelta",
												"nameLocation": "35505:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "35498:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2287,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35498:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"indexed": false,
												"mutability": "mutable",
												"name": "managedDelta",
												"nameLocation": "35532:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "35525:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2289,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35525:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35373:178:10"
									},
									"src": "35349:203:10"
								},
								{
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "36446:649:10",
										"text": " @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."
									},
									"functionSelector": "16c38b3c",
									"id": 2298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPaused",
									"nameLocation": "37110:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "37125:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "37120:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37120:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37119:13:10"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37141:0:10"
									},
									"scope": 2299,
									"src": "37101:41:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2300,
							"src": "273:36940:10",
							"usedErrors": []
						}
					],
					"src": "35:37180:10"
				},
				"id": 10
			},
			"interfaces/ISignaturesValidator.sol": {
				"ast": {
					"absolutePath": "interfaces/ISignaturesValidator.sol",
					"exportedSymbols": {
						"ISignaturesValidator": [
							2317
						]
					},
					"id": 2318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2301,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISignaturesValidator",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2302,
								"nodeType": "StructuredDocumentation",
								"src": "62:97:11",
								"text": " @dev Interface for the SignatureValidator helper, used to support meta-transactions."
							},
							"fullyImplemented": false,
							"id": 2317,
							"linearizedBaseContracts": [
								2317
							],
							"name": "ISignaturesValidator",
							"nameLocation": "171:20:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "199:62:11",
										"text": " @dev Returns the EIP712 domain separator."
									},
									"functionSelector": "ed24911d",
									"id": 2308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDomainSeparator",
									"nameLocation": "276:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:11"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "320:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:11"
									},
									"scope": 2317,
									"src": "267:62:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "337:85:11",
										"text": " @dev Returns the next nonce used by an address to sign messages."
									},
									"functionSelector": "90193b7c",
									"id": 2316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNextNonce",
									"nameLocation": "437:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "458:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "450:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:14:11"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "487:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:9:11"
									},
									"scope": 2317,
									"src": "428:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2318,
							"src": "161:338:11",
							"usedErrors": []
						}
					],
					"src": "35:466:11"
				},
				"id": 11
			},
			"interfaces/ITemporarilyPausable.sol": {
				"ast": {
					"absolutePath": "interfaces/ITemporarilyPausable.sol",
					"exportedSymbols": {
						"ITemporarilyPausable": [
							2335
						]
					},
					"id": 2336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2319,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITemporarilyPausable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2335,
							"linearizedBaseContracts": [
								2335
							],
							"name": "ITemporarilyPausable",
							"nameLocation": "72:20:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "100:85:12",
										"text": " @dev Emitted every time the pause state changes by `_setPaused`."
									},
									"eventSelector": "9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be64",
									"id": 2324,
									"name": "PausedStateChanged",
									"nameLocation": "197:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"indexed": false,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "221:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "216:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "216:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:13:12"
									},
									"src": "191:38:12"
								},
								{
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "237:59:12",
										"text": " @dev Returns the current paused state."
									},
									"functionSelector": "1c0de051",
									"id": 2334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPausedState",
									"nameLocation": "311:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:12"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "397:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "392:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "392:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "pauseWindowEndTime",
												"nameLocation": "426:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "418:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "bufferPeriodEndTime",
												"nameLocation": "467:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "459:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:120:12"
									},
									"scope": 2335,
									"src": "302:196:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2336,
							"src": "62:439:12",
							"usedErrors": []
						}
					],
					"src": "35:468:12"
				},
				"id": 12
			},
			"interfaces/IVault.sol": {
				"ast": {
					"absolutePath": "interfaces/IVault.sol",
					"exportedSymbols": {
						"IVault": [
							2349
						]
					},
					"id": 2350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2349,
							"linearizedBaseContracts": [
								2349
							],
							"name": "IVault",
							"nameLocation": "72:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "77c7b8fc",
									"id": 2342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPricePerFullShare",
									"nameLocation": "95:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:2:13"
									},
									"returnParameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "141:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "141:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "140:9:13"
									},
									"scope": 2349,
									"src": "86:64:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "de5f6268",
									"id": 2345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositAll",
									"nameLocation": "165:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:13"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:13"
									},
									"scope": 2349,
									"src": "156:31:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "853828b6",
									"id": 2348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nameLocation": "202:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "213:2:13"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:13"
									},
									"scope": 2349,
									"src": "193:32:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2350,
							"src": "62:166:13",
							"usedErrors": []
						}
					],
					"src": "35:195:13"
				},
				"id": 13
			}
		}
	}
}